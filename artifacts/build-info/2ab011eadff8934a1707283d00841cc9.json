{"id":"2ab011eadff8934a1707283d00841cc9","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n  function description() external view returns (string memory);\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n} "},"contracts/interfaces/KeeperCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface KeeperCompatibleInterface {\n  /**\n   * @notice méthode qui est simulée par le keeper pour vérifier si l'upkeep est nécessaire\n   * @param checkData données passées à la fonction checkUpkeep pour indiquer le type d'upkeep requis\n   * @return upkeepNeeded boolean indiquant si l'upkeep est nécessaire, performData bytes qui seront passées à performUpkeep\n   */\n  function checkUpkeep(bytes calldata checkData) external view returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice méthode qui est appelée par le keeper pour effectuer l'upkeep\n   * @param performData données passées à performUpkeep\n   */\n  function performUpkeep(bytes calldata performData) external;\n} "},"contracts/mocks/MockERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n * @title MockERC20\n * @dev Contrat de stablecoin mock pour les tests\n */\ncontract MockERC20 is ERC20 {\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}\n\n    /**\n     * @dev Fonction pour créer des jetons de test\n     * @param account Adresse du destinataire\n     * @param amount Montant à créer\n     */\n    function mint(address account, uint256 amount) external {\n        _mint(account, amount);\n    }\n} "},"contracts/mocks/MockV3Aggregator.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title MockV3Aggregator\n * @dev Contrat mock pour simuler l'oracle Chainlink dans les tests\n */\ncontract MockV3Aggregator {\n    uint8 public decimals;\n    int256 public latestAnswer;\n    uint256 public latestTimestamp;\n    uint256 public latestRound;\n\n    mapping(uint256 => int256) public getAnswer;\n    mapping(uint256 => uint256) public getTimestamp;\n    mapping(uint256 => uint256) private getStartedAt;\n\n    constructor(uint8 _decimals, int256 _initialAnswer) {\n        decimals = _decimals;\n        updateAnswer(_initialAnswer);\n    }\n\n    function updateAnswer(int256 _answer) public {\n        latestAnswer = _answer;\n        latestTimestamp = block.timestamp;\n        latestRound++;\n        getAnswer[latestRound] = _answer;\n        getTimestamp[latestRound] = block.timestamp;\n        getStartedAt[latestRound] = block.timestamp;\n    }\n\n    function updateRoundData(\n        uint80 _roundId,\n        int256 _answer,\n        uint256 _timestamp,\n        uint256 _startedAt\n    ) public {\n        latestRound = _roundId;\n        latestAnswer = _answer;\n        latestTimestamp = _timestamp;\n        getAnswer[latestRound] = _answer;\n        getTimestamp[latestRound] = _timestamp;\n        getStartedAt[latestRound] = _startedAt;\n    }\n\n    function getRoundData(uint80 _roundId)\n        external\n        view\n        returns (\n            uint80 roundId,\n            int256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        )\n    {\n        return (\n            _roundId,\n            getAnswer[_roundId],\n            getStartedAt[_roundId],\n            getTimestamp[_roundId],\n            _roundId\n        );\n    }\n\n    function latestRoundData()\n        external\n        view\n        returns (\n            uint80 roundId,\n            int256 answer,\n            uint256 startedAt,\n            uint256 updatedAt,\n            uint80 answeredInRound\n        )\n    {\n        return (\n            uint80(latestRound),\n            latestAnswer,\n            getStartedAt[latestRound],\n            latestTimestamp,\n            uint80(latestRound)\n        );\n    }\n} "},"contracts/NFTCallSpread.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./interfaces/AggregatorV3Interface.sol\";\n\n/**\n * @title NFTCallSpread\n * @dev Contrat pour gérer des options financières call spread représentées par des NFTs\n */\ncontract NFTCallSpread is ERC721, ERC721URIStorage, Ownable {\n    struct CallSpread {\n        uint256 strikePrice1; // Prix d'exercice inférieur (en USD, multiplié par 10^8)\n        uint256 strikePrice2; // Prix d'exercice supérieur (en USD, multiplié par 10^8)\n        uint256 expiry;       // Timestamp d'expiration\n        uint256 collateral;   // Montant de collatéral déposé (en stablecoins)\n        address seller;       // Adresse du vendeur\n        address buyer;        // Adresse de l'acheteur\n        bool exercised;       // Flag indiquant si l'option a été exercée\n    }\n\n    // Compteur de tokenId pour le minting\n    uint256 private _nextTokenId;\n    \n    // Mapping de tokenId vers CallSpread\n    mapping(uint256 => CallSpread) public callSpreads;\n    \n    // Adresse du stablecoin utilisé comme collatéral\n    IERC20 public stablecoin;\n    \n    // Oracle Chainlink pour le prix BTC/USD\n    AggregatorV3Interface public priceFeed;\n    \n    // Événements\n    event CallSpreadCreated(uint256 indexed tokenId, address seller, uint256 strikePrice1, uint256 strikePrice2, uint256 expiry);\n    event CallSpreadPurchased(uint256 indexed tokenId, address buyer);\n    event CallSpreadExercised(uint256 indexed tokenId, uint256 payoff, uint256 btcPrice);\n    \n    /**\n     * @dev Constructeur initialisant le contrat\n     * @param _stablecoin Adresse du contrat du stablecoin\n     * @param _priceFeed Adresse de l'Oracle Chainlink pour BTC/USD\n     */\n    constructor(address _stablecoin, address _priceFeed) \n        ERC721(\"NFT Call Spread\", \"NFTCS\") \n        Ownable(msg.sender)\n    {\n        stablecoin = IERC20(_stablecoin);\n        priceFeed = AggregatorV3Interface(_priceFeed);\n    }\n    \n    /**\n     * @dev Créer un nouveau call spread\n     * @param strikePrice1 Prix d'exercice inférieur\n     * @param strikePrice2 Prix d'exercice supérieur\n     * @param expiry Timestamp d'expiration\n     * @param collateralAmount Montant de collatéral à déposer\n     * @param _tokenURI URI des métadonnées pour le NFT\n     */\n    function createCallSpread(\n        uint256 strikePrice1,\n        uint256 strikePrice2,\n        uint256 expiry,\n        uint256 collateralAmount,\n        string memory _tokenURI\n    ) external returns (uint256) {\n        require(strikePrice1 < strikePrice2, \"Strike1 doit etre inferieur a Strike2\");\n        require(expiry > block.timestamp, \"L'expiration doit etre dans le futur\");\n        require(collateralAmount > 0, \"Le collateral doit etre positif\");\n        \n        // Transférer le collatéral du vendeur au contrat\n        require(stablecoin.transferFrom(msg.sender, address(this), collateralAmount), \"Transfert de collateral echoue\");\n        \n        // Incrémenter le compteur de tokenId\n        uint256 tokenId = _nextTokenId++;\n        \n        // Créer le call spread\n        callSpreads[tokenId] = CallSpread({\n            strikePrice1: strikePrice1,\n            strikePrice2: strikePrice2,\n            expiry: expiry,\n            collateral: collateralAmount,\n            seller: msg.sender,\n            buyer: address(0),\n            exercised: false\n        });\n        \n        // Minter le NFT au vendeur\n        _safeMint(msg.sender, tokenId);\n        _setTokenURI(tokenId, _tokenURI);\n        \n        emit CallSpreadCreated(tokenId, msg.sender, strikePrice1, strikePrice2, expiry);\n        \n        return tokenId;\n    }\n    \n    /**\n     * @dev Acheter un call spread existant\n     * @param tokenId ID du token du call spread à acheter\n     */\n    function buyCallSpread(uint256 tokenId) external {\n        CallSpread storage cs = callSpreads[tokenId];\n        require(cs.expiry > block.timestamp, \"L'option a expire\");\n        require(cs.buyer == address(0), \"L'option a deja ete achetee\");\n        require(ownerOf(tokenId) != msg.sender, \"Vous ne pouvez pas acheter votre propre option\");\n        \n        // Mettre à jour l'acheteur\n        cs.buyer = msg.sender;\n        \n        // Transférer le NFT au nouvel acheteur\n        address owner = ownerOf(tokenId);\n        _transfer(owner, msg.sender, tokenId);\n        \n        emit CallSpreadPurchased(tokenId, msg.sender);\n    }\n    \n    /**\n     * @dev Exercer un call spread à l'expiration\n     * @param tokenId ID du token du call spread à exercer\n     */\n    function exerciseCallSpread(uint256 tokenId) external {\n        CallSpread storage cs = callSpreads[tokenId];\n        require(!cs.exercised, \"L'option a deja ete exercee\");\n        require(block.timestamp >= cs.expiry, \"L'option n'a pas encore expire\");\n        \n        // Marquer comme exercé\n        cs.exercised = true;\n        \n        // Obtenir le prix BTC/USD actuel\n        uint256 btcPrice = getCurrentBTCPrice();\n        \n        // Calculer le payoff\n        uint256 payoff = calculatePayoff(tokenId, btcPrice);\n        \n        // Déterminer les montants à transférer\n        address buyer = cs.buyer != address(0) ? cs.buyer : cs.seller;\n        \n        // Transférer le payoff à l'acheteur\n        if (payoff > 0) {\n            require(stablecoin.transfer(buyer, payoff), \"Transfert de payoff echoue\");\n        }\n        \n        // Retourner le collatéral restant au vendeur\n        uint256 remainingCollateral = cs.collateral - payoff;\n        if (remainingCollateral > 0) {\n            require(stablecoin.transfer(cs.seller, remainingCollateral), \"Transfert de collateral restant echoue\");\n        }\n        \n        emit CallSpreadExercised(tokenId, payoff, btcPrice);\n    }\n    \n    /**\n     * @dev Calculer le payoff pour un call spread\n     * @param tokenId ID du token du call spread\n     * @param currentPrice Prix actuel de BTC/USD\n     * @return Le montant du payoff\n     */\n    function calculatePayoff(uint256 tokenId, uint256 currentPrice) public view returns (uint256) {\n        CallSpread storage cs = callSpreads[tokenId];\n        \n        if (currentPrice <= cs.strikePrice1) {\n            // Prix en dessous du strike inférieur, payoff = 0\n            return 0;\n        } else if (currentPrice >= cs.strikePrice2) {\n            // Prix au-dessus du strike supérieur, payoff = strikePrice2 - strikePrice1\n            return cs.strikePrice2 - cs.strikePrice1;\n        } else {\n            // Prix entre les deux strikes, payoff = currentPrice - strikePrice1\n            return currentPrice - cs.strikePrice1;\n        }\n    }\n    \n    /**\n     * @dev Obtenir le prix actuel de BTC/USD depuis l'oracle Chainlink\n     * @return Prix BTC/USD multiplié par 10^8\n     */\n    function getCurrentBTCPrice() public view returns (uint256) {\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        require(price > 0, \"Prix BTC invalide\");\n        return uint256(price);\n    }\n    \n    // Fonctions nécessaires pour override ERC721URIStorage\n    function tokenURI(uint256 tokenId) public view override(ERC721, ERC721URIStorage) returns (string memory) {\n        return super.tokenURI(tokenId);\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721URIStorage) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n} "},"contracts/NFTCallSpreadKeeper.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./interfaces/KeeperCompatibleInterface.sol\";\nimport \"./NFTCallSpread.sol\";\n\n/**\n * @title NFTCallSpreadKeeper\n * @dev Contrat Chainlink Keeper pour exercer automatiquement les call spreads arrivés à maturité\n */\ncontract NFTCallSpreadKeeper is KeeperCompatibleInterface {\n    NFTCallSpread public nftCallSpread;\n    uint256 public immutable checkGasLimit;\n    \n    // Dernière option exercée\n    uint256 public lastProcessedId;\n    \n    // Nombre maximal d'options à exercer par transaction\n    uint256 public maxBatchSize;\n    \n    constructor(address _nftCallSpread, uint256 _checkGasLimit, uint256 _maxBatchSize) {\n        nftCallSpread = NFTCallSpread(_nftCallSpread);\n        checkGasLimit = _checkGasLimit;\n        maxBatchSize = _maxBatchSize;\n    }\n    \n    /**\n     * @dev Fonction vérifiée par Chainlink Automation pour déterminer si une exécution est nécessaire\n     * @return upkeepNeeded Indique si une exécution est nécessaire\n     * @return performData Données à passer à performUpkeep\n     */\n    function checkUpkeep(bytes calldata /* checkData */)\n        external\n        view\n        override\n        returns (bool upkeepNeeded, bytes memory performData)\n    {\n        uint256 currentId = lastProcessedId;\n        uint256 batchCount = 0;\n        uint256[] memory expiredTokenIds = new uint256[](maxBatchSize);\n        \n        // Parcourir les tokens pour trouver ceux qui sont expirés et non exercés\n        while (batchCount < maxBatchSize) {\n            // Si le token n'existe pas, on arrête la recherche\n            try nftCallSpread.ownerOf(currentId) returns (address) {\n                // Vérifier si le token est un call spread et s'il est arrivé à maturité\n                (uint256 strikePrice1, uint256 strikePrice2, uint256 expiry, uint256 collateral, address seller, address buyer, bool exercised) = \n                    getNFTCallSpreadDetails(currentId);\n                \n                // Si le token est arrivé à maturité et n'a pas été exercé\n                if (!exercised && expiry <= block.timestamp) {\n                    expiredTokenIds[batchCount] = currentId;\n                    batchCount++;\n                }\n            } catch {\n                // Si le token n'existe pas, on passe au suivant\n            }\n            \n            currentId++;\n        }\n        \n        // Préparer les données pour performUpkeep si nécessaire\n        if (batchCount > 0) {\n            // Réduire le tableau à la taille réelle\n            uint256[] memory tokenIdsToExercise = new uint256[](batchCount);\n            for (uint256 i = 0; i < batchCount; i++) {\n                tokenIdsToExercise[i] = expiredTokenIds[i];\n            }\n            \n            performData = abi.encode(tokenIdsToExercise, currentId);\n            upkeepNeeded = true;\n        } else {\n            upkeepNeeded = false;\n        }\n    }\n    \n    /**\n     * @dev Fonction exécutée par Chainlink Automation lorsque checkUpkeep indique que c'est nécessaire\n     * @param performData Données encodées par checkUpkeep\n     */\n    function performUpkeep(bytes calldata performData) external override {\n        (uint256[] memory tokenIdsToExercise, uint256 nextId) = abi.decode(performData, (uint256[], uint256));\n        \n        // Exercer chaque option\n        for (uint256 i = 0; i < tokenIdsToExercise.length; i++) {\n            try nftCallSpread.exerciseCallSpread(tokenIdsToExercise[i]) {\n                // Option exercée avec succès\n            } catch {\n                // En cas d'erreur, continuer avec l'option suivante\n            }\n        }\n        \n        // Mettre à jour le dernier ID traité\n        lastProcessedId = nextId;\n    }\n    \n    /**\n     * @dev Récupère les détails d'un call spread\n     * @param tokenId ID du token\n     * @return strikePrice1 Prix d'exercice inférieur\n     * @return strikePrice2 Prix d'exercice supérieur\n     * @return expiry Date d'expiration\n     * @return collateral Montant du collatéral\n     * @return seller Adresse du vendeur\n     * @return buyer Adresse de l'acheteur\n     * @return exercised Indique si l'option a été exercée\n     */\n    function getNFTCallSpreadDetails(uint256 tokenId) internal view returns (\n        uint256 strikePrice1,\n        uint256 strikePrice2,\n        uint256 expiry,\n        uint256 collateral,\n        address seller,\n        address buyer,\n        bool exercised\n    ) {\n        // Accéder aux champs individuels\n        (strikePrice1, strikePrice2, expiry, collateral, seller, buyer, exercised) = nftCallSpread.callSpreads(tokenId);\n        return (strikePrice1, strikePrice2, expiry, collateral, seller, buyer, exercised);\n    }\n    \n    /**\n     * @dev Fonction pour mettre à jour le nombre maximal d'options à exercer par transaction\n     * @param _maxBatchSize Nouvelle taille de lot maximale\n     */\n    function setMaxBatchSize(uint256 _maxBatchSize) external {\n        // Cette fonction devrait avoir une restriction d'accès dans un environnement de production\n        maxBatchSize = _maxBatchSize;\n    }\n} "}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/NFTCallSpreadKeeper.sol:47:18:\n   |\n47 |                 (uint256 strikePrice1, uint256 strikePrice2, uint256 expiry, uint256 collateral, address seller, address buyer, bool exercised) = \n   |                  ^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":1813,"file":"contracts/NFTCallSpreadKeeper.sol","start":1793},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/NFTCallSpreadKeeper.sol:47:40:\n   |\n47 |                 (uint256 strikePrice1, uint256 strikePrice2, uint256 expiry, uint256 collateral, address seller, address buyer, bool exercised) = \n   |                                        ^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":1835,"file":"contracts/NFTCallSpreadKeeper.sol","start":1815},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/NFTCallSpreadKeeper.sol:47:78:\n   |\n47 |                 (uint256 strikePrice1, uint256 strikePrice2, uint256 expiry, uint256 collateral, address seller, address buyer, bool exercised) = \n   |                                                                              ^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":1871,"file":"contracts/NFTCallSpreadKeeper.sol","start":1853},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/NFTCallSpreadKeeper.sol:47:98:\n   |\n47 |                 (uint256 strikePrice1, uint256 strikePrice2, uint256 expiry, uint256 collateral, address seller, address buyer, bool exercised) = \n   |                                                                                                  ^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":1887,"file":"contracts/NFTCallSpreadKeeper.sol","start":1873},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/NFTCallSpreadKeeper.sol:47:114:\n   |\n47 |                 (uint256 strikePrice1, uint256 strikePrice2, uint256 expiry, uint256 collateral, address seller, address buyer, bool exercised) = \n   |                                                                                                                  ^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":1902,"file":"contracts/NFTCallSpreadKeeper.sol","start":1889},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2288],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2289,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2288],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3576]},"id":152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":152,"sourceUnit":3577,"src":"132:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"140:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[3576],"IERC4906":[175],"IERC721":[2009]},"id":176,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":153,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":152,"src":"133:38:2","symbolAliases":[{"foreign":{"id":154,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":180,"src":"172:38:2","symbolAliases":[{"foreign":{"id":156,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"180:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":159,"name":"IERC165","nameLocations":["279:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"279:7:2"},"id":160,"nodeType":"InheritanceSpecifier","src":"279:7:2"},{"baseName":{"id":161,"name":"IERC721","nameLocations":["288:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2009,"src":"288:7:2"},"id":162,"nodeType":"InheritanceSpecifier","src":"288:7:2"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"212:45:2","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":175,"linearizedBaseContracts":[175,2009,3576],"name":"IERC4906","nameLocation":"267:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"302:201:2","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":167,"name":"MetadataUpdate","nameLocation":"514:14:2","nodeType":"EventDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:2","nodeType":"VariableDeclaration","scope":167,"src":"529:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:2"},"src":"508:39:2"},{"anonymous":false,"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"553:212:2","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":174,"name":"BatchMetadataUpdate","nameLocation":"776:19:2","nodeType":"EventDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:2","nodeType":"VariableDeclaration","scope":174,"src":"796:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:2","nodeType":"VariableDeclaration","scope":174,"src":"818:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:2"},"src":"770:68:2"}],"scope":176,"src":"257:583:2","usedErrors":[],"usedEvents":[167,174,1908,1917,1926]}],"src":"107:734:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[2009]},"id":180,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":177,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":180,"sourceUnit":2010,"src":"132:52:3","symbolAliases":[{"foreign":{"id":178,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"140:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[316],"IERC20Errors":[221],"IERC721Errors":[269]},"id":317,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":181,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"138:141:4","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":221,"linearizedBaseContracts":[221],"name":"IERC20Errors","nameLocation":"290:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"309:309:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":191,"name":"ERC20InsufficientBalance","nameLocation":"629:24:4","nodeType":"ErrorDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"sender","nameLocation":"662:6:4","nodeType":"VariableDeclaration","scope":191,"src":"654:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"balance","nameLocation":"678:7:4","nodeType":"VariableDeclaration","scope":191,"src":"670:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"needed","nameLocation":"695:6:4","nodeType":"VariableDeclaration","scope":191,"src":"687:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:4"},"src":"623:80:4"},{"documentation":{"id":192,"nodeType":"StructuredDocumentation","src":"709:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":196,"name":"ERC20InvalidSender","nameLocation":"872:18:4","nodeType":"ErrorDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":194,"mutability":"mutable","name":"sender","nameLocation":"899:6:4","nodeType":"VariableDeclaration","scope":196,"src":"891:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:4"},"src":"866:41:4"},{"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"913:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":201,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:4","nodeType":"ErrorDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:4","nodeType":"VariableDeclaration","scope":201,"src":"1104:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:4"},"src":"1077:45:4"},{"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"1128:345:4","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":210,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:4","nodeType":"ErrorDefinition","parameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"spender","nameLocation":"1519:7:4","nodeType":"VariableDeclaration","scope":210,"src":"1511:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:4","nodeType":"VariableDeclaration","scope":210,"src":"1528:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"needed","nameLocation":"1555:6:4","nodeType":"VariableDeclaration","scope":210,"src":"1547:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:4"},"src":"1478:85:4"},{"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"1569:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":215,"name":"ERC20InvalidApprover","nameLocation":"1754:20:4","nodeType":"ErrorDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"approver","nameLocation":"1783:8:4","nodeType":"VariableDeclaration","scope":215,"src":"1775:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":212,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:4"},"src":"1748:45:4"},{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"1799:195:4","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":220,"name":"ERC20InvalidSpender","nameLocation":"2005:19:4","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"spender","nameLocation":"2033:7:4","nodeType":"VariableDeclaration","scope":220,"src":"2025:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:4"},"src":"1999:43:4"}],"scope":317,"src":"280:1764:4","usedErrors":[191,196,201,210,215,220],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"2046:143:4","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":269,"linearizedBaseContracts":[269],"name":"IERC721Errors","nameLocation":"2200:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"2220:219:4","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":227,"name":"ERC721InvalidOwner","nameLocation":"2450:18:4","nodeType":"ErrorDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"owner","nameLocation":"2477:5:4","nodeType":"VariableDeclaration","scope":227,"src":"2469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:4"},"src":"2444:40:4"},{"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"2490:132:4","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":232,"name":"ERC721NonexistentToken","nameLocation":"2633:22:4","nodeType":"ErrorDefinition","parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:4","nodeType":"VariableDeclaration","scope":232,"src":"2656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:4"},"src":"2627:46:4"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"2679:289:4","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":241,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:4","nodeType":"ErrorDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"sender","nameLocation":"3008:6:4","nodeType":"VariableDeclaration","scope":241,"src":"3000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:4","nodeType":"VariableDeclaration","scope":241,"src":"3016:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"3041:5:4","nodeType":"VariableDeclaration","scope":241,"src":"3033:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:4"},"src":"2973:75:4"},{"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"3054:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":246,"name":"ERC721InvalidSender","nameLocation":"3217:19:4","nodeType":"ErrorDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"sender","nameLocation":"3245:6:4","nodeType":"VariableDeclaration","scope":246,"src":"3237:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:4"},"src":"3211:42:4"},{"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"3259:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":251,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:4","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:4","nodeType":"VariableDeclaration","scope":251,"src":"3451:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:4"},"src":"3423:46:4"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3475:247:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":258,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:4","nodeType":"ErrorDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"operator","nameLocation":"3768:8:4","nodeType":"VariableDeclaration","scope":258,"src":"3760:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:4","nodeType":"VariableDeclaration","scope":258,"src":"3778:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:4"},"src":"3727:68:4"},{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"3801:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":263,"name":"ERC721InvalidApprover","nameLocation":"3986:21:4","nodeType":"ErrorDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"approver","nameLocation":"4016:8:4","nodeType":"VariableDeclaration","scope":263,"src":"4008:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:4"},"src":"3980:46:4"},{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4032:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":268,"name":"ERC721InvalidOperator","nameLocation":"4240:21:4","nodeType":"ErrorDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"operator","nameLocation":"4270:8:4","nodeType":"VariableDeclaration","scope":268,"src":"4262:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:4"},"src":"4234:46:4"}],"scope":317,"src":"2190:2092:4","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"4284:145:4","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":316,"linearizedBaseContracts":[316],"name":"IERC1155Errors","nameLocation":"4440:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"4461:361:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":281,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:4","nodeType":"ErrorDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"sender","nameLocation":"4868:6:4","nodeType":"VariableDeclaration","scope":281,"src":"4860:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"balance","nameLocation":"4884:7:4","nodeType":"VariableDeclaration","scope":281,"src":"4876:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"needed","nameLocation":"4901:6:4","nodeType":"VariableDeclaration","scope":281,"src":"4893:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:4","nodeType":"VariableDeclaration","scope":281,"src":"4909:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:4"},"src":"4827:99:4"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"4932:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":286,"name":"ERC1155InvalidSender","nameLocation":"5095:20:4","nodeType":"ErrorDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"sender","nameLocation":"5124:6:4","nodeType":"VariableDeclaration","scope":286,"src":"5116:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:4"},"src":"5089:43:4"},{"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"5138:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":291,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:4","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:4","nodeType":"VariableDeclaration","scope":291,"src":"5331:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:4"},"src":"5302:47:4"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5355:256:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":298,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:4","nodeType":"ErrorDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"operator","nameLocation":"5659:8:4","nodeType":"VariableDeclaration","scope":298,"src":"5651:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"owner","nameLocation":"5677:5:4","nodeType":"VariableDeclaration","scope":298,"src":"5669:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:4"},"src":"5616:68:4"},{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"5690:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":303,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:4","nodeType":"ErrorDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"approver","nameLocation":"5906:8:4","nodeType":"VariableDeclaration","scope":303,"src":"5898:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:4"},"src":"5869:47:4"},{"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"5922:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":308,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:4","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"operator","nameLocation":"6161:8:4","nodeType":"VariableDeclaration","scope":308,"src":"6153:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:4"},"src":"6124:47:4"},{"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"6177:280:4","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":315,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:4","nodeType":"ErrorDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:4","nodeType":"VariableDeclaration","scope":315,"src":"6494:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":313,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:4","nodeType":"VariableDeclaration","scope":315,"src":"6513:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:4"},"src":"6462:73:4"}],"scope":317,"src":"4430:2107:4","usedErrors":[281,286,291,298,303,308,315],"usedEvents":[]}],"src":"112:6426:4"},"id":4},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2288],"ERC20":[831],"IERC20":[909],"IERC20Errors":[221],"IERC20Metadata":[935]},"id":832,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":318,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":832,"sourceUnit":910,"src":"131:36:5","symbolAliases":[{"foreign":{"id":319,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"139:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":832,"sourceUnit":936,"src":"168:63:5","symbolAliases":[{"foreign":{"id":321,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"176:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":832,"sourceUnit":2289,"src":"232:48:5","symbolAliases":[{"foreign":{"id":323,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"240:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":832,"sourceUnit":317,"src":"281:65:5","symbolAliases":[{"foreign":{"id":325,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"289:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":328,"name":"Context","nameLocations":["1133:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"1133:7:5"},"id":329,"nodeType":"InheritanceSpecifier","src":"1133:7:5"},{"baseName":{"id":330,"name":"IERC20","nameLocations":["1142:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":909,"src":"1142:6:5"},"id":331,"nodeType":"InheritanceSpecifier","src":"1142:6:5"},{"baseName":{"id":332,"name":"IERC20Metadata","nameLocations":["1150:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":935,"src":"1150:14:5"},"id":333,"nodeType":"InheritanceSpecifier","src":"1150:14:5"},{"baseName":{"id":334,"name":"IERC20Errors","nameLocations":["1166:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":221,"src":"1166:12:5"},"id":335,"nodeType":"InheritanceSpecifier","src":"1166:12:5"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"348:757:5","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":831,"linearizedBaseContracts":[831,221,935,909,2288],"name":"ERC20","nameLocation":"1124:5:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":339,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:5","nodeType":"VariableDeclaration","scope":831,"src":"1185:53:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":338,"keyName":"account","keyNameLocation":"1201:7:5","keyType":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":345,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:5","nodeType":"VariableDeclaration","scope":831,"src":"1245:83:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":344,"keyName":"account","keyNameLocation":"1261:7:5","keyType":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":343,"keyName":"spender","keyNameLocation":"1288:7:5","keyType":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":347,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:5","nodeType":"VariableDeclaration","scope":831,"src":"1335:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":349,"mutability":"mutable","name":"_name","nameLocation":"1385:5:5","nodeType":"VariableDeclaration","scope":831,"src":"1370:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":351,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:5","nodeType":"VariableDeclaration","scope":831,"src":"1396:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":350,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":367,"nodeType":"Block","src":"1657:57:5","statements":[{"expression":{"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":359,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1667:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":360,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"1675:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":362,"nodeType":"ExpressionStatement","src":"1667:13:5"},{"expression":{"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":363,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"1690:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":364,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"1700:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":366,"nodeType":"ExpressionStatement","src":"1690:17:5"}]},"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"1425:171:5","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":368,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"name_","nameLocation":"1627:5:5","nodeType":"VariableDeclaration","scope":368,"src":"1613:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":353,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:5","nodeType":"VariableDeclaration","scope":368,"src":"1634:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":355,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:5"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[],"src":"1657:0:5"},"scope":831,"src":"1601:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[922],"body":{"id":376,"nodeType":"Block","src":"1839:29:5","statements":[{"expression":{"id":374,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1856:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":373,"id":375,"nodeType":"Return","src":"1849:12:5"}]},"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"1720:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":377,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:5","nodeType":"FunctionDefinition","parameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"1792:2:5"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":377,"src":"1824:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":371,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:5"},"scope":831,"src":"1779:89:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[928],"body":{"id":385,"nodeType":"Block","src":"2043:31:5","statements":[{"expression":{"id":383,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"2060:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":382,"id":384,"nodeType":"Return","src":"2053:14:5"}]},"documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"1874:102:5","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":386,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:5","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"1996:2:5"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":386,"src":"2028:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":380,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:5"},"scope":831,"src":"1981:93:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[934],"body":{"id":394,"nodeType":"Block","src":"2763:26:5","statements":[{"expression":{"hexValue":"3138","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":391,"id":393,"nodeType":"Return","src":"2773:9:5"}]},"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"2080:622:5","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":395,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:5","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"2724:2:5"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":395,"src":"2756:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":389,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:5"},"scope":831,"src":"2707:82:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[858],"body":{"id":403,"nodeType":"Block","src":"2910:36:5","statements":[{"expression":{"id":401,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"2927:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":400,"id":402,"nodeType":"Return","src":"2920:19:5"}]},"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"2795:49:5","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":404,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:5","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[],"src":"2869:2:5"},"returnParameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"2901:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:5"},"scope":831,"src":"2849:97:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[866],"body":{"id":416,"nodeType":"Block","src":"3078:42:5","statements":[{"expression":{"baseExpression":{"id":412,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"3095:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":414,"indexExpression":{"id":413,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"3105:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":411,"id":415,"nodeType":"Return","src":"3088:25:5"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"2952:47:5","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":417,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:5","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"account","nameLocation":"3031:7:5","nodeType":"VariableDeclaration","scope":417,"src":"3023:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:5"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":417,"src":"3069:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:5"},"scope":831,"src":"3004:116:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":440,"nodeType":"Block","src":"3390:103:5","statements":[{"assignments":[428],"declarations":[{"constant":false,"id":428,"mutability":"mutable","name":"owner","nameLocation":"3408:5:5","nodeType":"VariableDeclaration","scope":440,"src":"3400:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":431,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":429,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"3416:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:5"},{"expression":{"arguments":[{"id":433,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3448:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":434,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"3455:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"3459:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":432,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"3438:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":437,"nodeType":"ExpressionStatement","src":"3438:27:5"},{"expression":{"hexValue":"74727565","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":426,"id":439,"nodeType":"Return","src":"3475:11:5"}]},"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"3126:184:5","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":441,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:5","nodeType":"FunctionDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"to","nameLocation":"3341:2:5","nodeType":"VariableDeclaration","scope":441,"src":"3333:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"value","nameLocation":"3353:5:5","nodeType":"VariableDeclaration","scope":441,"src":"3345:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":421,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:5"},"returnParameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":441,"src":"3384:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":424,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:5"},"scope":831,"src":"3315:178:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[886],"body":{"id":457,"nodeType":"Block","src":"3640:51:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":451,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"3657:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":453,"indexExpression":{"id":452,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3669:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":455,"indexExpression":{"id":454,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3676:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":450,"id":456,"nodeType":"Return","src":"3650:34:5"}]},"documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"3499:47:5","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":458,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:5","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"owner","nameLocation":"3578:5:5","nodeType":"VariableDeclaration","scope":458,"src":"3570:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":443,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"spender","nameLocation":"3593:7:5","nodeType":"VariableDeclaration","scope":458,"src":"3585:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:5"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":458,"src":"3631:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:5"},"scope":831,"src":"3551:140:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[896],"body":{"id":481,"nodeType":"Block","src":"4077:107:5","statements":[{"assignments":[469],"declarations":[{"constant":false,"id":469,"mutability":"mutable","name":"owner","nameLocation":"4095:5:5","nodeType":"VariableDeclaration","scope":481,"src":"4087:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":472,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":470,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"4103:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:5"},{"expression":{"arguments":[{"id":474,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"4134:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"4141:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4150:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":473,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[722,782],"referencedDeclaration":722,"src":"4125:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"4125:31:5"},{"expression":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":467,"id":480,"nodeType":"Return","src":"4166:11:5"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"3697:296:5","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:5","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"spender","nameLocation":"4023:7:5","nodeType":"VariableDeclaration","scope":482,"src":"4015:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value","nameLocation":"4040:5:5","nodeType":"VariableDeclaration","scope":482,"src":"4032:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:5"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"4071:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":465,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:5"},"scope":831,"src":"3998:186:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[908],"body":{"id":513,"nodeType":"Block","src":"4869:151:5","statements":[{"assignments":[495],"declarations":[{"constant":false,"id":495,"mutability":"mutable","name":"spender","nameLocation":"4887:7:5","nodeType":"VariableDeclaration","scope":513,"src":"4879:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":498,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":496,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"4897:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:5"},{"expression":{"arguments":[{"id":500,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4935:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"4941:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"4950:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":499,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"4919:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"4919:37:5"},{"expression":{"arguments":[{"id":506,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4976:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"4982:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"4986:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":505,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"4966:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":510,"nodeType":"ExpressionStatement","src":"4966:26:5"},{"expression":{"hexValue":"74727565","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":493,"id":512,"nodeType":"Return","src":"5002:11:5"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"4190:581:5","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":514,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:5","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"from","nameLocation":"4806:4:5","nodeType":"VariableDeclaration","scope":514,"src":"4798:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"to","nameLocation":"4820:2:5","nodeType":"VariableDeclaration","scope":514,"src":"4812:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"value","nameLocation":"4832:5:5","nodeType":"VariableDeclaration","scope":514,"src":"4824:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:5"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":514,"src":"4863:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":491,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:5"},"scope":831,"src":"4776:244:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":560,"nodeType":"Block","src":"5462:231:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":524,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"5476:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:5","typeDescriptions":{}}},"id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":538,"nodeType":"IfStatement","src":"5472:86:5","trueBody":{"id":537,"nodeType":"Block","src":"5496:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:5","typeDescriptions":{}}},"id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"5517:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"RevertStatement","src":"5510:37:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"5571:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:5","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":553,"nodeType":"IfStatement","src":"5567:86:5","trueBody":{"id":552,"nodeType":"Block","src":"5589:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:5","typeDescriptions":{}}},"id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":545,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"5610:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":551,"nodeType":"RevertStatement","src":"5603:39:5"}]}},{"expression":{"arguments":[{"id":555,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"5670:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":556,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"5676:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"5680:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":554,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"5662:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"5662:24:5"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"5026:362:5","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":561,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:5","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"from","nameLocation":"5420:4:5","nodeType":"VariableDeclaration","scope":561,"src":"5412:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"to","nameLocation":"5434:2:5","nodeType":"VariableDeclaration","scope":561,"src":"5426:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"value","nameLocation":"5446:5:5","nodeType":"VariableDeclaration","scope":561,"src":"5438:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:5"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"5462:0:5"},"scope":831,"src":"5393:300:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":637,"nodeType":"Block","src":"6083:1032:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":571,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6097:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:5","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":608,"nodeType":"Block","src":"6271:362:5","statements":[{"assignments":[583],"declarations":[{"constant":false,"id":583,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:5","nodeType":"VariableDeclaration","scope":608,"src":"6285:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":587,"initialValue":{"baseExpression":{"id":584,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"6307:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":586,"indexExpression":{"id":585,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6317:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":588,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"6340:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6354:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":598,"nodeType":"IfStatement","src":"6336:115:5","trueBody":{"id":597,"nodeType":"Block","src":"6361:90:5","statements":[{"errorCall":{"arguments":[{"id":592,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6411:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":593,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"6417:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6430:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":591,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6386:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":596,"nodeType":"RevertStatement","src":"6379:57:5"}]}},{"id":607,"nodeType":"UncheckedBlock","src":"6464:159:5","statements":[{"expression":{"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":599,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"6571:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":601,"indexExpression":{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6581:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":602,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"6589:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6603:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":606,"nodeType":"ExpressionStatement","src":"6571:37:5"}]}]},"id":609,"nodeType":"IfStatement","src":"6093:540:5","trueBody":{"id":581,"nodeType":"Block","src":"6117:148:5","statements":[{"expression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":577,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"6233:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6249:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":580,"nodeType":"ExpressionStatement","src":"6233:21:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":610,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"6647:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:5","typeDescriptions":{}}},"id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":629,"nodeType":"Block","src":"6862:206:5","statements":[{"id":628,"nodeType":"UncheckedBlock","src":"6876:182:5","statements":[{"expression":{"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":622,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"7021:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":624,"indexExpression":{"id":623,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"7031:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"7038:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":627,"nodeType":"ExpressionStatement","src":"7021:22:5"}]}]},"id":630,"nodeType":"IfStatement","src":"6643:425:5","trueBody":{"id":621,"nodeType":"Block","src":"6665:191:5","statements":[{"id":620,"nodeType":"UncheckedBlock","src":"6679:167:5","statements":[{"expression":{"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":616,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"6810:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6826:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":619,"nodeType":"ExpressionStatement","src":"6810:21:5"}]}]}},{"eventCall":{"arguments":[{"id":632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"7092:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"7098:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"7102:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":631,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"7083:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"EmitStatement","src":"7078:30:5"}]},"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"5699:304:5","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":638,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:5","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"from","nameLocation":"6033:4:5","nodeType":"VariableDeclaration","scope":638,"src":"6025:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"to","nameLocation":"6047:2:5","nodeType":"VariableDeclaration","scope":638,"src":"6039:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"value","nameLocation":"6059:5:5","nodeType":"VariableDeclaration","scope":638,"src":"6051:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:5"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"6083:0:5"},"scope":831,"src":"6008:1107:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":670,"nodeType":"Block","src":"7514:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":646,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"7528:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:5","typeDescriptions":{}}},"id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":660,"nodeType":"IfStatement","src":"7524:91:5","trueBody":{"id":659,"nodeType":"Block","src":"7551:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:5","typeDescriptions":{}}},"id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":652,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"7572:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":658,"nodeType":"RevertStatement","src":"7565:39:5"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:5","typeDescriptions":{}}},"id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"7644:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"7653:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":661,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"7624:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"7624:35:5"}]},"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"7121:332:5","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":671,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:5","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"account","nameLocation":"7481:7:5","nodeType":"VariableDeclaration","scope":671,"src":"7473:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":643,"mutability":"mutable","name":"value","nameLocation":"7498:5:5","nodeType":"VariableDeclaration","scope":671,"src":"7490:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:5"},"returnParameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"7514:0:5"},"scope":831,"src":"7458:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":703,"nodeType":"Block","src":"8040:150:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":679,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"8054:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:5","typeDescriptions":{}}},"id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"8050:89:5","trueBody":{"id":692,"nodeType":"Block","src":"8077:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:5","typeDescriptions":{}}},"id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":685,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"8098:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"RevertStatement","src":"8091:37:5"}]}},{"expression":{"arguments":[{"id":695,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"8156:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:5","typeDescriptions":{}}},"id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"8177:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":694,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"8148:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"ExpressionStatement","src":"8148:35:5"}]},"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"7672:307:5","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":704,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:5","nodeType":"FunctionDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"account","nameLocation":"8007:7:5","nodeType":"VariableDeclaration","scope":704,"src":"7999:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"value","nameLocation":"8024:5:5","nodeType":"VariableDeclaration","scope":704,"src":"8016:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:5"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[],"src":"8040:0:5"},"scope":831,"src":"7984:206:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":721,"nodeType":"Block","src":"8800:54:5","statements":[{"expression":{"arguments":[{"id":715,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"8819:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":716,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"8826:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"8835:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":714,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[722,782],"referencedDeclaration":782,"src":"8810:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":720,"nodeType":"ExpressionStatement","src":"8810:37:5"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"8196:525:5","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":722,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:5","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"owner","nameLocation":"8752:5:5","nodeType":"VariableDeclaration","scope":722,"src":"8744:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"8767:7:5","nodeType":"VariableDeclaration","scope":722,"src":"8759:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"value","nameLocation":"8784:5:5","nodeType":"VariableDeclaration","scope":722,"src":"8776:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:5"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[],"src":"8800:0:5"},"scope":831,"src":"8726:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":781,"nodeType":"Block","src":"9799:334:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":734,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"9813:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:5","typeDescriptions":{}}},"id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":748,"nodeType":"IfStatement","src":"9809:89:5","trueBody":{"id":747,"nodeType":"Block","src":"9834:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:5","typeDescriptions":{}}},"id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":740,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"9855:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"RevertStatement","src":"9848:39:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":749,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"9911:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:5","typeDescriptions":{}}},"id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":763,"nodeType":"IfStatement","src":"9907:90:5","trueBody":{"id":762,"nodeType":"Block","src":"9934:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:5","typeDescriptions":{}}},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":755,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"9955:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":761,"nodeType":"RevertStatement","src":"9948:38:5"}]}},{"expression":{"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":764,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"10006:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":767,"indexExpression":{"id":765,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"10018:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":768,"indexExpression":{"id":766,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10025:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"10036:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":771,"nodeType":"ExpressionStatement","src":"10006:35:5"},{"condition":{"id":772,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"10055:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":780,"nodeType":"IfStatement","src":"10051:76:5","trueBody":{"id":779,"nodeType":"Block","src":"10066:61:5","statements":[{"eventCall":{"arguments":[{"id":774,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"10094:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10101:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"10110:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":773,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"10085:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"EmitStatement","src":"10080:36:5"}]}}]},"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"8860:836:5","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":782,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:5","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"owner","nameLocation":"9727:5:5","nodeType":"VariableDeclaration","scope":782,"src":"9719:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":727,"mutability":"mutable","name":"spender","nameLocation":"9742:7:5","nodeType":"VariableDeclaration","scope":782,"src":"9734:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"value","nameLocation":"9759:5:5","nodeType":"VariableDeclaration","scope":782,"src":"9751:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:5","nodeType":"VariableDeclaration","scope":782,"src":"9766:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":730,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:5"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"9799:0:5"},"scope":831,"src":"9701:432:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":829,"nodeType":"Block","src":"10504:387:5","statements":[{"assignments":[793],"declarations":[{"constant":false,"id":793,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:5","nodeType":"VariableDeclaration","scope":829,"src":"10514:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":798,"initialValue":{"arguments":[{"id":795,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"10551:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":796,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"10558:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":794,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"10541:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":799,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"10580:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":800,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10599:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:5","memberName":"max","nodeType":"MemberAccess","src":"10599:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":828,"nodeType":"IfStatement","src":"10576:309:5","trueBody":{"id":827,"nodeType":"Block","src":"10618:267:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":806,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"10636:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"10655:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":816,"nodeType":"IfStatement","src":"10632:130:5","trueBody":{"id":815,"nodeType":"Block","src":"10662:100:5","statements":[{"errorCall":{"arguments":[{"id":810,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"10714:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":811,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"10723:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"10741:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":809,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"10687:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"RevertStatement","src":"10680:67:5"}]}},{"id":826,"nodeType":"UncheckedBlock","src":"10775:100:5","statements":[{"expression":{"arguments":[{"id":818,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"10812:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":819,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"10819:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":820,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"10828:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"10847:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":817,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[722,782],"referencedDeclaration":782,"src":"10803:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"10803:57:5"}]}]}}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"10139:271:5","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":830,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:5","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"owner","nameLocation":"10448:5:5","nodeType":"VariableDeclaration","scope":830,"src":"10440:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"spender","nameLocation":"10463:7:5","nodeType":"VariableDeclaration","scope":830,"src":"10455:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"value","nameLocation":"10480:5:5","nodeType":"VariableDeclaration","scope":830,"src":"10472:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:5"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"10504:0:5"},"scope":831,"src":"10415:476:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":832,"src":"1106:9787:5","usedErrors":[191,196,201,210,215,220],"usedEvents":[843,852]}],"src":"105:10789:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[909]},"id":910,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":833,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"132:71:6","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":909,"linearizedBaseContracts":[909],"name":"IERC20","nameLocation":"214:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"227:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":843,"name":"Transfer","nameLocation":"396:8:6","nodeType":"EventDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:6","nodeType":"VariableDeclaration","scope":843,"src":"405:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:6","nodeType":"VariableDeclaration","scope":843,"src":"427:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:6","nodeType":"VariableDeclaration","scope":843,"src":"447:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:6"},"src":"390:72:6"},{"anonymous":false,"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"468:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":852,"name":"Approval","nameLocation":"627:8:6","nodeType":"EventDefinition","parameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:6","nodeType":"VariableDeclaration","scope":852,"src":"636:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:6","nodeType":"VariableDeclaration","scope":852,"src":"659:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":850,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:6","nodeType":"VariableDeclaration","scope":852,"src":"684:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:6"},"src":"621:78:6"},{"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"705:65:6","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":858,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:6","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[],"src":"795:2:6"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":858,"src":"821:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:6"},"scope":909,"src":"775:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"836:71:6","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":866,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:6","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"account","nameLocation":"939:7:6","nodeType":"VariableDeclaration","scope":866,"src":"931:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:6"},"returnParameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":866,"src":"971:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:6"},"scope":909,"src":"912:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"986:213:6","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:6","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"1230:2:6","nodeType":"VariableDeclaration","scope":876,"src":"1222:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"1242:5:6","nodeType":"VariableDeclaration","scope":876,"src":"1234:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:6"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"1267:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:6"},"scope":909,"src":"1204:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"1279:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":886,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:6","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"owner","nameLocation":"1575:5:6","nodeType":"VariableDeclaration","scope":886,"src":"1567:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":878,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"spender","nameLocation":"1590:7:6","nodeType":"VariableDeclaration","scope":886,"src":"1582:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:6"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"1622:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:6"},"scope":909,"src":"1548:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"1637:667:6","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:6","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"spender","nameLocation":"2334:7:6","nodeType":"VariableDeclaration","scope":896,"src":"2326:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"value","nameLocation":"2351:5:6","nodeType":"VariableDeclaration","scope":896,"src":"2343:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:6"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"2376:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":893,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:6"},"scope":909,"src":"2309:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"2388:297:6","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":908,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:6","nodeType":"FunctionDefinition","parameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"from","nameLocation":"2720:4:6","nodeType":"VariableDeclaration","scope":908,"src":"2712:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"to","nameLocation":"2734:2:6","nodeType":"VariableDeclaration","scope":908,"src":"2726:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"value","nameLocation":"2746:5:6","nodeType":"VariableDeclaration","scope":908,"src":"2738:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:6"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":908,"src":"2771:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":905,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:6"},"scope":909,"src":"2690:87:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":910,"src":"204:2575:6","usedErrors":[],"usedEvents":[843,852]}],"src":"106:2674:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[909],"IERC20Metadata":[935]},"id":936,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":911,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":913,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":936,"sourceUnit":910,"src":"151:37:7","symbolAliases":[{"foreign":{"id":912,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"159:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":915,"name":"IERC20","nameLocations":["306:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":909,"src":"306:6:7"},"id":916,"nodeType":"InheritanceSpecifier","src":"306:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"190:87:7","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":935,"linearizedBaseContracts":[935,909],"name":"IERC20Metadata","nameLocation":"288:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"319:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":922,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:7","nodeType":"FunctionDefinition","parameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"391:2:7"},"returnParameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":922,"src":"417:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":919,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:7"},"scope":935,"src":"378:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":923,"nodeType":"StructuredDocumentation","src":"438:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":928,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:7","nodeType":"FunctionDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"514:2:7"},"returnParameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":928,"src":"540:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":925,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:7"},"scope":935,"src":"499:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"561:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":934,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:7","nodeType":"FunctionDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[],"src":"648:2:7"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":934,"src":"674:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":931,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:7"},"scope":935,"src":"631:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":936,"src":"278:405:7","usedErrors":[],"usedEvents":[843,852]}],"src":"125:559:7"},"id":7},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2288],"ERC165":[3564],"ERC721":[1892],"ERC721Utils":[2258],"IERC165":[3576],"IERC721":[2009],"IERC721Errors":[269],"IERC721Metadata":[2181],"Strings":[3540]},"id":1893,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":937,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":939,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1893,"sourceUnit":2010,"src":"133:38:8","symbolAliases":[{"foreign":{"id":938,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"141:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":941,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1893,"sourceUnit":2182,"src":"172:65:8","symbolAliases":[{"foreign":{"id":940,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"180:15:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":943,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1893,"sourceUnit":2259,"src":"238:52:8","symbolAliases":[{"foreign":{"id":942,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"246:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":945,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1893,"sourceUnit":2289,"src":"291:48:8","symbolAliases":[{"foreign":{"id":944,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"299:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":947,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1893,"sourceUnit":3541,"src":"340:48:8","symbolAliases":[{"foreign":{"id":946,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"348:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":950,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1893,"sourceUnit":3565,"src":"389:69:8","symbolAliases":[{"foreign":{"id":948,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"397:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":949,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"406:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":952,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1893,"sourceUnit":317,"src":"459:66:8","symbolAliases":[{"foreign":{"id":951,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"467:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":954,"name":"Context","nameLocations":["803:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2288,"src":"803:7:8"},"id":955,"nodeType":"InheritanceSpecifier","src":"803:7:8"},{"baseName":{"id":956,"name":"ERC165","nameLocations":["812:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3564,"src":"812:6:8"},"id":957,"nodeType":"InheritanceSpecifier","src":"812:6:8"},{"baseName":{"id":958,"name":"IERC721","nameLocations":["820:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2009,"src":"820:7:8"},"id":959,"nodeType":"InheritanceSpecifier","src":"820:7:8"},{"baseName":{"id":960,"name":"IERC721Metadata","nameLocations":["829:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":2181,"src":"829:15:8"},"id":961,"nodeType":"InheritanceSpecifier","src":"829:15:8"},{"baseName":{"id":962,"name":"IERC721Errors","nameLocations":["846:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":269,"src":"846:13:8"},"id":963,"nodeType":"InheritanceSpecifier","src":"846:13:8"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"527:247:8","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1892,"linearizedBaseContracts":[1892,269,2181,2009,3564,3576,2288],"name":"ERC721","nameLocation":"793:6:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":966,"libraryName":{"id":964,"name":"Strings","nameLocations":["872:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":3540,"src":"872:7:8"},"nodeType":"UsingForDirective","src":"866:26:8","typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":968,"mutability":"mutable","name":"_name","nameLocation":"931:5:8","nodeType":"VariableDeclaration","scope":1892,"src":"916:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":967,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":970,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:8","nodeType":"VariableDeclaration","scope":1892,"src":"963:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":969,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":974,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:8","nodeType":"VariableDeclaration","scope":1892,"src":"992:51:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":973,"keyName":"tokenId","keyNameLocation":"1008:7:8","keyType":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":972,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":978,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:8","nodeType":"VariableDeclaration","scope":1892,"src":"1050:51:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":977,"keyName":"owner","keyNameLocation":"1066:5:8","keyType":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":982,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:8","nodeType":"VariableDeclaration","scope":1892,"src":"1108:59:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":981,"keyName":"tokenId","keyNameLocation":"1124:7:8","keyType":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":988,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:8","nodeType":"VariableDeclaration","scope":1892,"src":"1174:86:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":987,"keyName":"owner","keyNameLocation":"1190:5:8","keyType":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":986,"keyName":"operator","keyNameLocation":"1215:8:8","keyType":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":985,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1004,"nodeType":"Block","src":"1436:57:8","statements":[{"expression":{"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":996,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"1446:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":997,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"1454:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":999,"nodeType":"ExpressionStatement","src":"1446:13:8"},{"expression":{"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1000,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"1469:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1001,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"1479:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1003,"nodeType":"ExpressionStatement","src":"1469:17:8"}]},"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"1267:108:8","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1005,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"name_","nameLocation":"1406:5:8","nodeType":"VariableDeclaration","scope":1005,"src":"1392:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":990,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:8","nodeType":"VariableDeclaration","scope":1005,"src":"1413:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":992,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:8"},"returnParameters":{"id":995,"nodeType":"ParameterList","parameters":[],"src":"1436:0:8"},"scope":1892,"src":"1380:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3563,3575],"body":{"id":1035,"nodeType":"Block","src":"1668:192:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1016,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1697:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1018,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"1717:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2009_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2009_$","typeString":"type(contract IERC721)"}],"id":1017,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2009","typeString":"type(contract IERC721)"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1022,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1753:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1024,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"1773:15:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2181_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2181_$","typeString":"type(contract IERC721Metadata)"}],"id":1023,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2181","typeString":"type(contract IERC721Metadata)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1031,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"1841:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1029,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1892_$","typeString":"type(contract super ERC721)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:8","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3563,"src":"1817:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1015,"id":1034,"nodeType":"Return","src":"1678:175:8"}]},"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"1499:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1036,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:8","nodeType":"FunctionDefinition","overrides":{"id":1012,"nodeType":"OverrideSpecifier","overrides":[{"id":1010,"name":"ERC165","nameLocations":["1636:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3564,"src":"1636:6:8"},{"id":1011,"name":"IERC165","nameLocations":["1644:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"1644:7:8"}],"src":"1627:25:8"},"parameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:8","nodeType":"VariableDeclaration","scope":1036,"src":"1587:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1007,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:8"},"returnParameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1036,"src":"1662:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1013,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:8"},"scope":1892,"src":"1560:300:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1934],"body":{"id":1063,"nodeType":"Block","src":"1991:136:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1044,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2005:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:8","typeDescriptions":{}}},"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1058,"nodeType":"IfStatement","src":"2001:87:8","trueBody":{"id":1057,"nodeType":"Block","src":"2026:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:8","typeDescriptions":{}}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1050,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"2047:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1056,"nodeType":"RevertStatement","src":"2040:37:8"}]}},{"expression":{"baseExpression":{"id":1059,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"2104:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1061,"indexExpression":{"id":1060,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2114:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1043,"id":1062,"nodeType":"Return","src":"2097:23:8"}]},"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"1866:48:8","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1064,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:8","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"owner","nameLocation":"1946:5:8","nodeType":"VariableDeclaration","scope":1064,"src":"1938:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:8"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1064,"src":"1982:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:8"},"scope":1892,"src":"1919:208:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1942],"body":{"id":1076,"nodeType":"Block","src":"2256:46:8","statements":[{"expression":{"arguments":[{"id":1073,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"2287:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1072,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"2273:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1071,"id":1075,"nodeType":"Return","src":"2266:29:8"}]},"documentation":{"id":1065,"nodeType":"StructuredDocumentation","src":"2133:46:8","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1077,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:8","nodeType":"FunctionDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:8","nodeType":"VariableDeclaration","scope":1077,"src":"2201:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:8"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1077,"src":"2247:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:8"},"scope":1892,"src":"2184:118:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2166],"body":{"id":1085,"nodeType":"Block","src":"2424:29:8","statements":[{"expression":{"id":1083,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"2441:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1082,"id":1084,"nodeType":"Return","src":"2434:12:8"}]},"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"2308:51:8","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1086,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:8","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"2377:2:8"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"2409:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1080,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:8"},"scope":1892,"src":"2364:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2172],"body":{"id":1094,"nodeType":"Block","src":"2579:31:8","statements":[{"expression":{"id":1092,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"2596:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1091,"id":1093,"nodeType":"Return","src":"2589:14:8"}]},"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"2459:53:8","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1095,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:8","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"2532:2:8"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1095,"src":"2564:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1089,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:8"},"scope":1892,"src":"2517:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2180],"body":{"id":1130,"nodeType":"Block","src":"2755:176:8","statements":[{"expression":{"arguments":[{"id":1104,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"2779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1103,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"2765:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1106,"nodeType":"ExpressionStatement","src":"2765:22:8"},{"assignments":[1108],"declarations":[{"constant":false,"id":1108,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:8","nodeType":"VariableDeclaration","scope":1130,"src":"2798:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1107,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1111,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1109,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"2822:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:8"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1114,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2855:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1112,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:8","typeDescriptions":{}}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:8","memberName":"length","nodeType":"MemberAccess","src":"2849:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:8","trueExpression":{"arguments":[{"id":1122,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"2891:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1123,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"2900:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:8","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2418,"src":"2900:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1119,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:8","typeDescriptions":{}}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:8","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:8","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1102,"id":1129,"nodeType":"Return","src":"2842:82:8"}]},"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"2616:55:8","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1131,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:8","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:8","nodeType":"VariableDeclaration","scope":1131,"src":"2694:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:8"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1131,"src":"2740:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1100,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:8"},"scope":1892,"src":"2676:255:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1139,"nodeType":"Block","src":"3239:26:8","statements":[{"expression":{"hexValue":"","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1136,"id":1138,"nodeType":"Return","src":"3249:9:8"}]},"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"2937:231:8","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:8","nodeType":"FunctionDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[],"src":"3190:2:8"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1140,"src":"3224:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1134,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:8"},"scope":1892,"src":"3173:92:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1982],"body":{"id":1155,"nodeType":"Block","src":"3383:52:8","statements":[{"expression":{"arguments":[{"id":1149,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"3402:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1150,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1151,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"3415:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1148,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1759,1825],"referencedDeclaration":1759,"src":"3393:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"ExpressionStatement","src":"3393:35:8"}]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"3271:46:8","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1156,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:8","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"to","nameLocation":"3347:2:8","nodeType":"VariableDeclaration","scope":1156,"src":"3339:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:8","nodeType":"VariableDeclaration","scope":1156,"src":"3351:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:8"},"returnParameters":{"id":1147,"nodeType":"ParameterList","parameters":[],"src":"3383:0:8"},"scope":1892,"src":"3322:113:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1998],"body":{"id":1172,"nodeType":"Block","src":"3572:78:8","statements":[{"expression":{"arguments":[{"id":1165,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3596:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1164,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"3582:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1167,"nodeType":"ExpressionStatement","src":"3582:22:8"},{"expression":{"arguments":[{"id":1169,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3635:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1168,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"3622:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1163,"id":1171,"nodeType":"Return","src":"3615:28:8"}]},"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"3441:50:8","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1173,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:8","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:8","nodeType":"VariableDeclaration","scope":1173,"src":"3517:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:8"},"returnParameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1173,"src":"3563:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:8"},"scope":1892,"src":"3496:154:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1990],"body":{"id":1188,"nodeType":"Block","src":"3792:69:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1182,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"3821:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1184,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"3835:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1185,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"3845:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1181,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3802:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1187,"nodeType":"ExpressionStatement","src":"3802:52:8"}]},"documentation":{"id":1174,"nodeType":"StructuredDocumentation","src":"3656:56:8","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1189,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:8","nodeType":"FunctionDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"operator","nameLocation":"3752:8:8","nodeType":"VariableDeclaration","scope":1189,"src":"3744:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"approved","nameLocation":"3767:8:8","nodeType":"VariableDeclaration","scope":1189,"src":"3762:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1177,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:8"},"returnParameters":{"id":1180,"nodeType":"ParameterList","parameters":[],"src":"3792:0:8"},"scope":1892,"src":"3717:144:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2008],"body":{"id":1205,"nodeType":"Block","src":"4021:59:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1199,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"4038:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1201,"indexExpression":{"id":1200,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1192,"src":"4057:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1203,"indexExpression":{"id":1202,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"4064:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1198,"id":1204,"nodeType":"Return","src":"4031:42:8"}]},"documentation":{"id":1190,"nodeType":"StructuredDocumentation","src":"3867:55:8","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:8","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"owner","nameLocation":"3961:5:8","nodeType":"VariableDeclaration","scope":1206,"src":"3953:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"operator","nameLocation":"3976:8:8","nodeType":"VariableDeclaration","scope":1206,"src":"3968:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:8"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"4015:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1196,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:8"},"scope":1892,"src":"3927:153:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1974],"body":{"id":1251,"nodeType":"Block","src":"4222:498:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1216,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"4236:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:8","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1230,"nodeType":"IfStatement","src":"4232:87:8","trueBody":{"id":1229,"nodeType":"Block","src":"4254:65:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:8","typeDescriptions":{}}},"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1222,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"4275:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"RevertStatement","src":"4268:40:8"}]}},{"assignments":[1232],"declarations":[{"constant":false,"id":1232,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:8","nodeType":"VariableDeclaration","scope":1251,"src":"4537:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1239,"initialValue":{"arguments":[{"id":1234,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"4569:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1235,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"4573:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1236,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"4582:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1233,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"4561:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1240,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"4609:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1241,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"4626:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1250,"nodeType":"IfStatement","src":"4605:109:8","trueBody":{"id":1249,"nodeType":"Block","src":"4632:82:8","statements":[{"errorCall":{"arguments":[{"id":1244,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"4674:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1245,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"4680:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1246,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"4689:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1243,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"4653:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1248,"nodeType":"RevertStatement","src":"4646:57:8"}]}}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"4086:51:8","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1252,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:8","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"from","nameLocation":"4172:4:8","nodeType":"VariableDeclaration","scope":1252,"src":"4164:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"to","nameLocation":"4186:2:8","nodeType":"VariableDeclaration","scope":1252,"src":"4178:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:8","nodeType":"VariableDeclaration","scope":1252,"src":"4190:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:8"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[],"src":"4222:0:8"},"scope":1892,"src":"4142:578:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1964],"body":{"id":1269,"nodeType":"Block","src":"4862:56:8","statements":[{"expression":{"arguments":[{"id":1263,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"4889:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1264,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"4895:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1265,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"4899:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1262,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1270,1300],"referencedDeclaration":1300,"src":"4872:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1268,"nodeType":"ExpressionStatement","src":"4872:39:8"}]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"4726:55:8","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:8","nodeType":"FunctionDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"from","nameLocation":"4820:4:8","nodeType":"VariableDeclaration","scope":1270,"src":"4812:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"to","nameLocation":"4834:2:8","nodeType":"VariableDeclaration","scope":1270,"src":"4826:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:8","nodeType":"VariableDeclaration","scope":1270,"src":"4838:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:8"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"4862:0:8"},"scope":1892,"src":"4786:132:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1954],"body":{"id":1299,"nodeType":"Block","src":"5087:130:8","statements":[{"expression":{"arguments":[{"id":1283,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"5110:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1284,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5116:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1285,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5120:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1282,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"5097:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"ExpressionStatement","src":"5097:31:8"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1291,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"5172:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1293,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"5186:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1294,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5192:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1295,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1296,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"5205:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1288,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"5138:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2258_$","typeString":"type(library ERC721Utils)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:8","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2257,"src":"5138:33:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1298,"nodeType":"ExpressionStatement","src":"5138:72:8"}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"4924:55:8","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1300,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:8","nodeType":"FunctionDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"from","nameLocation":"5018:4:8","nodeType":"VariableDeclaration","scope":1300,"src":"5010:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"to","nameLocation":"5032:2:8","nodeType":"VariableDeclaration","scope":1300,"src":"5024:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:8","nodeType":"VariableDeclaration","scope":1300,"src":"5036:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"data","nameLocation":"5066:4:8","nodeType":"VariableDeclaration","scope":1300,"src":"5053:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1278,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:8"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[],"src":"5087:0:8"},"scope":1892,"src":"4984:233:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1312,"nodeType":"Block","src":"5807:40:8","statements":[{"expression":{"baseExpression":{"id":1308,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"5824:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1310,"indexExpression":{"id":1309,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"5832:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1307,"id":1311,"nodeType":"Return","src":"5817:23:8"}]},"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"5223:504:8","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1313,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:8","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:8","nodeType":"VariableDeclaration","scope":1313,"src":"5750:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:8"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1313,"src":"5798:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:8"},"scope":1892,"src":"5732:115:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1325,"nodeType":"Block","src":"6042:48:8","statements":[{"expression":{"baseExpression":{"id":1321,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"6059:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1323,"indexExpression":{"id":1322,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"6075:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1320,"id":1324,"nodeType":"Return","src":"6052:31:8"}]},"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"5853:105:8","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1326,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:8","nodeType":"FunctionDefinition","parameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:8","nodeType":"VariableDeclaration","scope":1326,"src":"5985:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1315,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:8"},"returnParameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1326,"src":"6033:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:8"},"scope":1892,"src":"5963:127:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1361,"nodeType":"Block","src":"6510:163:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1338,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"6539:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:8","typeDescriptions":{}}},"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1344,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"6577:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1345,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"6586:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1348,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"6614:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1349,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"6621:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1347,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"6597:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1353,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"6646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1352,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"6633:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1355,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"6658:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1337,"id":1360,"nodeType":"Return","src":"6520:146:8"}]},"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"6096:300:8","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:8","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"owner","nameLocation":"6432:5:8","nodeType":"VariableDeclaration","scope":1362,"src":"6424:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1331,"mutability":"mutable","name":"spender","nameLocation":"6447:7:8","nodeType":"VariableDeclaration","scope":1362,"src":"6439:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:8","nodeType":"VariableDeclaration","scope":1362,"src":"6456:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:8"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1362,"src":"6504:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1335,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:8"},"scope":1892,"src":"6401:272:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1398,"nodeType":"Block","src":"7202:271:8","statements":[{"condition":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:8","subExpression":{"arguments":[{"id":1373,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"7231:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1374,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"7238:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1375,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"7247:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1372,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7217:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1397,"nodeType":"IfStatement","src":"7212:255:8","trueBody":{"id":1396,"nodeType":"Block","src":"7257:210:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"7275:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:8","typeDescriptions":{}}},"id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1394,"nodeType":"Block","src":"7373:84:8","statements":[{"errorCall":{"arguments":[{"id":1390,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"7425:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1391,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"7434:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1389,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7398:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1393,"nodeType":"RevertStatement","src":"7391:51:8"}]},"id":1395,"nodeType":"IfStatement","src":"7271:186:8","trueBody":{"id":1388,"nodeType":"Block","src":"7296:71:8","statements":[{"errorCall":{"arguments":[{"id":1385,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"7344:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1384,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7321:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1387,"nodeType":"RevertStatement","src":"7314:38:8"}]}}]}}]},"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"6679:421:8","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1399,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:8","nodeType":"FunctionDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"owner","nameLocation":"7139:5:8","nodeType":"VariableDeclaration","scope":1399,"src":"7131:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"spender","nameLocation":"7154:7:8","nodeType":"VariableDeclaration","scope":1399,"src":"7146:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:8","nodeType":"VariableDeclaration","scope":1399,"src":"7163:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:8"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[],"src":"7202:0:8"},"scope":1892,"src":"7105:368:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"8190:78:8","statements":[{"id":1413,"nodeType":"UncheckedBlock","src":"8200:62:8","statements":[{"expression":{"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1407,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"8224:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1409,"indexExpression":{"id":1408,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"8234:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"8246:5:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1412,"nodeType":"ExpressionStatement","src":"8224:27:8"}]}]},"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"7479:631:8","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:8","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"account","nameLocation":"8149:7:8","nodeType":"VariableDeclaration","scope":1415,"src":"8141:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"value","nameLocation":"8166:5:8","nodeType":"VariableDeclaration","scope":1415,"src":"8158:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1403,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:8"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[],"src":"8190:0:8"},"scope":1892,"src":"8115:153:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1504,"nodeType":"Block","src":"8956:700:8","statements":[{"assignments":[1428],"declarations":[{"constant":false,"id":1428,"mutability":"mutable","name":"from","nameLocation":"8974:4:8","nodeType":"VariableDeclaration","scope":1504,"src":"8966:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1432,"initialValue":{"arguments":[{"id":1430,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"8990:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1429,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"8981:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1433,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"9058:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:8","typeDescriptions":{}}},"id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1446,"nodeType":"IfStatement","src":"9054:86:8","trueBody":{"id":1445,"nodeType":"Block","src":"9078:62:8","statements":[{"expression":{"arguments":[{"id":1440,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"9109:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1441,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"9115:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1442,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"9121:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1439,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"9092:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1444,"nodeType":"ExpressionStatement","src":"9092:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1447,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"9184:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:8","typeDescriptions":{}}},"id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1474,"nodeType":"IfStatement","src":"9180:256:8","trueBody":{"id":1473,"nodeType":"Block","src":"9204:232:8","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:8","typeDescriptions":{}}},"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1458,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"9321:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1459,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:8","typeDescriptions":{}}},"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1453,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1759,1825],"referencedDeclaration":1825,"src":"9300:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1465,"nodeType":"ExpressionStatement","src":"9300:48:8"},{"id":1472,"nodeType":"UncheckedBlock","src":"9363:63:8","statements":[{"expression":{"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1466,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"9391:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1468,"indexExpression":{"id":1467,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"9401:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1471,"nodeType":"ExpressionStatement","src":"9391:20:8"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"9450:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:8","typeDescriptions":{}}},"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1489,"nodeType":"IfStatement","src":"9446:107:8","trueBody":{"id":1488,"nodeType":"Block","src":"9468:85:8","statements":[{"id":1487,"nodeType":"UncheckedBlock","src":"9482:61:8","statements":[{"expression":{"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1481,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"9510:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1483,"indexExpression":{"id":1482,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"9520:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1486,"nodeType":"ExpressionStatement","src":"9510:18:8"}]}]}},{"expression":{"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1490,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"9563:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1492,"indexExpression":{"id":1491,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"9571:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1493,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"9582:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1495,"nodeType":"ExpressionStatement","src":"9563:21:8"},{"eventCall":{"arguments":[{"id":1497,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"9609:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"9615:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1499,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"9619:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1496,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"9600:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1501,"nodeType":"EmitStatement","src":"9595:32:8"},{"expression":{"id":1502,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"9645:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1426,"id":1503,"nodeType":"Return","src":"9638:11:8"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"8274:582:8","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1505,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:8","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"to","nameLocation":"8886:2:8","nodeType":"VariableDeclaration","scope":1505,"src":"8878:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:8","nodeType":"VariableDeclaration","scope":1505,"src":"8890:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"auth","nameLocation":"8915:4:8","nodeType":"VariableDeclaration","scope":1505,"src":"8907:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:8"},"returnParameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1505,"src":"8947:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:8"},"scope":1892,"src":"8861:795:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1554,"nodeType":"Block","src":"10031:274:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1513,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"10045:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:8","typeDescriptions":{}}},"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1527,"nodeType":"IfStatement","src":"10041:87:8","trueBody":{"id":1526,"nodeType":"Block","src":"10063:65:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:8","typeDescriptions":{}}},"id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1519,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"10084:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1525,"nodeType":"RevertStatement","src":"10077:40:8"}]}},{"assignments":[1529],"declarations":[{"constant":false,"id":1529,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:8","nodeType":"VariableDeclaration","scope":1554,"src":"10137:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1538,"initialValue":{"arguments":[{"id":1531,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"10169:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1532,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"10173:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:8","typeDescriptions":{}}},"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1530,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"10161:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1539,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"10207:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:8","typeDescriptions":{}}},"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1553,"nodeType":"IfStatement","src":"10203:96:8","trueBody":{"id":1552,"nodeType":"Block","src":"10236:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:8","typeDescriptions":{}}},"id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1545,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"10257:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1551,"nodeType":"RevertStatement","src":"10250:38:8"}]}}]},"documentation":{"id":1506,"nodeType":"StructuredDocumentation","src":"9662:311:8","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1555,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:8","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"to","nameLocation":"10001:2:8","nodeType":"VariableDeclaration","scope":1555,"src":"9993:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1507,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1510,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:8","nodeType":"VariableDeclaration","scope":1555,"src":"10005:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:8"},"returnParameters":{"id":1512,"nodeType":"ParameterList","parameters":[],"src":"10031:0:8"},"scope":1892,"src":"9978:327:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1569,"nodeType":"Block","src":"10713:43:8","statements":[{"expression":{"arguments":[{"id":1564,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"10733:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1565,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"10737:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1563,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1570,1600],"referencedDeclaration":1600,"src":"10723:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1568,"nodeType":"ExpressionStatement","src":"10723:26:8"}]},"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"10311:340:8","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1570,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:8","nodeType":"FunctionDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"to","nameLocation":"10683:2:8","nodeType":"VariableDeclaration","scope":1570,"src":"10675:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:8","nodeType":"VariableDeclaration","scope":1570,"src":"10687:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1559,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:8"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"10713:0:8"},"scope":1892,"src":"10656:100:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1599,"nodeType":"Block","src":"11061:123:8","statements":[{"expression":{"arguments":[{"id":1581,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"11077:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1582,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"11081:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1580,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"11071:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1584,"nodeType":"ExpressionStatement","src":"11071:18:8"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1588,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"11133:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:8","typeDescriptions":{}}},"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1594,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"11159:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"11163:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1596,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"11172:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1585,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"11099:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2258_$","typeString":"type(library ERC721Utils)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:8","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2257,"src":"11099:33:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"ExpressionStatement","src":"11099:78:8"}]},"documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"10762:210:8","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1600,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:8","nodeType":"FunctionDefinition","parameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"to","nameLocation":"11004:2:8","nodeType":"VariableDeclaration","scope":1600,"src":"10996:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1572,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:8","nodeType":"VariableDeclaration","scope":1600,"src":"11008:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1577,"mutability":"mutable","name":"data","nameLocation":"11038:4:8","nodeType":"VariableDeclaration","scope":1600,"src":"11025:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1576,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:8"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[],"src":"11061:0:8"},"scope":1892,"src":"10977:207:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1632,"nodeType":"Block","src":"11551:186:8","statements":[{"assignments":[1607],"declarations":[{"constant":false,"id":1607,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:8","nodeType":"VariableDeclaration","scope":1632,"src":"11561:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1619,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1609,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:8","typeDescriptions":{}}},"id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1613,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"11605:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:8","typeDescriptions":{}}},"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1608,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"11585:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1620,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"11639:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:8","typeDescriptions":{}}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1631,"nodeType":"IfStatement","src":"11635:96:8","trueBody":{"id":1630,"nodeType":"Block","src":"11668:63:8","statements":[{"errorCall":{"arguments":[{"id":1627,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"11712:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1626,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"11689:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1629,"nodeType":"RevertStatement","src":"11682:38:8"}]}}]},"documentation":{"id":1601,"nodeType":"StructuredDocumentation","src":"11190:315:8","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1633,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:8","nodeType":"FunctionDefinition","parameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:8","nodeType":"VariableDeclaration","scope":1633,"src":"11525:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:8"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[],"src":"11551:0:8"},"scope":1892,"src":"11510:227:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1692,"nodeType":"Block","src":"12132:389:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1643,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12146:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1644,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:8","typeDescriptions":{}}},"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1657,"nodeType":"IfStatement","src":"12142:87:8","trueBody":{"id":1656,"nodeType":"Block","src":"12164:65:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1650,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:8","typeDescriptions":{}}},"id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1649,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"12185:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1655,"nodeType":"RevertStatement","src":"12178:40:8"}]}},{"assignments":[1659],"declarations":[{"constant":false,"id":1659,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:8","nodeType":"VariableDeclaration","scope":1692,"src":"12238:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1668,"initialValue":{"arguments":[{"id":1661,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12270:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1662,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"12274:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:8","typeDescriptions":{}}},"id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1660,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"12262:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1669,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"12308:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:8","typeDescriptions":{}}},"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1680,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"12410:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1681,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"12427:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1690,"nodeType":"IfStatement","src":"12406:109:8","trueBody":{"id":1689,"nodeType":"Block","src":"12433:82:8","statements":[{"errorCall":{"arguments":[{"id":1684,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"12475:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"12481:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1686,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"12490:13:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1683,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"12454:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1688,"nodeType":"RevertStatement","src":"12447:57:8"}]}},"id":1691,"nodeType":"IfStatement","src":"12304:211:8","trueBody":{"id":1679,"nodeType":"Block","src":"12337:63:8","statements":[{"errorCall":{"arguments":[{"id":1676,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"12381:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1675,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"12358:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1678,"nodeType":"RevertStatement","src":"12351:38:8"}]}}]},"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"11743:313:8","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:8","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"from","nameLocation":"12088:4:8","nodeType":"VariableDeclaration","scope":1693,"src":"12080:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"to","nameLocation":"12102:2:8","nodeType":"VariableDeclaration","scope":1693,"src":"12094:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:8","nodeType":"VariableDeclaration","scope":1693,"src":"12106:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:8"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[],"src":"12132:0:8"},"scope":1892,"src":"12061:460:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1710,"nodeType":"Block","src":"13530:53:8","statements":[{"expression":{"arguments":[{"id":1704,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"13554:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1705,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"13560:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1706,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"13564:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1703,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1711,1741],"referencedDeclaration":1741,"src":"13540:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"ExpressionStatement","src":"13540:36:8"}]},"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"12527:923:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1711,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:8","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"from","nameLocation":"13486:4:8","nodeType":"VariableDeclaration","scope":1711,"src":"13478:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"to","nameLocation":"13500:2:8","nodeType":"VariableDeclaration","scope":1711,"src":"13492:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:8","nodeType":"VariableDeclaration","scope":1711,"src":"13504:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:8"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[],"src":"13530:0:8"},"scope":1892,"src":"13455:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1740,"nodeType":"Block","src":"13922:127:8","statements":[{"expression":{"arguments":[{"id":1724,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"13942:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1725,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"13948:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1726,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"13952:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1723,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"13932:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1728,"nodeType":"ExpressionStatement","src":"13932:28:8"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1732,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"14004:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1734,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"14018:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1735,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"14024:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1736,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"14028:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1737,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"14037:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1729,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"13970:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2258_$","typeString":"type(library ERC721Utils)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:8","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2257,"src":"13970:33:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1739,"nodeType":"ExpressionStatement","src":"13970:72:8"}]},"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"13589:226:8","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1741,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:8","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"from","nameLocation":"13851:4:8","nodeType":"VariableDeclaration","scope":1741,"src":"13843:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"to","nameLocation":"13865:2:8","nodeType":"VariableDeclaration","scope":1741,"src":"13857:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:8","nodeType":"VariableDeclaration","scope":1741,"src":"13869:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"data","nameLocation":"13899:4:8","nodeType":"VariableDeclaration","scope":1741,"src":"13886:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1719,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:8"},"returnParameters":{"id":1722,"nodeType":"ParameterList","parameters":[],"src":"13922:0:8"},"scope":1892,"src":"13820:229:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1758,"nodeType":"Block","src":"14562:50:8","statements":[{"expression":{"arguments":[{"id":1752,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"14581:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1753,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"14585:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1754,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"14594:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1751,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1759,1825],"referencedDeclaration":1825,"src":"14572:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1757,"nodeType":"ExpressionStatement","src":"14572:33:8"}]},"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"14055:432:8","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1759,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:8","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"to","nameLocation":"14518:2:8","nodeType":"VariableDeclaration","scope":1759,"src":"14510:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:8","nodeType":"VariableDeclaration","scope":1759,"src":"14522:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"auth","nameLocation":"14547:4:8","nodeType":"VariableDeclaration","scope":1759,"src":"14539:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1747,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:8"},"returnParameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"14562:0:8"},"scope":1892,"src":"14492:120:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1824,"nodeType":"Block","src":"14888:568:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1771,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"14954:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1772,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"14967:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:8","typeDescriptions":{}}},"id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1817,"nodeType":"IfStatement","src":"14950:460:8","trueBody":{"id":1816,"nodeType":"Block","src":"14987:423:8","statements":[{"assignments":[1780],"declarations":[{"constant":false,"id":1780,"mutability":"mutable","name":"owner","nameLocation":"15009:5:8","nodeType":"VariableDeclaration","scope":1816,"src":"15001:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1784,"initialValue":{"arguments":[{"id":1782,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"15031:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1781,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"15017:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1785,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"15167:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1786,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:8","typeDescriptions":{}}},"id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1791,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"15189:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1792,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"15198:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:8","subExpression":{"arguments":[{"id":1796,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"15224:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1797,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"15231:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1795,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"15207:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1806,"nodeType":"IfStatement","src":"15163:142:8","trueBody":{"id":1805,"nodeType":"Block","src":"15238:67:8","statements":[{"errorCall":{"arguments":[{"id":1802,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"15285:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1801,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"15263:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1804,"nodeType":"RevertStatement","src":"15256:34:8"}]}},{"condition":{"id":1807,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"15323:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1815,"nodeType":"IfStatement","src":"15319:81:8","trueBody":{"id":1814,"nodeType":"Block","src":"15334:66:8","statements":[{"eventCall":{"arguments":[{"id":1809,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"15366:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1810,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"15373:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1811,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"15377:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1808,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"15357:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1813,"nodeType":"EmitStatement","src":"15352:33:8"}]}}]}},{"expression":{"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1818,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"15420:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1820,"indexExpression":{"id":1819,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"15436:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1821,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"15447:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1823,"nodeType":"ExpressionStatement","src":"15420:29:8"}]},"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"14618:171:8","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1825,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:8","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"to","nameLocation":"14820:2:8","nodeType":"VariableDeclaration","scope":1825,"src":"14812:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:8","nodeType":"VariableDeclaration","scope":1825,"src":"14824:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"auth","nameLocation":"14849:4:8","nodeType":"VariableDeclaration","scope":1825,"src":"14841:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:8","nodeType":"VariableDeclaration","scope":1825,"src":"14855:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1767,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:8"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"14888:0:8"},"scope":1892,"src":"14794:662:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1861,"nodeType":"Block","src":"15758:219:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1835,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"15772:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:8","typeDescriptions":{}}},"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1846,"nodeType":"IfStatement","src":"15768:91:8","trueBody":{"id":1845,"nodeType":"Block","src":"15796:63:8","statements":[{"errorCall":{"arguments":[{"id":1842,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"15839:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1841,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"15817:21:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1844,"nodeType":"RevertStatement","src":"15810:38:8"}]}},{"expression":{"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1847,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"15868:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1850,"indexExpression":{"id":1848,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"15887:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1851,"indexExpression":{"id":1849,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"15894:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1852,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"15906:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1854,"nodeType":"ExpressionStatement","src":"15868:46:8"},{"eventCall":{"arguments":[{"id":1856,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"15944:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1857,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"15951:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1858,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"15961:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1855,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"15929:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1860,"nodeType":"EmitStatement","src":"15924:46:8"}]},"documentation":{"id":1826,"nodeType":"StructuredDocumentation","src":"15462:198:8","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1862,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:8","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"owner","nameLocation":"15701:5:8","nodeType":"VariableDeclaration","scope":1862,"src":"15693:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"operator","nameLocation":"15716:8:8","nodeType":"VariableDeclaration","scope":1862,"src":"15708:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"approved","nameLocation":"15731:8:8","nodeType":"VariableDeclaration","scope":1862,"src":"15726:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1831,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:8"},"returnParameters":{"id":1834,"nodeType":"ParameterList","parameters":[],"src":"15758:0:8"},"scope":1892,"src":"15665:312:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1890,"nodeType":"Block","src":"16284:169:8","statements":[{"assignments":[1871],"declarations":[{"constant":false,"id":1871,"mutability":"mutable","name":"owner","nameLocation":"16302:5:8","nodeType":"VariableDeclaration","scope":1890,"src":"16294:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1870,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1875,"initialValue":{"arguments":[{"id":1873,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"16319:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1872,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"16310:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1876,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"16341:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:8","typeDescriptions":{}}},"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1887,"nodeType":"IfStatement","src":"16337:88:8","trueBody":{"id":1886,"nodeType":"Block","src":"16362:63:8","statements":[{"errorCall":{"arguments":[{"id":1883,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"16406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1882,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"16383:22:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1885,"nodeType":"RevertStatement","src":"16376:38:8"}]}},{"expression":{"id":1888,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"16441:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1869,"id":1889,"nodeType":"Return","src":"16434:12:8"}]},"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"15983:224:8","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1891,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:8","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:8","nodeType":"VariableDeclaration","scope":1891,"src":"16235:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:8"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1891,"src":"16275:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1867,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:8"},"scope":1892,"src":"16212:241:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1893,"src":"775:15680:8","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[1908,1917,1926]}],"src":"107:16349:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3576],"IERC721":[2009]},"id":2010,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1894,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2010,"sourceUnit":3577,"src":"134:62:9","symbolAliases":[{"foreign":{"id":1895,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"142:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1898,"name":"IERC165","nameLocations":["288:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"288:7:9"},"id":1899,"nodeType":"InheritanceSpecifier","src":"288:7:9"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1897,"nodeType":"StructuredDocumentation","src":"198:68:9","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":2009,"linearizedBaseContracts":[2009,3576],"name":"IERC721","nameLocation":"277:7:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1900,"nodeType":"StructuredDocumentation","src":"302:88:9","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1908,"name":"Transfer","nameLocation":"401:8:9","nodeType":"EventDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:9","nodeType":"VariableDeclaration","scope":1908,"src":"410:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1901,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1904,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:9","nodeType":"VariableDeclaration","scope":1908,"src":"432:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1906,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:9","nodeType":"VariableDeclaration","scope":1908,"src":"452:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:9"},"src":"395:82:9"},{"anonymous":false,"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"483:94:9","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1917,"name":"Approval","nameLocation":"588:8:9","nodeType":"EventDefinition","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:9","nodeType":"VariableDeclaration","scope":1917,"src":"597:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1910,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1913,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:9","nodeType":"VariableDeclaration","scope":1917,"src":"620:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1912,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1915,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:9","nodeType":"VariableDeclaration","scope":1917,"src":"646:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:9"},"src":"582:89:9"},{"anonymous":false,"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"677:117:9","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1926,"name":"ApprovalForAll","nameLocation":"805:14:9","nodeType":"EventDefinition","parameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:9","nodeType":"VariableDeclaration","scope":1926,"src":"820:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1919,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1922,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:9","nodeType":"VariableDeclaration","scope":1926,"src":"843:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1921,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1924,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:9","nodeType":"VariableDeclaration","scope":1926,"src":"869:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1923,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:9"},"src":"799:85:9"},{"documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"890:76:9","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1934,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:9","nodeType":"FunctionDefinition","parameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"owner","nameLocation":"998:5:9","nodeType":"VariableDeclaration","scope":1934,"src":"990:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1928,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:9"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"balance","nameLocation":"1036:7:9","nodeType":"VariableDeclaration","scope":1934,"src":"1028:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1931,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:9"},"scope":2009,"src":"971:74:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"1051:131:9","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1942,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:9","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:9","nodeType":"VariableDeclaration","scope":1942,"src":"1204:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:9"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"owner","nameLocation":"1252:5:9","nodeType":"VariableDeclaration","scope":1942,"src":"1244:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:9"},"scope":2009,"src":"1187:72:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"1265:565:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1954,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:9","nodeType":"FunctionDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"from","nameLocation":"1869:4:9","nodeType":"VariableDeclaration","scope":1954,"src":"1861:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"to","nameLocation":"1883:2:9","nodeType":"VariableDeclaration","scope":1954,"src":"1875:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:9","nodeType":"VariableDeclaration","scope":1954,"src":"1887:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"data","nameLocation":"1919:4:9","nodeType":"VariableDeclaration","scope":1954,"src":"1904:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1950,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:9"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[],"src":"1933:0:9"},"scope":2009,"src":"1835:99:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"1940:706:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1964,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:9","nodeType":"FunctionDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"from","nameLocation":"2685:4:9","nodeType":"VariableDeclaration","scope":1964,"src":"2677:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1956,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1959,"mutability":"mutable","name":"to","nameLocation":"2699:2:9","nodeType":"VariableDeclaration","scope":1964,"src":"2691:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1961,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:9","nodeType":"VariableDeclaration","scope":1964,"src":"2703:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:9"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[],"src":"2728:0:9"},"scope":2009,"src":"2651:78:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1965,"nodeType":"StructuredDocumentation","src":"2735:733:9","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1974,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:9","nodeType":"FunctionDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"from","nameLocation":"3503:4:9","nodeType":"VariableDeclaration","scope":1974,"src":"3495:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1966,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"to","nameLocation":"3517:2:9","nodeType":"VariableDeclaration","scope":1974,"src":"3509:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:9","nodeType":"VariableDeclaration","scope":1974,"src":"3521:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1970,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:9"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[],"src":"3546:0:9"},"scope":2009,"src":"3473:74:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1975,"nodeType":"StructuredDocumentation","src":"3553:452:9","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1982,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:9","nodeType":"FunctionDefinition","parameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"to","nameLocation":"4035:2:9","nodeType":"VariableDeclaration","scope":1982,"src":"4027:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1976,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1979,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:9","nodeType":"VariableDeclaration","scope":1982,"src":"4039:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:9"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[],"src":"4064:0:9"},"scope":2009,"src":"4010:55:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1983,"nodeType":"StructuredDocumentation","src":"4071:315:9","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1990,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:9","nodeType":"FunctionDefinition","parameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"operator","nameLocation":"4426:8:9","nodeType":"VariableDeclaration","scope":1990,"src":"4418:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"approved","nameLocation":"4441:8:9","nodeType":"VariableDeclaration","scope":1990,"src":"4436:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1986,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:9"},"returnParameters":{"id":1989,"nodeType":"ParameterList","parameters":[],"src":"4459:0:9"},"scope":2009,"src":"4391:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"4466:139:9","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1998,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:9","nodeType":"FunctionDefinition","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:9","nodeType":"VariableDeclaration","scope":1998,"src":"4631:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1992,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:9"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"operator","nameLocation":"4679:8:9","nodeType":"VariableDeclaration","scope":1998,"src":"4671:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1995,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:9"},"scope":2009,"src":"4610:79:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1999,"nodeType":"StructuredDocumentation","src":"4695:138:9","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2008,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:9","nodeType":"FunctionDefinition","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2001,"mutability":"mutable","name":"owner","nameLocation":"4872:5:9","nodeType":"VariableDeclaration","scope":2008,"src":"4864:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2000,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"operator","nameLocation":"4887:8:9","nodeType":"VariableDeclaration","scope":2008,"src":"4879:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:9"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2008,"src":"4920:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2005,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:9"},"scope":2009,"src":"4838:88:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2010,"src":"267:4661:9","usedErrors":[],"usedEvents":[1908,1917,1926]}],"src":"108:4821:9"},"id":9},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2027]},"id":2028,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2011,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"142:154:10","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":2027,"linearizedBaseContracts":[2027],"name":"IERC721Receiver","nameLocation":"307:15:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2013,"nodeType":"StructuredDocumentation","src":"329:500:10","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2026,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:10","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2015,"mutability":"mutable","name":"operator","nameLocation":"877:8:10","nodeType":"VariableDeclaration","scope":2026,"src":"869:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2014,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2017,"mutability":"mutable","name":"from","nameLocation":"903:4:10","nodeType":"VariableDeclaration","scope":2026,"src":"895:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2019,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:10","nodeType":"VariableDeclaration","scope":2026,"src":"917:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2018,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"data","nameLocation":"957:4:10","nodeType":"VariableDeclaration","scope":2026,"src":"942:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2020,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:10"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2026,"src":"986:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2023,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:10"},"scope":2027,"src":"834:160:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2028,"src":"297:699:10","usedErrors":[],"usedEvents":[]}],"src":"116:881:10"},"id":10},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1892],"ERC721URIStorage":[2153],"IERC165":[3576],"IERC4906":[175],"Strings":[3540]},"id":2154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2029,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2031,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2154,"sourceUnit":1893,"src":"154:37:11","symbolAliases":[{"foreign":{"id":2030,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"162:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":2033,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2154,"sourceUnit":3541,"src":"192:51:11","symbolAliases":[{"foreign":{"id":2032,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"200:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":2035,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2154,"sourceUnit":176,"src":"244:58:11","symbolAliases":[{"foreign":{"id":2034,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"252:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":2037,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2154,"sourceUnit":152,"src":"303:56:11","symbolAliases":[{"foreign":{"id":2036,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"311:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2039,"name":"IERC4906","nameLocations":["470:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":175,"src":"470:8:11"},"id":2040,"nodeType":"InheritanceSpecifier","src":"470:8:11"},{"baseName":{"id":2041,"name":"ERC721","nameLocations":["480:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"480:6:11"},"id":2042,"nodeType":"InheritanceSpecifier","src":"480:6:11"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"361:70:11","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":2153,"linearizedBaseContracts":[2153,1892,269,2181,175,2009,3564,3576,2288],"name":"ERC721URIStorage","nameLocation":"450:16:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2045,"libraryName":{"id":2043,"name":"Strings","nameLocations":["499:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":3540,"src":"499:7:11"},"nodeType":"UsingForDirective","src":"493:26:11","typeName":{"id":2044,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":2051,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"731:20:11","nodeType":"VariableDeclaration","scope":2153,"src":"707:65:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2046,"name":"bytes4","nodeType":"ElementaryTypeName","src":"707:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"761:10:11","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"754:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2047,"name":"bytes4","nodeType":"ElementaryTypeName","src":"754:6:11","typeDescriptions":{}}},"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"754:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":2055,"mutability":"mutable","name":"_tokenURIs","nameLocation":"861:10:11","nodeType":"VariableDeclaration","scope":2153,"src":"818:53:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2054,"keyName":"tokenId","keyNameLocation":"834:7:11","keyType":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"818:34:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2053,"name":"string","nodeType":"ElementaryTypeName","src":"845:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[1036,3575],"body":{"id":2075,"nodeType":"Block","src":"1046:99:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"1063:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2067,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"1078:20:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1063:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2071,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"1126:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2069,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1102:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2153_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1108:17:11","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1036,"src":"1102:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1102:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1063:75:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2065,"id":2074,"nodeType":"Return","src":"1056:82:11"}]},"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"878:55:11","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":2076,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"947:17:11","nodeType":"FunctionDefinition","overrides":{"id":2062,"nodeType":"OverrideSpecifier","overrides":[{"id":2060,"name":"ERC721","nameLocations":["1014:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"1014:6:11"},{"id":2061,"name":"IERC165","nameLocations":["1022:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"1022:7:11"}],"src":"1005:25:11"},"parameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"interfaceId","nameLocation":"972:11:11","nodeType":"VariableDeclaration","scope":2076,"src":"965:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2057,"name":"bytes4","nodeType":"ElementaryTypeName","src":"965:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"964:20:11"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2076,"src":"1040:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2063,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:6:11"},"scope":2153,"src":"938:207:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1131],"body":{"id":2132,"nodeType":"Block","src":"1299:505:11","statements":[{"expression":{"arguments":[{"id":2086,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"1323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2085,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1309:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1309:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2088,"nodeType":"ExpressionStatement","src":"1309:22:11"},{"assignments":[2090],"declarations":[{"constant":false,"id":2090,"mutability":"mutable","name":"_tokenURI","nameLocation":"1356:9:11","nodeType":"VariableDeclaration","scope":2132,"src":"1342:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2089,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2094,"initialValue":{"baseExpression":{"id":2091,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"1368:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2093,"indexExpression":{"id":2092,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"1379:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1368:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1342:45:11"},{"assignments":[2096],"declarations":[{"constant":false,"id":2096,"mutability":"mutable","name":"base","nameLocation":"1411:4:11","nodeType":"VariableDeclaration","scope":2132,"src":"1397:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2095,"name":"string","nodeType":"ElementaryTypeName","src":"1397:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2099,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2097,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"1418:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1418:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1397:31:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2102,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1507:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1501:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2100,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:11","typeDescriptions":{}}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1501:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1513:6:11","memberName":"length","nodeType":"MemberAccess","src":"1501:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1523:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1501:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2110,"nodeType":"IfStatement","src":"1497:70:11","trueBody":{"id":2109,"nodeType":"Block","src":"1526:41:11","statements":[{"expression":{"id":2107,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1547:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2084,"id":2108,"nodeType":"Return","src":"1540:16:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2113,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1672:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1666:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2111,"name":"bytes","nodeType":"ElementaryTypeName","src":"1666:5:11","typeDescriptions":{}}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1683:6:11","memberName":"length","nodeType":"MemberAccess","src":"1666:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1666:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2126,"nodeType":"IfStatement","src":"1662:95:11","trueBody":{"id":2125,"nodeType":"Block","src":"1695:62:11","statements":[{"expression":{"arguments":[{"id":2121,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1730:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2122,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1736:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1716:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2118,"name":"string","nodeType":"ElementaryTypeName","src":"1716:6:11","typeDescriptions":{}}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1723:6:11","memberName":"concat","nodeType":"MemberAccess","src":"1716:13:11","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1716:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2084,"id":2124,"nodeType":"Return","src":"1709:37:11"}]}},{"expression":{"arguments":[{"id":2129,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"1789:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2127,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1774:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2153_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1780:8:11","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1131,"src":"1774:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2084,"id":2131,"nodeType":"Return","src":"1767:30:11"}]},"documentation":{"id":2077,"nodeType":"StructuredDocumentation","src":"1151:55:11","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2133,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1220:8:11","nodeType":"FunctionDefinition","overrides":{"id":2081,"nodeType":"OverrideSpecifier","overrides":[],"src":"1266:8:11"},"parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"tokenId","nameLocation":"1237:7:11","nodeType":"VariableDeclaration","scope":2133,"src":"1229:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:17:11"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2133,"src":"1284:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2082,"name":"string","nodeType":"ElementaryTypeName","src":"1284:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1283:15:11"},"scope":2153,"src":"1211:593:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2151,"nodeType":"Block","src":"2004:86:11","statements":[{"expression":{"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2141,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"2014:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2143,"indexExpression":{"id":2142,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"2025:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2014:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2144,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"2036:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2014:31:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2146,"nodeType":"ExpressionStatement","src":"2014:31:11"},{"eventCall":{"arguments":[{"id":2148,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"2075:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2147,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2060:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2150,"nodeType":"EmitStatement","src":"2055:28:11"}]},"documentation":{"id":2134,"nodeType":"StructuredDocumentation","src":"1810:108:11","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1932:12:11","nodeType":"FunctionDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"tokenId","nameLocation":"1953:7:11","nodeType":"VariableDeclaration","scope":2152,"src":"1945:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1945:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2138,"mutability":"mutable","name":"_tokenURI","nameLocation":"1976:9:11","nodeType":"VariableDeclaration","scope":2152,"src":"1962:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2137,"name":"string","nodeType":"ElementaryTypeName","src":"1962:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1944:42:11"},"returnParameters":{"id":2140,"nodeType":"ParameterList","parameters":[],"src":"2004:0:11"},"scope":2153,"src":"1923:167:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2154,"src":"432:1660:11","usedErrors":[227,232,241,246,251,258,263,268],"usedEvents":[167,174,1908,1917,1926]}],"src":"128:1965:11"},"id":11},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[2009],"IERC721Metadata":[2181]},"id":2182,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2155,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2182,"sourceUnit":2010,"src":"153:39:12","symbolAliases":[{"foreign":{"id":2156,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"161:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2159,"name":"IERC721","nameLocations":["357:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2009,"src":"357:7:12"},"id":2160,"nodeType":"InheritanceSpecifier","src":"357:7:12"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"194:133:12","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2181,"linearizedBaseContracts":[2181,2009,3576],"name":"IERC721Metadata","nameLocation":"338:15:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"371:58:12","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2166,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:12","nodeType":"FunctionDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[],"src":"447:2:12"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2166,"src":"473:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2163,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:12"},"scope":2181,"src":"434:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"494:60:12","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2172,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:12","nodeType":"FunctionDefinition","parameters":{"id":2168,"nodeType":"ParameterList","parameters":[],"src":"574:2:12"},"returnParameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2172,"src":"600:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2169,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:12"},"scope":2181,"src":"559:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"621:90:12","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2180,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:12","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:12","nodeType":"VariableDeclaration","scope":2180,"src":"734:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2174,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:12"},"returnParameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2180,"src":"774:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2177,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:12"},"scope":2181,"src":"716:73:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2182,"src":"328:463:12","usedErrors":[],"usedEvents":[1908,1917,1926]}],"src":"127:665:12"},"id":12},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2258],"IERC721Errors":[269],"IERC721Receiver":[2027]},"id":2259,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2183,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2259,"sourceUnit":2028,"src":"144:55:13","symbolAliases":[{"foreign":{"id":2184,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"152:15:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2259,"sourceUnit":317,"src":"200:69:13","symbolAliases":[{"foreign":{"id":2186,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"208:13:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2188,"nodeType":"StructuredDocumentation","src":"271:159:13","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2258,"linearizedBaseContracts":[2258],"name":"ERC721Utils","nameLocation":"439:11:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2256,"nodeType":"Block","src":"1151:758:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2202,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1165:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:13","memberName":"code","nodeType":"MemberAccess","src":"1165:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:13","memberName":"length","nodeType":"MemberAccess","src":"1165:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2255,"nodeType":"IfStatement","src":"1161:742:13","trueBody":{"id":2254,"nodeType":"Block","src":"1185:718:13","statements":[{"clauses":[{"block":{"id":2232,"nodeType":"Block","src":"1295:214:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2219,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"1317:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2220,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1327:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2027_$","typeString":"type(contract IERC721Receiver)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:13","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2026,"src":"1327:32:13","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:13","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2231,"nodeType":"IfStatement","src":"1313:182:13","trueBody":{"id":2230,"nodeType":"Block","src":"1370:125:13","statements":[{"errorCall":{"arguments":[{"id":2227,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1473:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2224,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1437:13:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$269_$","typeString":"type(contract IERC721Errors)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:13","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":251,"src":"1437:35:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2229,"nodeType":"RevertStatement","src":"1430:46:13"}]}}]},"errorName":"","id":2233,"nodeType":"TryCatchClause","parameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"retval","nameLocation":"1287:6:13","nodeType":"VariableDeclaration","scope":2233,"src":"1280:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2216,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:13"},"src":"1271:238:13"},{"block":{"id":2251,"nodeType":"Block","src":"1538:355:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2237,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"1560:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:13","memberName":"length","nodeType":"MemberAccess","src":"1560:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2249,"nodeType":"Block","src":"1728:151:13","statements":[{"AST":{"nodeType":"YulBlock","src":"1775:86:13","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1812:2:13","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1816:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1808:3:13"},"nodeType":"YulFunctionCall","src":"1808:15:13"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1831:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1825:5:13"},"nodeType":"YulFunctionCall","src":"1825:13:13"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1801:6:13"},"nodeType":"YulFunctionCall","src":"1801:38:13"},"nodeType":"YulExpressionStatement","src":"1801:38:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":2235,"isOffset":false,"isSlot":false,"src":"1816:6:13","valueSize":1},{"declaration":2235,"isOffset":false,"isSlot":false,"src":"1831:6:13","valueSize":1}],"flags":["memory-safe"],"id":2248,"nodeType":"InlineAssembly","src":"1750:111:13"}]},"id":2250,"nodeType":"IfStatement","src":"1556:323:13","trueBody":{"id":2247,"nodeType":"Block","src":"1580:142:13","statements":[{"errorCall":{"arguments":[{"id":2244,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1700:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2241,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1664:13:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$269_$","typeString":"type(contract IERC721Errors)"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:13","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":251,"src":"1664:35:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2246,"nodeType":"RevertStatement","src":"1657:46:13"}]}}]},"errorName":"","id":2252,"nodeType":"TryCatchClause","parameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"reason","nameLocation":"1530:6:13","nodeType":"VariableDeclaration","scope":2252,"src":"1517:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2234,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:13"},"src":"1510:383:13"}],"externalCall":{"arguments":[{"id":2211,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"1240:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2212,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"1250:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2213,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"1256:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2214,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"1265:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2208,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"1219:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2207,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1203:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2027_$","typeString":"type(contract IERC721Receiver)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2027","typeString":"contract IERC721Receiver"}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:13","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2026,"src":"1203:36:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:13","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2253,"nodeType":"TryStatement","src":"1199:694:13"}]}}]},"documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"457:523:13","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2257,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:13","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"operator","nameLocation":"1033:8:13","nodeType":"VariableDeclaration","scope":2257,"src":"1025:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2190,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2193,"mutability":"mutable","name":"from","nameLocation":"1059:4:13","nodeType":"VariableDeclaration","scope":2257,"src":"1051:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2192,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2195,"mutability":"mutable","name":"to","nameLocation":"1081:2:13","nodeType":"VariableDeclaration","scope":2257,"src":"1073:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2194,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2197,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:13","nodeType":"VariableDeclaration","scope":2257,"src":"1093:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"data","nameLocation":"1131:4:13","nodeType":"VariableDeclaration","scope":2257,"src":"1118:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2198,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:13"},"returnParameters":{"id":2201,"nodeType":"ParameterList","parameters":[],"src":"1151:0:13"},"scope":2258,"src":"985:924:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2259,"src":"431:1480:13","usedErrors":[],"usedEvents":[]}],"src":"118:1794:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2288]},"id":2289,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2260,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"127:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2288,"linearizedBaseContracts":[2288],"name":"Context","nameLocation":"642:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2269,"nodeType":"Block","src":"718:34:14","statements":[{"expression":{"expression":{"id":2266,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:14","memberName":"sender","nodeType":"MemberAccess","src":"735:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2265,"id":2268,"nodeType":"Return","src":"728:17:14"}]},"id":2270,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:14","nodeType":"FunctionDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[],"src":"675:2:14"},"returnParameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2270,"src":"709:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2263,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:14"},"scope":2288,"src":"656:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2278,"nodeType":"Block","src":"825:32:14","statements":[{"expression":{"expression":{"id":2275,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:14","memberName":"data","nodeType":"MemberAccess","src":"842:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2274,"id":2277,"nodeType":"Return","src":"835:15:14"}]},"id":2279,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:14","nodeType":"FunctionDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[],"src":"775:2:14"},"returnParameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2279,"src":"809:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2272,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:14"},"scope":2288,"src":"758:99:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2286,"nodeType":"Block","src":"935:25:14","statements":[{"expression":{"hexValue":"30","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2283,"id":2285,"nodeType":"Return","src":"945:8:14"}]},"id":2287,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:14","nodeType":"FunctionDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[],"src":"892:2:14"},"returnParameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2287,"src":"926:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2281,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:14"},"scope":2288,"src":"863:97:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2289,"src":"624:338:14","usedErrors":[],"usedEvents":[]}],"src":"101:862:14"},"id":14},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2340]},"id":2341,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2290,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"125:489:15","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2340,"linearizedBaseContracts":[2340],"name":"Panic","nameLocation":"665:5:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"677:36:15","text":"@dev generic / unspecified error"},"id":2295,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:15","nodeType":"VariableDeclaration","scope":2340,"src":"718:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2296,"nodeType":"StructuredDocumentation","src":"764:37:15","text":"@dev used by the assert() builtin"},"id":2299,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:15","nodeType":"VariableDeclaration","scope":2340,"src":"806:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2300,"nodeType":"StructuredDocumentation","src":"851:41:15","text":"@dev arithmetic underflow or overflow"},"id":2303,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:15","nodeType":"VariableDeclaration","scope":2340,"src":"897:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:15","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"950:35:15","text":"@dev division or modulo by zero"},"id":2307,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:15","nodeType":"VariableDeclaration","scope":2340,"src":"990:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2308,"nodeType":"StructuredDocumentation","src":"1045:30:15","text":"@dev enum conversion error"},"id":2311,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:15","nodeType":"VariableDeclaration","scope":2340,"src":"1080:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:15","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2312,"nodeType":"StructuredDocumentation","src":"1140:36:15","text":"@dev invalid encoding in storage"},"id":2315,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:15","nodeType":"VariableDeclaration","scope":2340,"src":"1181:55:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"1242:24:15","text":"@dev empty array pop"},"id":2319,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:15","nodeType":"VariableDeclaration","scope":2340,"src":"1271:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:15","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"1325:35:15","text":"@dev array out of bounds access"},"id":2323,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:15","nodeType":"VariableDeclaration","scope":2340,"src":"1365:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2324,"nodeType":"StructuredDocumentation","src":"1423:65:15","text":"@dev resource error (too large allocation or too large array)"},"id":2327,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:15","nodeType":"VariableDeclaration","scope":2340,"src":"1493:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2328,"nodeType":"StructuredDocumentation","src":"1546:42:15","text":"@dev calling invalid internal function"},"id":2331,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:15","nodeType":"VariableDeclaration","scope":2340,"src":"1593:58:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:15","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2338,"nodeType":"Block","src":"1819:151:15","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:15"},"nodeType":"YulFunctionCall","src":"1868:24:15"},"nodeType":"YulExpressionStatement","src":"1868:24:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:15","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:15"},"nodeType":"YulFunctionCall","src":"1905:18:15"},"nodeType":"YulExpressionStatement","src":"1905:18:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:15","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:15"},"nodeType":"YulFunctionCall","src":"1936:18:15"},"nodeType":"YulExpressionStatement","src":"1936:18:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":2334,"isOffset":false,"isSlot":false,"src":"1918:4:15","valueSize":1}],"flags":["memory-safe"],"id":2337,"nodeType":"InlineAssembly","src":"1829:135:15"}]},"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"1658:113:15","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2339,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:15","nodeType":"FunctionDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"code","nameLocation":"1799:4:15","nodeType":"VariableDeclaration","scope":2339,"src":"1791:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:15"},"returnParameters":{"id":2336,"nodeType":"ParameterList","parameters":[],"src":"1819:0:15"},"scope":2340,"src":"1776:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2341,"src":"657:1315:15","usedErrors":[],"usedEvents":[]}],"src":"99:1874:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5182],"SafeCast":[6947],"SignedMath":[7091],"Strings":[3540]},"id":3541,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2342,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2344,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3541,"sourceUnit":5183,"src":"127:37:16","symbolAliases":[{"foreign":{"id":2343,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"135:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2346,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3541,"sourceUnit":6948,"src":"165:45:16","symbolAliases":[{"foreign":{"id":2345,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2348,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3541,"sourceUnit":7092,"src":"211:49:16","symbolAliases":[{"foreign":{"id":2347,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"219:10:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"262:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":3540,"linearizedBaseContracts":[3540],"name":"Strings","nameLocation":"305:7:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2351,"libraryName":{"id":2350,"name":"SafeCast","nameLocations":["325:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":6947,"src":"325:8:16"},"nodeType":"UsingForDirective","src":"319:21:16"},{"constant":true,"id":2354,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:16","nodeType":"VariableDeclaration","scope":3540,"src":"346:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2352,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2357,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:16","nodeType":"VariableDeclaration","scope":3540,"src":"408:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2355,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2358,"nodeType":"StructuredDocumentation","src":"457:81:16","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2364,"name":"StringsInsufficientHexLength","nameLocation":"549:28:16","nodeType":"ErrorDefinition","parameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"value","nameLocation":"586:5:16","nodeType":"VariableDeclaration","scope":2364,"src":"578:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"length","nameLocation":"601:6:16","nodeType":"VariableDeclaration","scope":2364,"src":"593:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:16"},"src":"543:66:16"},{"documentation":{"id":2365,"nodeType":"StructuredDocumentation","src":"615:108:16","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2367,"name":"StringsInvalidChar","nameLocation":"734:18:16","nodeType":"ErrorDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[],"src":"752:2:16"},"src":"728:27:16"},{"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"761:84:16","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2370,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:16","nodeType":"ErrorDefinition","parameters":{"id":2369,"nodeType":"ParameterList","parameters":[],"src":"883:2:16"},"src":"850:36:16"},{"body":{"id":2417,"nodeType":"Block","src":"1058:561:16","statements":[{"id":2416,"nodeType":"UncheckedBlock","src":"1068:545:16","statements":[{"assignments":[2379],"declarations":[{"constant":false,"id":2379,"mutability":"mutable","name":"length","nameLocation":"1100:6:16","nodeType":"VariableDeclaration","scope":2416,"src":"1092:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2386,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"1120:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2380,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"1109:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5182_$","typeString":"type(library Math)"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4954,"src":"1109:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:16"},{"assignments":[2388],"declarations":[{"constant":false,"id":2388,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:16","nodeType":"VariableDeclaration","scope":2416,"src":"1144:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2387,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2393,"initialValue":{"arguments":[{"id":2391,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"1178:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2389,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:16"},{"assignments":[2395],"declarations":[{"constant":false,"id":2395,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:16","nodeType":"VariableDeclaration","scope":2416,"src":"1199:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2396,"nodeType":"VariableDeclarationStatement","src":"1199:11:16"},{"AST":{"nodeType":"YulBlock","src":"1249:67:16","statements":[{"nodeType":"YulAssignment","src":"1267:35:16","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1278:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1290:2:16","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1294:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:16"},"nodeType":"YulFunctionCall","src":"1286:15:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:16"},"nodeType":"YulFunctionCall","src":"1274:28:16"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1267:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2388,"isOffset":false,"isSlot":false,"src":"1278:6:16","valueSize":1},{"declaration":2379,"isOffset":false,"isSlot":false,"src":"1294:6:16","valueSize":1},{"declaration":2395,"isOffset":false,"isSlot":false,"src":"1267:3:16","valueSize":1}],"flags":["memory-safe"],"id":2397,"nodeType":"InlineAssembly","src":"1224:92:16"},{"body":{"id":2412,"nodeType":"Block","src":"1342:234:16","statements":[{"expression":{"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:16","subExpression":{"id":2399,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"1360:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2401,"nodeType":"ExpressionStatement","src":"1360:5:16"},{"AST":{"nodeType":"YulBlock","src":"1408:86:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1448:3:16"},"nodeType":"YulFunctionCall","src":"1448:14:16"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1464:10:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1443:4:16"},"nodeType":"YulFunctionCall","src":"1443:32:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1430:7:16"},"nodeType":"YulFunctionCall","src":"1430:46:16"},"nodeType":"YulExpressionStatement","src":"1430:46:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2354,"isOffset":false,"isSlot":false,"src":"1464:10:16","valueSize":1},{"declaration":2395,"isOffset":false,"isSlot":false,"src":"1438:3:16","valueSize":1},{"declaration":2373,"isOffset":false,"isSlot":false,"src":"1452:5:16","valueSize":1}],"flags":["memory-safe"],"id":2402,"nodeType":"InlineAssembly","src":"1383:111:16"},{"expression":{"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"1511:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2406,"nodeType":"ExpressionStatement","src":"1511:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"1544:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2411,"nodeType":"IfStatement","src":"1540:21:16","trueBody":{"id":2410,"nodeType":"Break","src":"1556:5:16"}}]},"condition":{"hexValue":"74727565","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2413,"nodeType":"WhileStatement","src":"1329:247:16"},{"expression":{"id":2414,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"1596:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2377,"id":2415,"nodeType":"Return","src":"1589:13:16"}]}]},"documentation":{"id":2371,"nodeType":"StructuredDocumentation","src":"892:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2418,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:16","nodeType":"FunctionDefinition","parameters":{"id":2374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"value","nameLocation":"1013:5:16","nodeType":"VariableDeclaration","scope":2418,"src":"1005:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:16"},"returnParameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2418,"src":"1043:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2375,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:16"},"scope":3540,"src":"987:632:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2443,"nodeType":"Block","src":"1795:92:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"1826:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:16","trueExpression":{"hexValue":"2d","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"1872:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2436,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"1857:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7091_$","typeString":"type(library SignedMath)"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:16","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7090,"src":"1857:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2435,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1848:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2426,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:16","typeDescriptions":{}}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:16","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:16","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2425,"id":2442,"nodeType":"Return","src":"1805:75:16"}]},"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"1625:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2444,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:16","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"value","nameLocation":"1750:5:16","nodeType":"VariableDeclaration","scope":2444,"src":"1743:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2420,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:16"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2444,"src":"1780:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2423,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:16"},"scope":3540,"src":"1719:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2463,"nodeType":"Block","src":"2066:100:16","statements":[{"id":2462,"nodeType":"UncheckedBlock","src":"2076:84:16","statements":[{"expression":{"arguments":[{"id":2453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"2119:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"2138:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2454,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"2126:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5182_$","typeString":"type(library Math)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5125,"src":"2126:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2452,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2464,2547,2567],"referencedDeclaration":2547,"src":"2107:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2451,"id":2461,"nodeType":"Return","src":"2100:49:16"}]}]},"documentation":{"id":2445,"nodeType":"StructuredDocumentation","src":"1893:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:16","nodeType":"FunctionDefinition","parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2447,"mutability":"mutable","name":"value","nameLocation":"2021:5:16","nodeType":"VariableDeclaration","scope":2464,"src":"2013:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:16"},"returnParameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2464,"src":"2051:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2449,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:16"},"scope":3540,"src":"1992:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2546,"nodeType":"Block","src":"2379:435:16","statements":[{"assignments":[2475],"declarations":[{"constant":false,"id":2475,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:16","nodeType":"VariableDeclaration","scope":2546,"src":"2389:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2477,"initialValue":{"id":2476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2410:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:16"},{"assignments":[2479],"declarations":[{"constant":false,"id":2479,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:16","nodeType":"VariableDeclaration","scope":2546,"src":"2425:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2478,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2488,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2483,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2461:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2480,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:16"},{"expression":{"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2489,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"2482:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2491,"indexExpression":{"hexValue":"30","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2494,"nodeType":"ExpressionStatement","src":"2482:15:16"},{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2495,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"2507:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2497,"indexExpression":{"hexValue":"31","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2500,"nodeType":"ExpressionStatement","src":"2507:15:16"},{"body":{"id":2529,"nodeType":"Block","src":"2577:95:16","statements":[{"expression":{"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2515,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"2591:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2517,"indexExpression":{"id":2516,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2598:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2518,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"2603:10:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2522,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"2614:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2524,"nodeType":"ExpressionStatement","src":"2591:40:16"},{"expression":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2525,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"2645:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2528,"nodeType":"ExpressionStatement","src":"2645:16:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2565:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2530,"initializationExpression":{"assignments":[2502],"declarations":[{"constant":false,"id":2502,"mutability":"mutable","name":"i","nameLocation":"2545:1:16","nodeType":"VariableDeclaration","scope":2530,"src":"2537:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2508,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2504,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2553:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:16"},"loopExpression":{"expression":{"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:16","subExpression":{"id":2512,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"2574:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2514,"nodeType":"ExpressionStatement","src":"2572:3:16"},"nodeType":"ForStatement","src":"2532:140:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"2685:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2540,"nodeType":"IfStatement","src":"2681:96:16","trueBody":{"id":2539,"nodeType":"Block","src":"2702:75:16","statements":[{"errorCall":{"arguments":[{"id":2535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2752:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2536,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2759:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2534,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"2723:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2538,"nodeType":"RevertStatement","src":"2716:50:16"}]}},{"expression":{"arguments":[{"id":2543,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"2800:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2541,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:16","typeDescriptions":{}}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2473,"id":2545,"nodeType":"Return","src":"2786:21:16"}]},"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"2172:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2547,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:16","nodeType":"FunctionDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"value","nameLocation":"2318:5:16","nodeType":"VariableDeclaration","scope":2547,"src":"2310:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"length","nameLocation":"2333:6:16","nodeType":"VariableDeclaration","scope":2547,"src":"2325:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:16"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2547,"src":"2364:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2471,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:16"},"scope":3540,"src":"2289:525:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2566,"nodeType":"Block","src":"3046:75:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2560,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"3091:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2558,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:16","typeDescriptions":{}}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2556,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:16","typeDescriptions":{}}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2563,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"3099:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2555,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2464,2547,2567],"referencedDeclaration":2547,"src":"3063:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2554,"id":2565,"nodeType":"Return","src":"3056:58:16"}]},"documentation":{"id":2548,"nodeType":"StructuredDocumentation","src":"2820:148:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2567,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:16","nodeType":"FunctionDefinition","parameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"addr","nameLocation":"3002:4:16","nodeType":"VariableDeclaration","scope":2567,"src":"2994:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:16"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2567,"src":"3031:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2552,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:16"},"scope":3540,"src":"2973:148:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2631,"nodeType":"Block","src":"3378:642:16","statements":[{"assignments":[2576],"declarations":[{"constant":false,"id":2576,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:16","nodeType":"VariableDeclaration","scope":2631,"src":"3388:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2575,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2583,"initialValue":{"arguments":[{"arguments":[{"id":2580,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"3428:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2579,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2464,2547,2567],"referencedDeclaration":2567,"src":"3416:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2577,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:16","typeDescriptions":{}}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:16"},{"assignments":[2585],"declarations":[{"constant":false,"id":2585,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:16","nodeType":"VariableDeclaration","scope":2631,"src":"3519:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2586,"nodeType":"VariableDeclarationStatement","src":"3519:17:16"},{"AST":{"nodeType":"YulBlock","src":"3571:78:16","statements":[{"nodeType":"YulAssignment","src":"3585:54:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:2:16","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3620:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:16"},"nodeType":"YulFunctionCall","src":"3616:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"3635:2:16","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3606:9:16"},"nodeType":"YulFunctionCall","src":"3606:32:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3598:3:16"},"nodeType":"YulFunctionCall","src":"3598:41:16"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3585:9:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2576,"isOffset":false,"isSlot":false,"src":"3620:6:16","valueSize":1},{"declaration":2585,"isOffset":false,"isSlot":false,"src":"3585:9:16","valueSize":1}],"flags":["memory-safe"],"id":2587,"nodeType":"InlineAssembly","src":"3546:103:16"},{"body":{"id":2624,"nodeType":"Block","src":"3692:291:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2598,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"3798:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2605,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"3827:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2607,"indexExpression":{"id":2606,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"3834:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2603,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:16","typeDescriptions":{}}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2619,"nodeType":"IfStatement","src":"3794:150:16","trueBody":{"id":2618,"nodeType":"Block","src":"3844:100:16","statements":[{"expression":{"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2612,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"3912:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2614,"indexExpression":{"id":2613,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"3919:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2617,"nodeType":"ExpressionStatement","src":"3912:17:16"}]}},{"expression":{"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2620,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"3957:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2623,"nodeType":"ExpressionStatement","src":"3957:15:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2592,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"3680:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2625,"initializationExpression":{"assignments":[2589],"declarations":[{"constant":false,"id":2589,"mutability":"mutable","name":"i","nameLocation":"3672:1:16","nodeType":"VariableDeclaration","scope":2625,"src":"3664:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2591,"initialValue":{"hexValue":"3431","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:16","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:16"},"loopExpression":{"expression":{"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:16","subExpression":{"id":2595,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"3689:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2597,"nodeType":"ExpressionStatement","src":"3687:3:16"},"nodeType":"ForStatement","src":"3659:324:16"},{"expression":{"arguments":[{"id":2628,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"4006:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2626,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:16","typeDescriptions":{}}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2574,"id":2630,"nodeType":"Return","src":"3992:21:16"}]},"documentation":{"id":2568,"nodeType":"StructuredDocumentation","src":"3127:165:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2632,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:16","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"addr","nameLocation":"3334:4:16","nodeType":"VariableDeclaration","scope":2632,"src":"3326:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2569,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:16"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2632,"src":"3363:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2572,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:16"},"scope":3540,"src":"3297:723:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2668,"nodeType":"Block","src":"4175:104:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2644,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"4198:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2642,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:16","typeDescriptions":{}}},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:16","memberName":"length","nodeType":"MemberAccess","src":"4192:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2649,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"4217:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2647,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:16","typeDescriptions":{}}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:16","memberName":"length","nodeType":"MemberAccess","src":"4211:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2656,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"4246:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2654,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:16","typeDescriptions":{}}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2653,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2662,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"4269:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2660,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:16","typeDescriptions":{}}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2659,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2641,"id":2667,"nodeType":"Return","src":"4185:87:16"}]},"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"4026:66:16","text":" @dev Returns true if the two strings are equal."},"id":2669,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:16","nodeType":"FunctionDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"a","nameLocation":"4126:1:16","nodeType":"VariableDeclaration","scope":2669,"src":"4112:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2634,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"b","nameLocation":"4143:1:16","nodeType":"VariableDeclaration","scope":2669,"src":"4129:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2636,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:16"},"returnParameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2669,"src":"4169:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2639,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:16"},"scope":3540,"src":"4097:182:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2687,"nodeType":"Block","src":"4576:64:16","statements":[{"expression":{"arguments":[{"id":2678,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4603:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2682,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"4619:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2680,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:16","typeDescriptions":{}}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:16","memberName":"length","nodeType":"MemberAccess","src":"4613:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2677,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2688,2719],"referencedDeclaration":2719,"src":"4593:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2676,"id":2686,"nodeType":"Return","src":"4586:47:16"}]},"documentation":{"id":2670,"nodeType":"StructuredDocumentation","src":"4285:214:16","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2688,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:16","nodeType":"FunctionDefinition","parameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"input","nameLocation":"4537:5:16","nodeType":"VariableDeclaration","scope":2688,"src":"4523:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2671,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:16"},"returnParameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2688,"src":"4567:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2674,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:16"},"scope":3540,"src":"4504:136:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2718,"nodeType":"Block","src":"5038:153:16","statements":[{"assignments":[2701,2703],"declarations":[{"constant":false,"id":2701,"mutability":"mutable","name":"success","nameLocation":"5054:7:16","nodeType":"VariableDeclaration","scope":2718,"src":"5049:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2700,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2703,"mutability":"mutable","name":"value","nameLocation":"5071:5:16","nodeType":"VariableDeclaration","scope":2718,"src":"5063:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2709,"initialValue":{"arguments":[{"id":2705,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"5093:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2706,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"5100:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2707,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"5107:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2704,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2740,2777],"referencedDeclaration":2777,"src":"5080:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:16"},{"condition":{"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:16","subExpression":{"id":2710,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"5126:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2715,"nodeType":"IfStatement","src":"5121:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2712,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"5142:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2714,"nodeType":"RevertStatement","src":"5135:27:16"}},{"expression":{"id":2716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"5179:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2699,"id":2717,"nodeType":"Return","src":"5172:12:16"}]},"documentation":{"id":2689,"nodeType":"StructuredDocumentation","src":"4646:287:16","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2719,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:16","nodeType":"FunctionDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2691,"mutability":"mutable","name":"input","nameLocation":"4971:5:16","nodeType":"VariableDeclaration","scope":2719,"src":"4957:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2690,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2693,"mutability":"mutable","name":"begin","nameLocation":"4986:5:16","nodeType":"VariableDeclaration","scope":2719,"src":"4978:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2692,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2695,"mutability":"mutable","name":"end","nameLocation":"5001:3:16","nodeType":"VariableDeclaration","scope":2719,"src":"4993:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:16"},"returnParameters":{"id":2699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2719,"src":"5029:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:16"},"scope":3540,"src":"4938:253:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2739,"nodeType":"Block","src":"5512:83:16","statements":[{"expression":{"arguments":[{"id":2730,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"5558:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2734,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"5574:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2732,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:16","typeDescriptions":{}}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:16","memberName":"length","nodeType":"MemberAccess","src":"5568:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2729,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"5529:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2728,"id":2738,"nodeType":"Return","src":"5522:66:16"}]},"documentation":{"id":2720,"nodeType":"StructuredDocumentation","src":"5197:215:16","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2740,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:16","nodeType":"FunctionDefinition","parameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"input","nameLocation":"5453:5:16","nodeType":"VariableDeclaration","scope":2740,"src":"5439:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2721,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:16"},"returnParameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"success","nameLocation":"5488:7:16","nodeType":"VariableDeclaration","scope":2740,"src":"5483:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2724,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"value","nameLocation":"5505:5:16","nodeType":"VariableDeclaration","scope":2740,"src":"5497:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:16"},"scope":3540,"src":"5417:178:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2776,"nodeType":"Block","src":"5997:144:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2754,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"6011:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2757,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"6023:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2755,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:16","typeDescriptions":{}}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:16","memberName":"length","nodeType":"MemberAccess","src":"6017:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2761,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"6040:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2762,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"6048:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2769,"nodeType":"IfStatement","src":"6007:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2753,"id":2768,"nodeType":"Return","src":"6053:17:16"}},{"expression":{"arguments":[{"id":2771,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"6116:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2772,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"6123:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2773,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"6130:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2770,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"6087:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2753,"id":2775,"nodeType":"Return","src":"6080:54:16"}]},"documentation":{"id":2741,"nodeType":"StructuredDocumentation","src":"5601:238:16","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2777,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:16","nodeType":"FunctionDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"input","nameLocation":"5889:5:16","nodeType":"VariableDeclaration","scope":2777,"src":"5875:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2742,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2745,"mutability":"mutable","name":"begin","nameLocation":"5912:5:16","nodeType":"VariableDeclaration","scope":2777,"src":"5904:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"end","nameLocation":"5935:3:16","nodeType":"VariableDeclaration","scope":2777,"src":"5927:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:16"},"returnParameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"success","nameLocation":"5973:7:16","nodeType":"VariableDeclaration","scope":2777,"src":"5968:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2749,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2752,"mutability":"mutable","name":"value","nameLocation":"5990:5:16","nodeType":"VariableDeclaration","scope":2777,"src":"5982:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:16"},"scope":3540,"src":"5844:297:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2846,"nodeType":"Block","src":"6521:347:16","statements":[{"assignments":[2792],"declarations":[{"constant":false,"id":2792,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:16","nodeType":"VariableDeclaration","scope":2846,"src":"6531:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2791,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2797,"initialValue":{"arguments":[{"id":2795,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"6559:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2793,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:16","typeDescriptions":{}}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:16"},{"assignments":[2799],"declarations":[{"constant":false,"id":2799,"mutability":"mutable","name":"result","nameLocation":"6584:6:16","nodeType":"VariableDeclaration","scope":2846,"src":"6576:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2801,"initialValue":{"hexValue":"30","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:16"},{"body":{"id":2840,"nodeType":"Block","src":"6642:189:16","statements":[{"assignments":[2813],"declarations":[{"constant":false,"id":2813,"mutability":"mutable","name":"chr","nameLocation":"6662:3:16","nodeType":"VariableDeclaration","scope":2840,"src":"6656:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2812,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2823,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2818,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"6711:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2819,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"6719:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2817,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"6688:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2815,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:16","typeDescriptions":{}}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2814,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"6668:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2824,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"6741:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2831,"nodeType":"IfStatement","src":"6737:30:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2829,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2790,"id":2830,"nodeType":"Return","src":"6750:17:16"}},{"expression":{"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"6781:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2835,"nodeType":"ExpressionStatement","src":"6781:12:16"},{"expression":{"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"6807:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2837,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"6817:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2839,"nodeType":"ExpressionStatement","src":"6807:13:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2806,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"6628:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2807,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"6632:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2841,"initializationExpression":{"assignments":[2803],"declarations":[{"constant":false,"id":2803,"mutability":"mutable","name":"i","nameLocation":"6617:1:16","nodeType":"VariableDeclaration","scope":2841,"src":"6609:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2805,"initialValue":{"id":2804,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"6621:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:16"},"loopExpression":{"expression":{"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:16","subExpression":{"id":2809,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"6639:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2811,"nodeType":"ExpressionStatement","src":"6637:3:16"},"nodeType":"ForStatement","src":"6604:227:16"},{"expression":{"components":[{"hexValue":"74727565","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"6854:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2790,"id":2845,"nodeType":"Return","src":"6840:21:16"}]},"documentation":{"id":2778,"nodeType":"StructuredDocumentation","src":"6147:201:16","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2847,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:16","nodeType":"FunctionDefinition","parameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"input","nameLocation":"6414:5:16","nodeType":"VariableDeclaration","scope":2847,"src":"6400:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2779,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2782,"mutability":"mutable","name":"begin","nameLocation":"6437:5:16","nodeType":"VariableDeclaration","scope":2847,"src":"6429:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2784,"mutability":"mutable","name":"end","nameLocation":"6460:3:16","nodeType":"VariableDeclaration","scope":2847,"src":"6452:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:16"},"returnParameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"success","nameLocation":"6497:7:16","nodeType":"VariableDeclaration","scope":2847,"src":"6492:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2786,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"value","nameLocation":"6514:5:16","nodeType":"VariableDeclaration","scope":2847,"src":"6506:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:16"},"scope":3540,"src":"6353:515:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2865,"nodeType":"Block","src":"7165:63:16","statements":[{"expression":{"arguments":[{"id":2856,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"7191:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2860,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"7207:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2858,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:16","typeDescriptions":{}}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:16","memberName":"length","nodeType":"MemberAccess","src":"7201:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2855,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2866,2897],"referencedDeclaration":2897,"src":"7182:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2854,"id":2864,"nodeType":"Return","src":"7175:46:16"}]},"documentation":{"id":2848,"nodeType":"StructuredDocumentation","src":"6874:216:16","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2866,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:16","nodeType":"FunctionDefinition","parameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"input","nameLocation":"7127:5:16","nodeType":"VariableDeclaration","scope":2866,"src":"7113:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2849,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:16"},"returnParameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2866,"src":"7157:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2852,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:16"},"scope":3540,"src":"7095:133:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2896,"nodeType":"Block","src":"7633:151:16","statements":[{"assignments":[2879,2881],"declarations":[{"constant":false,"id":2879,"mutability":"mutable","name":"success","nameLocation":"7649:7:16","nodeType":"VariableDeclaration","scope":2896,"src":"7644:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2878,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2881,"mutability":"mutable","name":"value","nameLocation":"7665:5:16","nodeType":"VariableDeclaration","scope":2896,"src":"7658:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2880,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2887,"initialValue":{"arguments":[{"id":2883,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"7686:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2884,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"7693:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2885,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"7700:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2882,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2918,2960],"referencedDeclaration":2960,"src":"7674:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:16"},{"condition":{"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:16","subExpression":{"id":2888,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"7719:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2893,"nodeType":"IfStatement","src":"7714:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2890,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"7735:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2892,"nodeType":"RevertStatement","src":"7728:27:16"}},{"expression":{"id":2894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"7772:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2877,"id":2895,"nodeType":"Return","src":"7765:12:16"}]},"documentation":{"id":2867,"nodeType":"StructuredDocumentation","src":"7234:296:16","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2897,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:16","nodeType":"FunctionDefinition","parameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"input","nameLocation":"7567:5:16","nodeType":"VariableDeclaration","scope":2897,"src":"7553:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2868,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2871,"mutability":"mutable","name":"begin","nameLocation":"7582:5:16","nodeType":"VariableDeclaration","scope":2897,"src":"7574:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2873,"mutability":"mutable","name":"end","nameLocation":"7597:3:16","nodeType":"VariableDeclaration","scope":2897,"src":"7589:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:16"},"returnParameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2897,"src":"7625:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2875,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:16"},"scope":3540,"src":"7535:249:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2917,"nodeType":"Block","src":"8175:82:16","statements":[{"expression":{"arguments":[{"id":2908,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"8220:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2912,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"8236:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2910,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:16","typeDescriptions":{}}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:16","memberName":"length","nodeType":"MemberAccess","src":"8230:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2907,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"8192:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2906,"id":2916,"nodeType":"Return","src":"8185:65:16"}]},"documentation":{"id":2898,"nodeType":"StructuredDocumentation","src":"7790:287:16","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2918,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:16","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"input","nameLocation":"8117:5:16","nodeType":"VariableDeclaration","scope":2918,"src":"8103:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2899,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:16"},"returnParameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"success","nameLocation":"8152:7:16","nodeType":"VariableDeclaration","scope":2918,"src":"8147:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2902,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2905,"mutability":"mutable","name":"value","nameLocation":"8168:5:16","nodeType":"VariableDeclaration","scope":2918,"src":"8161:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2904,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:16"},"scope":3540,"src":"8082:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2923,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:16","nodeType":"VariableDeclaration","scope":3540,"src":"8263:50:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2959,"nodeType":"Block","src":"8779:143:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2937,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"8793:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2940,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"8805:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2938,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:16","typeDescriptions":{}}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:16","memberName":"length","nodeType":"MemberAccess","src":"8799:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2944,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"8822:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2945,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"8830:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2952,"nodeType":"IfStatement","src":"8789:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2936,"id":2951,"nodeType":"Return","src":"8835:17:16"}},{"expression":{"arguments":[{"id":2954,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"8897:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2955,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"8904:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2956,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"8911:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2953,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"8869:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2936,"id":2958,"nodeType":"Return","src":"8862:53:16"}]},"documentation":{"id":2924,"nodeType":"StructuredDocumentation","src":"8320:303:16","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2960,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:16","nodeType":"FunctionDefinition","parameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"input","nameLocation":"8672:5:16","nodeType":"VariableDeclaration","scope":2960,"src":"8658:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2925,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2928,"mutability":"mutable","name":"begin","nameLocation":"8695:5:16","nodeType":"VariableDeclaration","scope":2960,"src":"8687:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2930,"mutability":"mutable","name":"end","nameLocation":"8718:3:16","nodeType":"VariableDeclaration","scope":2960,"src":"8710:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:16"},"returnParameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"success","nameLocation":"8756:7:16","nodeType":"VariableDeclaration","scope":2960,"src":"8751:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2932,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"value","nameLocation":"8772:5:16","nodeType":"VariableDeclaration","scope":2960,"src":"8765:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2934,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:16"},"scope":3540,"src":"8628:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3080,"nodeType":"Block","src":"9299:812:16","statements":[{"assignments":[2975],"declarations":[{"constant":false,"id":2975,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:16","nodeType":"VariableDeclaration","scope":3080,"src":"9309:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2974,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2980,"initialValue":{"arguments":[{"id":2978,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"9337:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2976,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:16","typeDescriptions":{}}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:16"},{"assignments":[2982],"declarations":[{"constant":false,"id":2982,"mutability":"mutable","name":"sign","nameLocation":"9407:4:16","nodeType":"VariableDeclaration","scope":3080,"src":"9400:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2981,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2998,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"9414:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2984,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"9423:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2993,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"9471:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2994,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"9479:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2992,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"9448:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2990,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:16","typeDescriptions":{}}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:16","trueExpression":{"arguments":[{"hexValue":"30","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2986,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:16","typeDescriptions":{}}},"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:16"},{"assignments":[3000],"declarations":[{"constant":false,"id":3000,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:16","nodeType":"VariableDeclaration","scope":3080,"src":"9567:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2999,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3007,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3001,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"9587:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3002,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:16","typeDescriptions":{}}},"id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:16"},{"assignments":[3009],"declarations":[{"constant":false,"id":3009,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:16","nodeType":"VariableDeclaration","scope":3080,"src":"9616:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3008,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3016,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3010,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"9636:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3011,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:16","typeDescriptions":{}}},"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:16"},{"assignments":[3018],"declarations":[{"constant":false,"id":3018,"mutability":"mutable","name":"offset","nameLocation":"9673:6:16","nodeType":"VariableDeclaration","scope":3080,"src":"9665:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3025,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"9683:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3020,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"9699:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"9682:37:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:16"},{"assignments":[3027,3029],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:16","nodeType":"VariableDeclaration","scope":3080,"src":"9733:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3026,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3029,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:16","nodeType":"VariableDeclaration","scope":3080,"src":"9750:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3028,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3037,"initialValue":{"arguments":[{"id":3031,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"9783:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3032,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"9790:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3033,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"9798:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3035,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"9806:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3030,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2740,2777],"referencedDeclaration":2777,"src":"9770:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3038,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"9825:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3039,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"9839:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3040,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"9850:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3058,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"9967:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3059,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"9981:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3061,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"9997:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3062,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"10009:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2973,"id":3077,"nodeType":"Return","src":"10087:17:16"},"id":3078,"nodeType":"IfStatement","src":"9963:141:16","trueBody":{"id":3073,"nodeType":"Block","src":"10025:56:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3067,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3066,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:16","memberName":"min","nodeType":"MemberAccess","src":"10053:16:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2973,"id":3072,"nodeType":"Return","src":"10039:31:16"}]}},"id":3079,"nodeType":"IfStatement","src":"9821:283:16","trueBody":{"id":3057,"nodeType":"Block","src":"9866:91:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3044,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"9894:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3052,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"9936:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3050,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:16","typeDescriptions":{}}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:16","trueExpression":{"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:16","subExpression":{"arguments":[{"id":3047,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"9917:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3045,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:16","typeDescriptions":{}}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2973,"id":3056,"nodeType":"Return","src":"9880:66:16"}]}}]},"documentation":{"id":2961,"nodeType":"StructuredDocumentation","src":"8928:200:16","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3081,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:16","nodeType":"FunctionDefinition","parameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"input","nameLocation":"9193:5:16","nodeType":"VariableDeclaration","scope":3081,"src":"9179:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2962,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2965,"mutability":"mutable","name":"begin","nameLocation":"9216:5:16","nodeType":"VariableDeclaration","scope":3081,"src":"9208:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2967,"mutability":"mutable","name":"end","nameLocation":"9239:3:16","nodeType":"VariableDeclaration","scope":3081,"src":"9231:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:16"},"returnParameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"success","nameLocation":"9276:7:16","nodeType":"VariableDeclaration","scope":3081,"src":"9271:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2969,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"value","nameLocation":"9292:5:16","nodeType":"VariableDeclaration","scope":3081,"src":"9285:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2971,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:16"},"scope":3540,"src":"9133:978:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3099,"nodeType":"Block","src":"10456:67:16","statements":[{"expression":{"arguments":[{"id":3090,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"10486:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3094,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"10502:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3092,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:16","typeDescriptions":{}}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:16","memberName":"length","nodeType":"MemberAccess","src":"10496:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3089,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3100,3131],"referencedDeclaration":3131,"src":"10473:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3088,"id":3098,"nodeType":"Return","src":"10466:50:16"}]},"documentation":{"id":3082,"nodeType":"StructuredDocumentation","src":"10117:259:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3100,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:16","nodeType":"FunctionDefinition","parameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"input","nameLocation":"10417:5:16","nodeType":"VariableDeclaration","scope":3100,"src":"10403:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3083,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:16"},"returnParameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3100,"src":"10447:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:16"},"scope":3540,"src":"10381:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3130,"nodeType":"Block","src":"10937:156:16","statements":[{"assignments":[3113,3115],"declarations":[{"constant":false,"id":3113,"mutability":"mutable","name":"success","nameLocation":"10953:7:16","nodeType":"VariableDeclaration","scope":3130,"src":"10948:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3112,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3115,"mutability":"mutable","name":"value","nameLocation":"10970:5:16","nodeType":"VariableDeclaration","scope":3130,"src":"10962:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3114,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3121,"initialValue":{"arguments":[{"id":3117,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"10995:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3118,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"11002:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3119,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"11009:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3116,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3152,3189],"referencedDeclaration":3189,"src":"10979:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:16"},{"condition":{"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:16","subExpression":{"id":3122,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"11028:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3127,"nodeType":"IfStatement","src":"11023:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3124,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"11044:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3126,"nodeType":"RevertStatement","src":"11037:27:16"}},{"expression":{"id":3128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"11081:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3111,"id":3129,"nodeType":"Return","src":"11074:12:16"}]},"documentation":{"id":3101,"nodeType":"StructuredDocumentation","src":"10529:300:16","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3131,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:16","nodeType":"FunctionDefinition","parameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"input","nameLocation":"10870:5:16","nodeType":"VariableDeclaration","scope":3131,"src":"10856:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3102,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"begin","nameLocation":"10885:5:16","nodeType":"VariableDeclaration","scope":3131,"src":"10877:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"end","nameLocation":"10900:3:16","nodeType":"VariableDeclaration","scope":3131,"src":"10892:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:16"},"returnParameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3131,"src":"10928:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:16"},"scope":3540,"src":"10834:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3151,"nodeType":"Block","src":"11420:86:16","statements":[{"expression":{"arguments":[{"id":3142,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"11469:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3146,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"11485:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3144,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:16","typeDescriptions":{}}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:16","memberName":"length","nodeType":"MemberAccess","src":"11479:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3141,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"11437:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3140,"id":3150,"nodeType":"Return","src":"11430:69:16"}]},"documentation":{"id":3132,"nodeType":"StructuredDocumentation","src":"11099:218:16","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:16","nodeType":"FunctionDefinition","parameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"input","nameLocation":"11361:5:16","nodeType":"VariableDeclaration","scope":3152,"src":"11347:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3133,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:16"},"returnParameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"success","nameLocation":"11396:7:16","nodeType":"VariableDeclaration","scope":3152,"src":"11391:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3136,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"value","nameLocation":"11413:5:16","nodeType":"VariableDeclaration","scope":3152,"src":"11405:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:16"},"scope":3540,"src":"11322:184:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3188,"nodeType":"Block","src":"11914:147:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3166,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"11928:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3169,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"11940:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3167,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:16","typeDescriptions":{}}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:16","memberName":"length","nodeType":"MemberAccess","src":"11934:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3173,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"11957:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3174,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"11965:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3181,"nodeType":"IfStatement","src":"11924:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3165,"id":3180,"nodeType":"Return","src":"11970:17:16"}},{"expression":{"arguments":[{"id":3183,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"12036:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3184,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"12043:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3185,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"12050:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3182,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"12004:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3165,"id":3187,"nodeType":"Return","src":"11997:57:16"}]},"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"11512:241:16","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3189,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:16","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"input","nameLocation":"11806:5:16","nodeType":"VariableDeclaration","scope":3189,"src":"11792:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3154,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"begin","nameLocation":"11829:5:16","nodeType":"VariableDeclaration","scope":3189,"src":"11821:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"end","nameLocation":"11852:3:16","nodeType":"VariableDeclaration","scope":3189,"src":"11844:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:16"},"returnParameters":{"id":3165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"success","nameLocation":"11890:7:16","nodeType":"VariableDeclaration","scope":3189,"src":"11885:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3161,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3164,"mutability":"mutable","name":"value","nameLocation":"11907:5:16","nodeType":"VariableDeclaration","scope":3189,"src":"11899:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3163,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:16"},"scope":3540,"src":"11758:303:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3291,"nodeType":"Block","src":"12447:880:16","statements":[{"assignments":[3204],"declarations":[{"constant":false,"id":3204,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:16","nodeType":"VariableDeclaration","scope":3291,"src":"12457:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3203,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3209,"initialValue":{"arguments":[{"id":3207,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"12485:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3205,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:16","typeDescriptions":{}}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:16"},{"assignments":[3211],"declarations":[{"constant":false,"id":3211,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:16","nodeType":"VariableDeclaration","scope":3291,"src":"12539:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3210,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3231,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3212,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"12557:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3213,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12563:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3221,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"12607:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3222,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12615:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3220,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"12584:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3218,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:16","typeDescriptions":{}}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3225,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:16","typeDescriptions":{}}},"id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:16"},{"assignments":[3233],"declarations":[{"constant":false,"id":3233,"mutability":"mutable","name":"offset","nameLocation":"12727:6:16","nodeType":"VariableDeclaration","scope":3291,"src":"12719:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3239,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3234,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"12736:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"12736:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:16"},{"assignments":[3241],"declarations":[{"constant":false,"id":3241,"mutability":"mutable","name":"result","nameLocation":"12777:6:16","nodeType":"VariableDeclaration","scope":3291,"src":"12769:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3243,"initialValue":{"hexValue":"30","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:16"},{"body":{"id":3285,"nodeType":"Block","src":"12844:446:16","statements":[{"assignments":[3257],"declarations":[{"constant":false,"id":3257,"mutability":"mutable","name":"chr","nameLocation":"12864:3:16","nodeType":"VariableDeclaration","scope":3285,"src":"12858:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3256,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3267,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3262,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"12913:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3263,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"12921:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3261,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"12890:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3259,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:16","typeDescriptions":{}}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3258,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"12870:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3268,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"12943:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3275,"nodeType":"IfStatement","src":"12939:31:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3202,"id":3274,"nodeType":"Return","src":"12953:17:16"}},{"expression":{"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"12984:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3279,"nodeType":"ExpressionStatement","src":"12984:12:16"},{"id":3284,"nodeType":"UncheckedBlock","src":"13010:270:16","statements":[{"expression":{"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3280,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"13252:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3281,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"13262:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3283,"nodeType":"ExpressionStatement","src":"13252:13:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3250,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"12830:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3251,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"12834:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3286,"initializationExpression":{"assignments":[3245],"declarations":[{"constant":false,"id":3245,"mutability":"mutable","name":"i","nameLocation":"12810:1:16","nodeType":"VariableDeclaration","scope":3286,"src":"12802:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3244,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3249,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3246,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"12814:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3247,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"12822:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:16"},"loopExpression":{"expression":{"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:16","subExpression":{"id":3253,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"12841:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3255,"nodeType":"ExpressionStatement","src":"12839:3:16"},"nodeType":"ForStatement","src":"12797:493:16"},{"expression":{"components":[{"hexValue":"74727565","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"13313:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3202,"id":3290,"nodeType":"Return","src":"13299:21:16"}]},"documentation":{"id":3190,"nodeType":"StructuredDocumentation","src":"12067:204:16","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3292,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:16","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"input","nameLocation":"12340:5:16","nodeType":"VariableDeclaration","scope":3292,"src":"12326:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3191,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"begin","nameLocation":"12363:5:16","nodeType":"VariableDeclaration","scope":3292,"src":"12355:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"end","nameLocation":"12386:3:16","nodeType":"VariableDeclaration","scope":3292,"src":"12378:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:16"},"returnParameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"success","nameLocation":"12423:7:16","nodeType":"VariableDeclaration","scope":3292,"src":"12418:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3198,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"value","nameLocation":"12440:5:16","nodeType":"VariableDeclaration","scope":3292,"src":"12432:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:16"},"scope":3540,"src":"12276:1051:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3310,"nodeType":"Block","src":"13625:67:16","statements":[{"expression":{"arguments":[{"id":3301,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"13655:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3305,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"13671:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3303,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:16","typeDescriptions":{}}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:16","memberName":"length","nodeType":"MemberAccess","src":"13665:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3300,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3311,3342],"referencedDeclaration":3342,"src":"13642:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3299,"id":3309,"nodeType":"Return","src":"13635:50:16"}]},"documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"13333:212:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3311,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:16","nodeType":"FunctionDefinition","parameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"input","nameLocation":"13586:5:16","nodeType":"VariableDeclaration","scope":3311,"src":"13572:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3294,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:16"},"returnParameters":{"id":3299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3311,"src":"13616:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3297,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:16"},"scope":3540,"src":"13550:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3341,"nodeType":"Block","src":"14058:165:16","statements":[{"assignments":[3324,3326],"declarations":[{"constant":false,"id":3324,"mutability":"mutable","name":"success","nameLocation":"14074:7:16","nodeType":"VariableDeclaration","scope":3341,"src":"14069:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3323,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"value","nameLocation":"14091:5:16","nodeType":"VariableDeclaration","scope":3341,"src":"14083:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3325,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3332,"initialValue":{"arguments":[{"id":3328,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"14116:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3329,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"14123:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3330,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"14130:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3327,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3363,3467],"referencedDeclaration":3467,"src":"14100:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:16"},{"condition":{"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:16","subExpression":{"id":3333,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"14149:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3338,"nodeType":"IfStatement","src":"14144:50:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3335,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"14165:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3337,"nodeType":"RevertStatement","src":"14158:36:16"}},{"expression":{"id":3339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"14211:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3322,"id":3340,"nodeType":"Return","src":"14204:12:16"}]},"documentation":{"id":3312,"nodeType":"StructuredDocumentation","src":"13698:252:16","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3342,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:16","nodeType":"FunctionDefinition","parameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"input","nameLocation":"13991:5:16","nodeType":"VariableDeclaration","scope":3342,"src":"13977:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3313,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3316,"mutability":"mutable","name":"begin","nameLocation":"14006:5:16","nodeType":"VariableDeclaration","scope":3342,"src":"13998:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3315,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3318,"mutability":"mutable","name":"end","nameLocation":"14021:3:16","nodeType":"VariableDeclaration","scope":3342,"src":"14013:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:16"},"returnParameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3342,"src":"14049:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3320,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:16"},"scope":3540,"src":"13955:268:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3362,"nodeType":"Block","src":"14523:70:16","statements":[{"expression":{"arguments":[{"id":3353,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"14556:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3357,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"14572:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3355,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:16","typeDescriptions":{}}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:16","memberName":"length","nodeType":"MemberAccess","src":"14566:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3352,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3363,3467],"referencedDeclaration":3467,"src":"14540:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3351,"id":3361,"nodeType":"Return","src":"14533:53:16"}]},"documentation":{"id":3343,"nodeType":"StructuredDocumentation","src":"14229:191:16","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3363,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:16","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"input","nameLocation":"14464:5:16","nodeType":"VariableDeclaration","scope":3363,"src":"14450:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3344,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:16"},"returnParameters":{"id":3351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"success","nameLocation":"14499:7:16","nodeType":"VariableDeclaration","scope":3363,"src":"14494:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3347,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3350,"mutability":"mutable","name":"value","nameLocation":"14516:5:16","nodeType":"VariableDeclaration","scope":3363,"src":"14508:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3349,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:16"},"scope":3540,"src":"14425:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3466,"nodeType":"Block","src":"14963:733:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3377,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"14977:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3380,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"14989:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3378,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:16","typeDescriptions":{}}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:16","memberName":"length","nodeType":"MemberAccess","src":"14983:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"15006:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3385,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"15014:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3395,"nodeType":"IfStatement","src":"14973:72:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3389,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:16","typeDescriptions":{}}},"id":3392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3376,"id":3394,"nodeType":"Return","src":"15019:26:16"}},{"assignments":[3397],"declarations":[{"constant":false,"id":3397,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:16","nodeType":"VariableDeclaration","scope":3466,"src":"15056:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3396,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3420,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3398,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"15074:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3399,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"15080:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3409,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"15130:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3407,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:16","typeDescriptions":{}}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3411,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"15138:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3406,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"15101:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3404,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:16","typeDescriptions":{}}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3414,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:16","typeDescriptions":{}}},"id":3417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:16"},{"assignments":[3422],"declarations":[{"constant":false,"id":3422,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:16","nodeType":"VariableDeclaration","scope":3466,"src":"15242:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3430,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3424,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"15272:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"15272:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3431,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"15359:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3432,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"15365:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3434,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"15374:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3464,"nodeType":"Block","src":"15639:51:16","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3458,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:16","typeDescriptions":{}}},"id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3376,"id":3463,"nodeType":"Return","src":"15653:26:16"}]},"id":3465,"nodeType":"IfStatement","src":"15355:335:16","trueBody":{"id":3456,"nodeType":"Block","src":"15390:243:16","statements":[{"assignments":[3437,3439],"declarations":[{"constant":false,"id":3437,"mutability":"mutable","name":"s","nameLocation":"15511:1:16","nodeType":"VariableDeclaration","scope":3456,"src":"15506:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3436,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3439,"mutability":"mutable","name":"v","nameLocation":"15522:1:16","nodeType":"VariableDeclaration","scope":3456,"src":"15514:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3438,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3445,"initialValue":{"arguments":[{"id":3441,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"15559:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3442,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"15566:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3443,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"15573:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3440,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"15527:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:16"},{"expression":{"components":[{"id":3446,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"15599:1:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3451,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"15618:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3449,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:16","typeDescriptions":{}}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3447,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:16","typeDescriptions":{}}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3376,"id":3455,"nodeType":"Return","src":"15591:31:16"}]}}]},"documentation":{"id":3364,"nodeType":"StructuredDocumentation","src":"14599:203:16","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3467,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:16","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"mutability":"mutable","name":"input","nameLocation":"14855:5:16","nodeType":"VariableDeclaration","scope":3467,"src":"14841:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3365,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3368,"mutability":"mutable","name":"begin","nameLocation":"14878:5:16","nodeType":"VariableDeclaration","scope":3467,"src":"14870:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"end","nameLocation":"14901:3:16","nodeType":"VariableDeclaration","scope":3467,"src":"14893:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:16"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"success","nameLocation":"14939:7:16","nodeType":"VariableDeclaration","scope":3467,"src":"14934:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3372,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3375,"mutability":"mutable","name":"value","nameLocation":"14956:5:16","nodeType":"VariableDeclaration","scope":3467,"src":"14948:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3374,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:16"},"scope":3540,"src":"14807:889:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3526,"nodeType":"Block","src":"15765:461:16","statements":[{"assignments":[3475],"declarations":[{"constant":false,"id":3475,"mutability":"mutable","name":"value","nameLocation":"15781:5:16","nodeType":"VariableDeclaration","scope":3526,"src":"15775:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3474,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3480,"initialValue":{"arguments":[{"id":3478,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"15795:3:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3476,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:16","typeDescriptions":{}}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:16"},{"id":3523,"nodeType":"UncheckedBlock","src":"15959:238:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"15987:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:16","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16001:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:16","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16047:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16061:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:16","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16108:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16122:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:16","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3515,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3514,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:16","memberName":"max","nodeType":"MemberAccess","src":"16171:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3473,"id":3519,"nodeType":"Return","src":"16164:22:16"},"id":3520,"nodeType":"IfStatement","src":"16104:82:16","trueBody":{"expression":{"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16134:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:16","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3513,"nodeType":"ExpressionStatement","src":"16134:11:16"}},"id":3521,"nodeType":"IfStatement","src":"16043:143:16","trueBody":{"expression":{"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16074:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:16","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3502,"nodeType":"ExpressionStatement","src":"16074:11:16"}},"id":3522,"nodeType":"IfStatement","src":"15983:203:16","trueBody":{"expression":{"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16013:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3491,"nodeType":"ExpressionStatement","src":"16013:11:16"}}]},{"expression":{"id":3524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3475,"src":"16214:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3473,"id":3525,"nodeType":"Return","src":"16207:12:16"}]},"id":3527,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:16","nodeType":"FunctionDefinition","parameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"chr","nameLocation":"15731:3:16","nodeType":"VariableDeclaration","scope":3527,"src":"15724:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3468,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:16"},"returnParameters":{"id":3473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3527,"src":"15758:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3471,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:16"},"scope":3540,"src":"15702:524:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3538,"nodeType":"Block","src":"16611:225:16","statements":[{"AST":{"nodeType":"YulBlock","src":"16760:70:16","statements":[{"nodeType":"YulAssignment","src":"16774:46:16","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"16793:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16805:4:16","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"16811:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:16"},"nodeType":"YulFunctionCall","src":"16801:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16789:3:16"},"nodeType":"YulFunctionCall","src":"16789:30:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16783:5:16"},"nodeType":"YulFunctionCall","src":"16783:37:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16774:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3530,"isOffset":false,"isSlot":false,"src":"16793:6:16","valueSize":1},{"declaration":3532,"isOffset":false,"isSlot":false,"src":"16811:6:16","valueSize":1},{"declaration":3535,"isOffset":false,"isSlot":false,"src":"16774:5:16","valueSize":1}],"flags":["memory-safe"],"id":3537,"nodeType":"InlineAssembly","src":"16735:95:16"}]},"documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"16232:268:16","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3539,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:16","nodeType":"FunctionDefinition","parameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:16","nodeType":"VariableDeclaration","scope":3539,"src":"16537:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3529,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3532,"mutability":"mutable","name":"offset","nameLocation":"16566:6:16","nodeType":"VariableDeclaration","scope":3539,"src":"16558:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:16"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"value","nameLocation":"16604:5:16","nodeType":"VariableDeclaration","scope":3539,"src":"16596:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:16"},"scope":3540,"src":"16505:331:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3541,"src":"297:16541:16","usedErrors":[2364,2367,2370],"usedEvents":[]}],"src":"101:16738:16"},"id":16},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3564],"IERC165":[3576]},"id":3565,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3542,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3565,"sourceUnit":3577,"src":"140:38:17","symbolAliases":[{"foreign":{"id":3543,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"148:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3546,"name":"IERC165","nameLocations":["688:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"688:7:17"},"id":3547,"nodeType":"InheritanceSpecifier","src":"688:7:17"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3545,"nodeType":"StructuredDocumentation","src":"180:479:17","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3564,"linearizedBaseContracts":[3564,3576],"name":"ERC165","nameLocation":"678:6:17","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3575],"body":{"id":3562,"nodeType":"Block","src":"845:64:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3555,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"862:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3557,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"882:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3576_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3576_$","typeString":"type(contract IERC165)"}],"id":3556,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3576","typeString":"type(contract IERC165)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:17","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3554,"id":3561,"nodeType":"Return","src":"855:47:17"}]},"documentation":{"id":3548,"nodeType":"StructuredDocumentation","src":"702:56:17","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3563,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:17","nodeType":"FunctionDefinition","parameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:17","nodeType":"VariableDeclaration","scope":3563,"src":"790:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3549,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:17"},"returnParameters":{"id":3554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3563,"src":"839:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3552,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:17"},"scope":3564,"src":"763:146:17","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3565,"src":"660:251:17","usedErrors":[],"usedEvents":[]}],"src":"114:798:17"},"id":17},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3576]},"id":3577,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3566,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3567,"nodeType":"StructuredDocumentation","src":"141:280:18","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3576,"linearizedBaseContracts":[3576],"name":"IERC165","nameLocation":"432:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3568,"nodeType":"StructuredDocumentation","src":"446:340:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3575,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:18","nodeType":"FunctionDefinition","parameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:18","nodeType":"VariableDeclaration","scope":3575,"src":"818:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3569,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:18"},"returnParameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3575,"src":"861:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3572,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:18"},"scope":3576,"src":"791:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3577,"src":"422:447:18","usedErrors":[],"usedEvents":[]}],"src":"115:755:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5182],"Panic":[2340],"SafeCast":[6947]},"id":5183,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3578,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3580,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5183,"sourceUnit":2341,"src":"129:35:19","symbolAliases":[{"foreign":{"id":3579,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"137:5:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3582,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5183,"sourceUnit":6948,"src":"165:40:19","symbolAliases":[{"foreign":{"id":3581,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"173:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3583,"nodeType":"StructuredDocumentation","src":"207:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5182,"linearizedBaseContracts":[5182],"name":"Math","nameLocation":"289:4:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3588,"members":[{"id":3584,"name":"Floor","nameLocation":"324:5:19","nodeType":"EnumValue","src":"324:5:19"},{"id":3585,"name":"Ceil","nameLocation":"367:4:19","nodeType":"EnumValue","src":"367:4:19"},{"id":3586,"name":"Trunc","nameLocation":"409:5:19","nodeType":"EnumValue","src":"409:5:19"},{"id":3587,"name":"Expand","nameLocation":"439:6:19","nodeType":"EnumValue","src":"439:6:19"}],"name":"Rounding","nameLocation":"305:8:19","nodeType":"EnumDefinition","src":"300:169:19"},{"body":{"id":3619,"nodeType":"Block","src":"677:140:19","statements":[{"id":3618,"nodeType":"UncheckedBlock","src":"687:124:19","statements":[{"assignments":[3601],"declarations":[{"constant":false,"id":3601,"mutability":"mutable","name":"c","nameLocation":"719:1:19","nodeType":"VariableDeclaration","scope":3618,"src":"711:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3600,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3605,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3602,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"723:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"727:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3606,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"746:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3607,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"750:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3613,"nodeType":"IfStatement","src":"742:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3599,"id":3612,"nodeType":"Return","src":"753:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3615,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"798:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3599,"id":3617,"nodeType":"Return","src":"784:16:19"}]}]},"documentation":{"id":3589,"nodeType":"StructuredDocumentation","src":"475:106:19","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3620,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:19","nodeType":"FunctionDefinition","parameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"a","nameLocation":"610:1:19","nodeType":"VariableDeclaration","scope":3620,"src":"602:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3590,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3593,"mutability":"mutable","name":"b","nameLocation":"621:1:19","nodeType":"VariableDeclaration","scope":3620,"src":"613:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3592,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:19"},"returnParameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"success","nameLocation":"652:7:19","nodeType":"VariableDeclaration","scope":3620,"src":"647:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3595,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3598,"mutability":"mutable","name":"result","nameLocation":"669:6:19","nodeType":"VariableDeclaration","scope":3620,"src":"661:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3597,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:19"},"scope":5182,"src":"586:231:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3647,"nodeType":"Block","src":"1028:113:19","statements":[{"id":3646,"nodeType":"UncheckedBlock","src":"1038:97:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3632,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"1066:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3633,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"1070:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3639,"nodeType":"IfStatement","src":"1062:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3631,"id":3638,"nodeType":"Return","src":"1073:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"1118:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3642,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"1122:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3631,"id":3645,"nodeType":"Return","src":"1104:20:19"}]}]},"documentation":{"id":3621,"nodeType":"StructuredDocumentation","src":"823:109:19","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3648,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:19","nodeType":"FunctionDefinition","parameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"mutability":"mutable","name":"a","nameLocation":"961:1:19","nodeType":"VariableDeclaration","scope":3648,"src":"953:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3622,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"b","nameLocation":"972:1:19","nodeType":"VariableDeclaration","scope":3648,"src":"964:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:19"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"success","nameLocation":"1003:7:19","nodeType":"VariableDeclaration","scope":3648,"src":"998:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3627,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"result","nameLocation":"1020:6:19","nodeType":"VariableDeclaration","scope":3648,"src":"1012:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:19"},"scope":5182,"src":"937:204:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3689,"nodeType":"Block","src":"1355:417:19","statements":[{"id":3688,"nodeType":"UncheckedBlock","src":"1365:401:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3660,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"1623:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3667,"nodeType":"IfStatement","src":"1619:28:19","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3659,"id":3666,"nodeType":"Return","src":"1631:16:19"}},{"assignments":[3669],"declarations":[{"constant":false,"id":3669,"mutability":"mutable","name":"c","nameLocation":"1669:1:19","nodeType":"VariableDeclaration","scope":3688,"src":"1661:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3673,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3670,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"1673:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3671,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"1677:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3674,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"1696:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3675,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"1700:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3677,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"1705:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3683,"nodeType":"IfStatement","src":"1692:33:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3659,"id":3682,"nodeType":"Return","src":"1708:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3685,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"1753:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3659,"id":3687,"nodeType":"Return","src":"1739:16:19"}]}]},"documentation":{"id":3649,"nodeType":"StructuredDocumentation","src":"1147:112:19","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3690,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:19","nodeType":"FunctionDefinition","parameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"a","nameLocation":"1288:1:19","nodeType":"VariableDeclaration","scope":3690,"src":"1280:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3653,"mutability":"mutable","name":"b","nameLocation":"1299:1:19","nodeType":"VariableDeclaration","scope":3690,"src":"1291:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:19"},"returnParameters":{"id":3659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"success","nameLocation":"1330:7:19","nodeType":"VariableDeclaration","scope":3690,"src":"1325:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3655,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3658,"mutability":"mutable","name":"result","nameLocation":"1347:6:19","nodeType":"VariableDeclaration","scope":3690,"src":"1339:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:19"},"scope":5182,"src":"1264:508:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3717,"nodeType":"Block","src":"1987:114:19","statements":[{"id":3716,"nodeType":"UncheckedBlock","src":"1997:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3702,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"2025:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3709,"nodeType":"IfStatement","src":"2021:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3701,"id":3708,"nodeType":"Return","src":"2033:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3711,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"2078:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3712,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"2082:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3701,"id":3715,"nodeType":"Return","src":"2064:20:19"}]}]},"documentation":{"id":3691,"nodeType":"StructuredDocumentation","src":"1778:113:19","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3718,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:19","nodeType":"FunctionDefinition","parameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"a","nameLocation":"1920:1:19","nodeType":"VariableDeclaration","scope":3718,"src":"1912:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"b","nameLocation":"1931:1:19","nodeType":"VariableDeclaration","scope":3718,"src":"1923:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:19"},"returnParameters":{"id":3701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3698,"mutability":"mutable","name":"success","nameLocation":"1962:7:19","nodeType":"VariableDeclaration","scope":3718,"src":"1957:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3697,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3700,"mutability":"mutable","name":"result","nameLocation":"1979:6:19","nodeType":"VariableDeclaration","scope":3718,"src":"1971:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3699,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:19"},"scope":5182,"src":"1896:205:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3745,"nodeType":"Block","src":"2326:114:19","statements":[{"id":3744,"nodeType":"UncheckedBlock","src":"2336:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"2364:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3737,"nodeType":"IfStatement","src":"2360:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3729,"id":3736,"nodeType":"Return","src":"2372:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3739,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"2417:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3740,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"2421:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3729,"id":3743,"nodeType":"Return","src":"2403:20:19"}]}]},"documentation":{"id":3719,"nodeType":"StructuredDocumentation","src":"2107:123:19","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3746,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:19","nodeType":"FunctionDefinition","parameters":{"id":3724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3721,"mutability":"mutable","name":"a","nameLocation":"2259:1:19","nodeType":"VariableDeclaration","scope":3746,"src":"2251:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3723,"mutability":"mutable","name":"b","nameLocation":"2270:1:19","nodeType":"VariableDeclaration","scope":3746,"src":"2262:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:19"},"returnParameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3726,"mutability":"mutable","name":"success","nameLocation":"2301:7:19","nodeType":"VariableDeclaration","scope":3746,"src":"2296:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3725,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3728,"mutability":"mutable","name":"result","nameLocation":"2318:6:19","nodeType":"VariableDeclaration","scope":3746,"src":"2310:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:19"},"scope":5182,"src":"2235:205:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3772,"nodeType":"Block","src":"2912:207:19","statements":[{"id":3771,"nodeType":"UncheckedBlock","src":"2922:191:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3758,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"3060:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"3066:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3760,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"3070:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3765,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"3091:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3763,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"3075:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"3075:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3768,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3757,"id":3770,"nodeType":"Return","src":"3053:49:19"}]}]},"documentation":{"id":3747,"nodeType":"StructuredDocumentation","src":"2446:374:19","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3773,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:19","nodeType":"FunctionDefinition","parameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"mutability":"mutable","name":"condition","nameLocation":"2847:9:19","nodeType":"VariableDeclaration","scope":3773,"src":"2842:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3748,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3751,"mutability":"mutable","name":"a","nameLocation":"2866:1:19","nodeType":"VariableDeclaration","scope":3773,"src":"2858:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3753,"mutability":"mutable","name":"b","nameLocation":"2877:1:19","nodeType":"VariableDeclaration","scope":3773,"src":"2869:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:19"},"returnParameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3773,"src":"2903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:19"},"scope":5182,"src":"2825:294:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3791,"nodeType":"Block","src":"3256:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3784,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"3281:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3785,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"3285:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3787,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"3288:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3788,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"3291:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3783,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"3273:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3782,"id":3790,"nodeType":"Return","src":"3266:27:19"}]},"documentation":{"id":3774,"nodeType":"StructuredDocumentation","src":"3125:59:19","text":" @dev Returns the largest of two numbers."},"id":3792,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:19","nodeType":"FunctionDefinition","parameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3776,"mutability":"mutable","name":"a","nameLocation":"3210:1:19","nodeType":"VariableDeclaration","scope":3792,"src":"3202:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3778,"mutability":"mutable","name":"b","nameLocation":"3221:1:19","nodeType":"VariableDeclaration","scope":3792,"src":"3213:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3777,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:19"},"returnParameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3792,"src":"3247:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:19"},"scope":5182,"src":"3189:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3810,"nodeType":"Block","src":"3438:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3803,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"3463:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3804,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"3467:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3806,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"3470:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3807,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"3473:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3802,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"3455:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3801,"id":3809,"nodeType":"Return","src":"3448:27:19"}]},"documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"3306:60:19","text":" @dev Returns the smallest of two numbers."},"id":3811,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:19","nodeType":"FunctionDefinition","parameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"a","nameLocation":"3392:1:19","nodeType":"VariableDeclaration","scope":3811,"src":"3384:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3794,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"b","nameLocation":"3403:1:19","nodeType":"VariableDeclaration","scope":3811,"src":"3395:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:19"},"returnParameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3811,"src":"3429:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:19"},"scope":5182,"src":"3371:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3833,"nodeType":"Block","src":"3666:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3821,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"3721:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3822,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"3725:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3825,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"3731:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3826,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"3735:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3828,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3820,"id":3832,"nodeType":"Return","src":"3713:28:19"}]},"documentation":{"id":3812,"nodeType":"StructuredDocumentation","src":"3488:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3834,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:19","nodeType":"FunctionDefinition","parameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"a","nameLocation":"3620:1:19","nodeType":"VariableDeclaration","scope":3834,"src":"3612:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3816,"mutability":"mutable","name":"b","nameLocation":"3631:1:19","nodeType":"VariableDeclaration","scope":3834,"src":"3623:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:19"},"returnParameters":{"id":3820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3834,"src":"3657:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:19"},"scope":5182,"src":"3595:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3874,"nodeType":"Block","src":"4040:633:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3844,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"4054:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3855,"nodeType":"IfStatement","src":"4050:150:19","trueBody":{"id":3854,"nodeType":"Block","src":"4062:138:19","statements":[{"expression":{"arguments":[{"expression":{"id":3850,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"4166:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2307,"src":"4166:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3847,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"4154:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"4154:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3853,"nodeType":"ExpressionStatement","src":"4154:35:19"}]}},{"id":3873,"nodeType":"UncheckedBlock","src":"4583:84:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3858,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"4630:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3856,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"4614:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"4614:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3862,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"4641:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3866,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"4650:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3843,"id":3872,"nodeType":"Return","src":"4607:49:19"}]}]},"documentation":{"id":3835,"nodeType":"StructuredDocumentation","src":"3754:210:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3875,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:19","nodeType":"FunctionDefinition","parameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"a","nameLocation":"3994:1:19","nodeType":"VariableDeclaration","scope":3875,"src":"3986:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"b","nameLocation":"4005:1:19","nodeType":"VariableDeclaration","scope":3875,"src":"3997:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:19"},"returnParameters":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3875,"src":"4031:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3841,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:19"},"scope":5182,"src":"3969:704:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4011,"nodeType":"Block","src":"5094:4128:19","statements":[{"id":4010,"nodeType":"UncheckedBlock","src":"5104:4112:19","statements":[{"assignments":[3888],"declarations":[{"constant":false,"id":3888,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:19","nodeType":"VariableDeclaration","scope":4010,"src":"5433:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3892,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3889,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"5449:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3890,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"5453:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:19"},{"assignments":[3894],"declarations":[{"constant":false,"id":3894,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:19","nodeType":"VariableDeclaration","scope":4010,"src":"5513:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3895,"nodeType":"VariableDeclarationStatement","src":"5513:13:19"},{"AST":{"nodeType":"YulBlock","src":"5593:122:19","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:19"},"nodeType":"YulFunctionCall","src":"5634:6:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:19"},"nodeType":"YulFunctionCall","src":"5621:20:19"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:19","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:19","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:19"},"nodeType":"YulFunctionCall","src":"5671:14:19"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:19"},"nodeType":"YulFunctionCall","src":"5687:13:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:19"},"nodeType":"YulFunctionCall","src":"5667:34:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3888,"isOffset":false,"isSlot":false,"src":"5679:5:19","valueSize":1},{"declaration":3888,"isOffset":false,"isSlot":false,"src":"5694:5:19","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"5658:5:19","valueSize":1},{"declaration":3878,"isOffset":false,"isSlot":false,"src":"5628:1:19","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"5631:1:19","valueSize":1}],"id":3896,"nodeType":"InlineAssembly","src":"5584:131:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3897,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"5796:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3905,"nodeType":"IfStatement","src":"5792:368:19","trueBody":{"id":3904,"nodeType":"Block","src":"5808:352:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"6126:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3901,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"6134:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3886,"id":3903,"nodeType":"Return","src":"6119:26:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3906,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"6270:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3907,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"6285:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3924,"nodeType":"IfStatement","src":"6266:143:19","trueBody":{"id":3923,"nodeType":"Block","src":"6292:117:19","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3913,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"6330:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3916,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"6348:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2307,"src":"6348:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3918,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"6372:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:19","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2303,"src":"6372:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3912,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"6322:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3909,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"6310:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"6310:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3922,"nodeType":"ExpressionStatement","src":"6310:84:19"}]}},{"assignments":[3926],"declarations":[{"constant":false,"id":3926,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:19","nodeType":"VariableDeclaration","scope":4010,"src":"6664:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3927,"nodeType":"VariableDeclarationStatement","src":"6664:17:19"},{"AST":{"nodeType":"YulBlock","src":"6704:291:19","statements":[{"nodeType":"YulAssignment","src":"6773:38:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:19"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:19"},"nodeType":"YulFunctionCall","src":"6786:25:19"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:19"}]},{"nodeType":"YulAssignment","src":"6893:41:19","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:19"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:19"},"nodeType":"YulFunctionCall","src":"6913:20:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:19"},"nodeType":"YulFunctionCall","src":"6902:32:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:19"}]},{"nodeType":"YulAssignment","src":"6951:30:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:19"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:19"},"nodeType":"YulFunctionCall","src":"6960:21:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3882,"isOffset":false,"isSlot":false,"src":"6799:11:19","valueSize":1},{"declaration":3888,"isOffset":false,"isSlot":false,"src":"6927:5:19","valueSize":1},{"declaration":3888,"isOffset":false,"isSlot":false,"src":"6951:5:19","valueSize":1},{"declaration":3888,"isOffset":false,"isSlot":false,"src":"6964:5:19","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"6893:5:19","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"6906:5:19","valueSize":1},{"declaration":3926,"isOffset":false,"isSlot":false,"src":"6773:9:19","valueSize":1},{"declaration":3926,"isOffset":false,"isSlot":false,"src":"6916:9:19","valueSize":1},{"declaration":3926,"isOffset":false,"isSlot":false,"src":"6971:9:19","valueSize":1},{"declaration":3878,"isOffset":false,"isSlot":false,"src":"6793:1:19","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"6796:1:19","valueSize":1}],"id":3928,"nodeType":"InlineAssembly","src":"6695:300:19"},{"assignments":[3930],"declarations":[{"constant":false,"id":3930,"mutability":"mutable","name":"twos","nameLocation":"7207:4:19","nodeType":"VariableDeclaration","scope":4010,"src":"7199:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3937,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3931,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"7214:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3933,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"7233:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:19"},{"AST":{"nodeType":"YulBlock","src":"7268:366:19","statements":[{"nodeType":"YulAssignment","src":"7333:37:19","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:19"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:19"},"nodeType":"YulFunctionCall","src":"7348:22:19"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:19"}]},{"nodeType":"YulAssignment","src":"7437:25:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:19"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:19"},"nodeType":"YulFunctionCall","src":"7446:16:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:19"}]},{"nodeType":"YulAssignment","src":"7581:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:19","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:19"},"nodeType":"YulFunctionCall","src":"7597:12:19"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:19"},"nodeType":"YulFunctionCall","src":"7593:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:19"},"nodeType":"YulFunctionCall","src":"7589:31:19"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3882,"isOffset":false,"isSlot":false,"src":"7333:11:19","valueSize":1},{"declaration":3882,"isOffset":false,"isSlot":false,"src":"7352:11:19","valueSize":1},{"declaration":3888,"isOffset":false,"isSlot":false,"src":"7437:5:19","valueSize":1},{"declaration":3888,"isOffset":false,"isSlot":false,"src":"7450:5:19","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"7365:4:19","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"7457:4:19","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"7581:4:19","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"7604:4:19","valueSize":1},{"declaration":3930,"isOffset":false,"isSlot":false,"src":"7611:4:19","valueSize":1}],"id":3938,"nodeType":"InlineAssembly","src":"7259:375:19"},{"expression":{"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3939,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"7700:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3940,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"7709:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3941,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"7717:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3944,"nodeType":"ExpressionStatement","src":"7700:21:19"},{"assignments":[3946],"declarations":[{"constant":false,"id":3946,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:19","nodeType":"VariableDeclaration","scope":4010,"src":"8056:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3945,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3953,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3948,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"8079:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:19"},{"expression":{"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3954,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3956,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"8327:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3957,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8341:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3961,"nodeType":"ExpressionStatement","src":"8312:36:19"},{"expression":{"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3962,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8382:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3964,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"8397:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3965,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8411:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3969,"nodeType":"ExpressionStatement","src":"8382:36:19"},{"expression":{"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3970,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8454:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3972,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"8469:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3973,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8483:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3977,"nodeType":"ExpressionStatement","src":"8454:36:19"},{"expression":{"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3978,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8525:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3980,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"8540:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3981,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8554:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3985,"nodeType":"ExpressionStatement","src":"8525:36:19"},{"expression":{"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3986,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8598:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3988,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"8613:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3989,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8627:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3993,"nodeType":"ExpressionStatement","src":"8598:36:19"},{"expression":{"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3994,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8672:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3996,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"8687:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3997,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"8701:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4001,"nodeType":"ExpressionStatement","src":"8672:36:19"},{"expression":{"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4002,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"9154:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4003,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"9163:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4004,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"9171:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4007,"nodeType":"ExpressionStatement","src":"9154:24:19"},{"expression":{"id":4008,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"9199:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3886,"id":4009,"nodeType":"Return","src":"9192:13:19"}]}]},"documentation":{"id":3876,"nodeType":"StructuredDocumentation","src":"4679:312:19","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4012,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:19","nodeType":"FunctionDefinition","parameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"x","nameLocation":"5020:1:19","nodeType":"VariableDeclaration","scope":4012,"src":"5012:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3877,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3880,"mutability":"mutable","name":"y","nameLocation":"5031:1:19","nodeType":"VariableDeclaration","scope":4012,"src":"5023:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:19","nodeType":"VariableDeclaration","scope":4012,"src":"5034:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:19"},"returnParameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"mutability":"mutable","name":"result","nameLocation":"5086:6:19","nodeType":"VariableDeclaration","scope":4012,"src":"5078:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3884,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:19"},"scope":5182,"src":"4996:4226:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4048,"nodeType":"Block","src":"9461:128:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4028,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"9485:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4029,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"9488:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4030,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"9491:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4027,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4012,4049],"referencedDeclaration":4012,"src":"9478:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4035,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"9539:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}],"id":4034,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"9522:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3588_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4038,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4015,"src":"9559:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4039,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"9562:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4040,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"9565:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4037,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4032,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"9506:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"9506:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4026,"id":4047,"nodeType":"Return","src":"9471:111:19"}]},"documentation":{"id":4013,"nodeType":"StructuredDocumentation","src":"9228:118:19","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4049,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:19","nodeType":"FunctionDefinition","parameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"x","nameLocation":"9375:1:19","nodeType":"VariableDeclaration","scope":4049,"src":"9367:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4014,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4017,"mutability":"mutable","name":"y","nameLocation":"9386:1:19","nodeType":"VariableDeclaration","scope":4049,"src":"9378:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4016,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4019,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:19","nodeType":"VariableDeclaration","scope":4049,"src":"9389:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4022,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:19","nodeType":"VariableDeclaration","scope":4049,"src":"9410:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"},"typeName":{"id":4021,"nodeType":"UserDefinedTypeName","pathNode":{"id":4020,"name":"Rounding","nameLocations":["9410:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3588,"src":"9410:8:19"},"referencedDeclaration":3588,"src":"9410:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:19"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4049,"src":"9452:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4024,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:19"},"scope":5182,"src":"9351:238:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4145,"nodeType":"Block","src":"10223:1849:19","statements":[{"id":4144,"nodeType":"UncheckedBlock","src":"10233:1833:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4059,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"10261:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4064,"nodeType":"IfStatement","src":"10257:20:19","trueBody":{"expression":{"hexValue":"30","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4058,"id":4063,"nodeType":"Return","src":"10269:8:19"}},{"assignments":[4066],"declarations":[{"constant":false,"id":4066,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:19","nodeType":"VariableDeclaration","scope":4144,"src":"10748:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4065,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4070,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4067,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"10768:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4068,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"10772:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:19"},{"assignments":[4072],"declarations":[{"constant":false,"id":4072,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:19","nodeType":"VariableDeclaration","scope":4144,"src":"10787:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4071,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4074,"initialValue":{"id":4073,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"10801:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:19"},{"assignments":[4076],"declarations":[{"constant":false,"id":4076,"mutability":"mutable","name":"x","nameLocation":"10945:1:19","nodeType":"VariableDeclaration","scope":4144,"src":"10938:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4075,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4078,"initialValue":{"hexValue":"30","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:19"},{"assignments":[4080],"declarations":[{"constant":false,"id":4080,"mutability":"mutable","name":"y","nameLocation":"10971:1:19","nodeType":"VariableDeclaration","scope":4144,"src":"10964:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4079,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4082,"initialValue":{"hexValue":"31","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:19"},{"body":{"id":4119,"nodeType":"Block","src":"11014:882:19","statements":[{"assignments":[4087],"declarations":[{"constant":false,"id":4087,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:19","nodeType":"VariableDeclaration","scope":4119,"src":"11032:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4086,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4091,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4088,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"11051:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4089,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"11057:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:19"},{"expression":{"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4092,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"11086:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4093,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"11091:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4094,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4095,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"11191:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4096,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"11436:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4097,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"11442:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4098,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"11454:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4103,"nodeType":"ExpressionStatement","src":"11085:395:19"},{"expression":{"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4104,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"11500:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4105,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"11503:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4106,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4107,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"11585:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4108,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"11839:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4109,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"11843:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4112,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"11854:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4110,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:19","typeDescriptions":{}}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4116,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4118,"nodeType":"ExpressionStatement","src":"11499:382:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4083,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"10998:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4120,"nodeType":"WhileStatement","src":"10991:905:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4121,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"11914:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4126,"nodeType":"IfStatement","src":"11910:22:19","trueBody":{"expression":{"hexValue":"30","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4058,"id":4125,"nodeType":"Return","src":"11924:8:19"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4128,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"11983:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4131,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"11990:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:19","subExpression":{"id":4134,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"12003:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:19","typeDescriptions":{}}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4140,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"12015:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:19","typeDescriptions":{}}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4127,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"11975:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4058,"id":4143,"nodeType":"Return","src":"11968:50:19"}]}]},"documentation":{"id":4050,"nodeType":"StructuredDocumentation","src":"9595:553:19","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4146,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:19","nodeType":"FunctionDefinition","parameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"a","nameLocation":"10177:1:19","nodeType":"VariableDeclaration","scope":4146,"src":"10169:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4054,"mutability":"mutable","name":"n","nameLocation":"10188:1:19","nodeType":"VariableDeclaration","scope":4146,"src":"10180:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:19"},"returnParameters":{"id":4058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4146,"src":"10214:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:19"},"scope":5182,"src":"10153:1919:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4166,"nodeType":"Block","src":"12672:82:19","statements":[{"id":4165,"nodeType":"UncheckedBlock","src":"12682:66:19","statements":[{"expression":{"arguments":[{"id":4158,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"12725:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4159,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"12728:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4162,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"12735:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4156,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"12713:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5182_$","typeString":"type(library Math)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:19","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4203,"src":"12713:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4155,"id":4164,"nodeType":"Return","src":"12706:31:19"}]}]},"documentation":{"id":4147,"nodeType":"StructuredDocumentation","src":"12078:514:19","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4167,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:19","nodeType":"FunctionDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"a","nameLocation":"12626:1:19","nodeType":"VariableDeclaration","scope":4167,"src":"12618:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4151,"mutability":"mutable","name":"p","nameLocation":"12637:1:19","nodeType":"VariableDeclaration","scope":4167,"src":"12629:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:19"},"returnParameters":{"id":4155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4167,"src":"12663:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4153,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:19"},"scope":5182,"src":"12597:157:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4202,"nodeType":"Block","src":"13524:174:19","statements":[{"assignments":[4180,4182],"declarations":[{"constant":false,"id":4180,"mutability":"mutable","name":"success","nameLocation":"13540:7:19","nodeType":"VariableDeclaration","scope":4202,"src":"13535:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4179,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4182,"mutability":"mutable","name":"result","nameLocation":"13557:6:19","nodeType":"VariableDeclaration","scope":4202,"src":"13549:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4181,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4188,"initialValue":{"arguments":[{"id":4184,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"13577:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4185,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"13580:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4186,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4174,"src":"13583:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4183,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4227,4309],"referencedDeclaration":4227,"src":"13567:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:19"},{"condition":{"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:19","subExpression":{"id":4189,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"13600:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4199,"nodeType":"IfStatement","src":"13595:74:19","trueBody":{"id":4198,"nodeType":"Block","src":"13609:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":4194,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"13635:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2307,"src":"13635:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4191,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"13623:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"13623:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4197,"nodeType":"ExpressionStatement","src":"13623:35:19"}]}},{"expression":{"id":4200,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"13685:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4178,"id":4201,"nodeType":"Return","src":"13678:13:19"}]},"documentation":{"id":4168,"nodeType":"StructuredDocumentation","src":"12760:678:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4203,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:19","nodeType":"FunctionDefinition","parameters":{"id":4175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"b","nameLocation":"13467:1:19","nodeType":"VariableDeclaration","scope":4203,"src":"13459:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"e","nameLocation":"13478:1:19","nodeType":"VariableDeclaration","scope":4203,"src":"13470:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4174,"mutability":"mutable","name":"m","nameLocation":"13489:1:19","nodeType":"VariableDeclaration","scope":4203,"src":"13481:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:19"},"returnParameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4203,"src":"13515:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:19"},"scope":5182,"src":"13443:255:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4226,"nodeType":"Block","src":"14552:1493:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4217,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"14566:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4224,"nodeType":"IfStatement","src":"14562:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4216,"id":4223,"nodeType":"Return","src":"14574:17:19"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:19","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:19"},"nodeType":"YulFunctionCall","src":"14651:11:19"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:19"},"nodeType":"YulFunctionCall","src":"15563:17:19"},"nodeType":"YulExpressionStatement","src":"15563:17:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:19"},"nodeType":"YulFunctionCall","src":"15600:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:19"},"nodeType":"YulFunctionCall","src":"15593:28:19"},"nodeType":"YulExpressionStatement","src":"15593:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:19"},"nodeType":"YulFunctionCall","src":"15641:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:19"},"nodeType":"YulFunctionCall","src":"15634:28:19"},"nodeType":"YulExpressionStatement","src":"15634:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:19"},"nodeType":"YulFunctionCall","src":"15682:14:19"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:19"},"nodeType":"YulFunctionCall","src":"15675:25:19"},"nodeType":"YulExpressionStatement","src":"15675:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:19"},"nodeType":"YulFunctionCall","src":"15720:14:19"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:19"},"nodeType":"YulFunctionCall","src":"15713:25:19"},"nodeType":"YulExpressionStatement","src":"15713:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:19"},"nodeType":"YulFunctionCall","src":"15758:14:19"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:19"},"nodeType":"YulFunctionCall","src":"15751:25:19"},"nodeType":"YulExpressionStatement","src":"15751:25:19"},{"nodeType":"YulAssignment","src":"15938:57:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:19"},"nodeType":"YulFunctionCall","src":"15960:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:19","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:19","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:19","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:19"},"nodeType":"YulFunctionCall","src":"15949:46:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:19"}]},{"nodeType":"YulAssignment","src":"16008:21:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:19","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:19"},"nodeType":"YulFunctionCall","src":"16018:11:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4206,"isOffset":false,"isSlot":false,"src":"15698:1:19","valueSize":1},{"declaration":4208,"isOffset":false,"isSlot":false,"src":"15736:1:19","valueSize":1},{"declaration":4210,"isOffset":false,"isSlot":false,"src":"15774:1:19","valueSize":1},{"declaration":4215,"isOffset":false,"isSlot":false,"src":"16008:6:19","valueSize":1},{"declaration":4213,"isOffset":false,"isSlot":false,"src":"15938:7:19","valueSize":1}],"flags":["memory-safe"],"id":4225,"nodeType":"InlineAssembly","src":"14601:1438:19"}]},"documentation":{"id":4204,"nodeType":"StructuredDocumentation","src":"13704:738:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4227,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:19","nodeType":"FunctionDefinition","parameters":{"id":4211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"mutability":"mutable","name":"b","nameLocation":"14474:1:19","nodeType":"VariableDeclaration","scope":4227,"src":"14466:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4208,"mutability":"mutable","name":"e","nameLocation":"14485:1:19","nodeType":"VariableDeclaration","scope":4227,"src":"14477:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4207,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4210,"mutability":"mutable","name":"m","nameLocation":"14496:1:19","nodeType":"VariableDeclaration","scope":4227,"src":"14488:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4209,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:19"},"returnParameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4213,"mutability":"mutable","name":"success","nameLocation":"14527:7:19","nodeType":"VariableDeclaration","scope":4227,"src":"14522:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4212,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"result","nameLocation":"14544:6:19","nodeType":"VariableDeclaration","scope":4227,"src":"14536:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:19"},"scope":5182,"src":"14447:1598:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4262,"nodeType":"Block","src":"16242:179:19","statements":[{"assignments":[4240,4242],"declarations":[{"constant":false,"id":4240,"mutability":"mutable","name":"success","nameLocation":"16258:7:19","nodeType":"VariableDeclaration","scope":4262,"src":"16253:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4239,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4242,"mutability":"mutable","name":"result","nameLocation":"16280:6:19","nodeType":"VariableDeclaration","scope":4262,"src":"16267:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4241,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4248,"initialValue":{"arguments":[{"id":4244,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"16300:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4245,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"16303:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4246,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"16306:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4243,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4227,4309],"referencedDeclaration":4309,"src":"16290:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:19"},{"condition":{"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:19","subExpression":{"id":4249,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"16323:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4259,"nodeType":"IfStatement","src":"16318:74:19","trueBody":{"id":4258,"nodeType":"Block","src":"16332:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":4254,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"16358:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2307,"src":"16358:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4251,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"16346:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2340_$","typeString":"type(library Panic)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"16346:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4257,"nodeType":"ExpressionStatement","src":"16346:35:19"}]}},{"expression":{"id":4260,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"16408:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4238,"id":4261,"nodeType":"Return","src":"16401:13:19"}]},"documentation":{"id":4228,"nodeType":"StructuredDocumentation","src":"16051:85:19","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4263,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:19","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"b","nameLocation":"16170:1:19","nodeType":"VariableDeclaration","scope":4263,"src":"16157:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4229,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"e","nameLocation":"16186:1:19","nodeType":"VariableDeclaration","scope":4263,"src":"16173:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4231,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"m","nameLocation":"16202:1:19","nodeType":"VariableDeclaration","scope":4263,"src":"16189:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4233,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:19"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4263,"src":"16228:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4236,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:19"},"scope":5182,"src":"16141:280:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4308,"nodeType":"Block","src":"16675:771:19","statements":[{"condition":{"arguments":[{"id":4278,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"16700:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4277,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"16689:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4287,"nodeType":"IfStatement","src":"16685:47:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4281,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4276,"id":4286,"nodeType":"Return","src":"16704:28:19"}},{"assignments":[4289],"declarations":[{"constant":false,"id":4289,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:19","nodeType":"VariableDeclaration","scope":4308,"src":"16743:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4292,"initialValue":{"expression":{"id":4290,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"16758:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:19","memberName":"length","nodeType":"MemberAccess","src":"16758:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:19"},{"expression":{"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"16848:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4296,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"16874:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:19","memberName":"length","nodeType":"MemberAccess","src":"16874:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4298,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"16884:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:19","memberName":"length","nodeType":"MemberAccess","src":"16884:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4300,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"16894:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4301,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"16900:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4302,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"16903:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4303,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"16906:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4294,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4306,"nodeType":"ExpressionStatement","src":"16848:60:19"},{"AST":{"nodeType":"YulBlock","src":"16944:496:19","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:19","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:19"},"nodeType":"YulFunctionCall","src":"16973:17:19"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:19","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:19"},"nodeType":"YulFunctionCall","src":"17102:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:19","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:19"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:19"},"nodeType":"YulFunctionCall","src":"17124:13:19"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:19"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:19"},"nodeType":"YulFunctionCall","src":"17091:62:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:19"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:19"},"nodeType":"YulFunctionCall","src":"17302:20:19"},"nodeType":"YulExpressionStatement","src":"17302:20:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:19","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:19"},"nodeType":"YulFunctionCall","src":"17411:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:19"},"nodeType":"YulFunctionCall","src":"17398:32:19"},"nodeType":"YulExpressionStatement","src":"17398:32:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4289,"isOffset":false,"isSlot":false,"src":"17148:4:19","valueSize":1},{"declaration":4289,"isOffset":false,"isSlot":false,"src":"17317:4:19","valueSize":1},{"declaration":4289,"isOffset":false,"isSlot":false,"src":"17424:4:19","valueSize":1},{"declaration":4275,"isOffset":false,"isSlot":false,"src":"16977:6:19","valueSize":1},{"declaration":4275,"isOffset":false,"isSlot":false,"src":"17130:6:19","valueSize":1},{"declaration":4275,"isOffset":false,"isSlot":false,"src":"17309:6:19","valueSize":1},{"declaration":4273,"isOffset":false,"isSlot":false,"src":"17080:7:19","valueSize":1}],"flags":["memory-safe"],"id":4307,"nodeType":"InlineAssembly","src":"16919:521:19"}]},"documentation":{"id":4264,"nodeType":"StructuredDocumentation","src":"16427:88:19","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4309,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:19","nodeType":"FunctionDefinition","parameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"b","nameLocation":"16561:1:19","nodeType":"VariableDeclaration","scope":4309,"src":"16548:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4265,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4268,"mutability":"mutable","name":"e","nameLocation":"16585:1:19","nodeType":"VariableDeclaration","scope":4309,"src":"16572:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4267,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4270,"mutability":"mutable","name":"m","nameLocation":"16609:1:19","nodeType":"VariableDeclaration","scope":4309,"src":"16596:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4269,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:19"},"returnParameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"success","nameLocation":"16645:7:19","nodeType":"VariableDeclaration","scope":4309,"src":"16640:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4272,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4275,"mutability":"mutable","name":"result","nameLocation":"16667:6:19","nodeType":"VariableDeclaration","scope":4309,"src":"16654:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4274,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:19"},"scope":5182,"src":"16520:926:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4341,"nodeType":"Block","src":"17601:176:19","statements":[{"body":{"id":4337,"nodeType":"Block","src":"17658:92:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4328,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"17676:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4330,"indexExpression":{"id":4329,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"17686:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4336,"nodeType":"IfStatement","src":"17672:68:19","trueBody":{"id":4335,"nodeType":"Block","src":"17695:45:19","statements":[{"expression":{"hexValue":"66616c7365","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4316,"id":4334,"nodeType":"Return","src":"17713:12:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4321,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"17631:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4322,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"17635:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:19","memberName":"length","nodeType":"MemberAccess","src":"17635:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4338,"initializationExpression":{"assignments":[4318],"declarations":[{"constant":false,"id":4318,"mutability":"mutable","name":"i","nameLocation":"17624:1:19","nodeType":"VariableDeclaration","scope":4338,"src":"17616:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4320,"initialValue":{"hexValue":"30","id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:19"},"loopExpression":{"expression":{"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:19","subExpression":{"id":4325,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"17655:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4327,"nodeType":"ExpressionStatement","src":"17653:3:19"},"nodeType":"ForStatement","src":"17611:139:19"},{"expression":{"hexValue":"74727565","id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4316,"id":4340,"nodeType":"Return","src":"17759:11:19"}]},"documentation":{"id":4310,"nodeType":"StructuredDocumentation","src":"17452:72:19","text":" @dev Returns whether the provided byte array is zero."},"id":4342,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:19","nodeType":"FunctionDefinition","parameters":{"id":4313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:19","nodeType":"VariableDeclaration","scope":4342,"src":"17549:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4311,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:19"},"returnParameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4342,"src":"17595:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4314,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:19"},"scope":5182,"src":"17529:248:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4560,"nodeType":"Block","src":"18137:5124:19","statements":[{"id":4559,"nodeType":"UncheckedBlock","src":"18147:5108:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"18241:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4356,"nodeType":"IfStatement","src":"18237:53:19","trueBody":{"id":4355,"nodeType":"Block","src":"18249:41:19","statements":[{"expression":{"id":4353,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"18274:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4349,"id":4354,"nodeType":"Return","src":"18267:8:19"}]}},{"assignments":[4358],"declarations":[{"constant":false,"id":4358,"mutability":"mutable","name":"aa","nameLocation":"19225:2:19","nodeType":"VariableDeclaration","scope":4559,"src":"19217:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4357,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4360,"initialValue":{"id":4359,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"19230:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:19"},{"assignments":[4362],"declarations":[{"constant":false,"id":4362,"mutability":"mutable","name":"xn","nameLocation":"19253:2:19","nodeType":"VariableDeclaration","scope":4559,"src":"19245:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4361,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4364,"initialValue":{"hexValue":"31","id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19278:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4380,"nodeType":"IfStatement","src":"19274:92:19","trueBody":{"id":4379,"nodeType":"Block","src":"19296:70:19","statements":[{"expression":{"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4371,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19314:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4374,"nodeType":"ExpressionStatement","src":"19314:10:19"},{"expression":{"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4375,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"19342:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4378,"nodeType":"ExpressionStatement","src":"19342:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4381,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19383:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4396,"nodeType":"IfStatement","src":"19379:90:19","trueBody":{"id":4395,"nodeType":"Block","src":"19400:69:19","statements":[{"expression":{"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4387,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19418:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4390,"nodeType":"ExpressionStatement","src":"19418:9:19"},{"expression":{"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4391,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"19445:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4394,"nodeType":"ExpressionStatement","src":"19445:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4397,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19486:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4401,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4412,"nodeType":"IfStatement","src":"19482:90:19","trueBody":{"id":4411,"nodeType":"Block","src":"19503:69:19","statements":[{"expression":{"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4403,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19521:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4406,"nodeType":"ExpressionStatement","src":"19521:9:19"},{"expression":{"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4407,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"19548:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4410,"nodeType":"ExpressionStatement","src":"19548:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4413,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19589:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4428,"nodeType":"IfStatement","src":"19585:89:19","trueBody":{"id":4427,"nodeType":"Block","src":"19606:68:19","statements":[{"expression":{"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4419,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19624:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4422,"nodeType":"ExpressionStatement","src":"19624:9:19"},{"expression":{"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4423,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"19651:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4426,"nodeType":"ExpressionStatement","src":"19651:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4429,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19691:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4444,"nodeType":"IfStatement","src":"19687:87:19","trueBody":{"id":4443,"nodeType":"Block","src":"19707:67:19","statements":[{"expression":{"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4435,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19725:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4438,"nodeType":"ExpressionStatement","src":"19725:8:19"},{"expression":{"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4439,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"19751:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4442,"nodeType":"ExpressionStatement","src":"19751:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4445,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19791:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4460,"nodeType":"IfStatement","src":"19787:87:19","trueBody":{"id":4459,"nodeType":"Block","src":"19807:67:19","statements":[{"expression":{"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4451,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19825:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4454,"nodeType":"ExpressionStatement","src":"19825:8:19"},{"expression":{"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4455,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"19851:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4458,"nodeType":"ExpressionStatement","src":"19851:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4461,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"19891:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4472,"nodeType":"IfStatement","src":"19887:61:19","trueBody":{"id":4471,"nodeType":"Block","src":"19907:41:19","statements":[{"expression":{"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4467,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"19925:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4470,"nodeType":"ExpressionStatement","src":"19925:8:19"}]}},{"expression":{"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4473,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"20368:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4475,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"20378:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4481,"nodeType":"ExpressionStatement","src":"20368:18:19"},{"expression":{"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4482,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22273:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4483,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22279:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"22284:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4485,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22288:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4492,"nodeType":"ExpressionStatement","src":"22273:23:19"},{"expression":{"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4493,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22382:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4494,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22388:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4495,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"22393:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4496,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22397:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4503,"nodeType":"ExpressionStatement","src":"22382:23:19"},{"expression":{"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4504,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22493:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4505,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22499:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"22504:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4507,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22508:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4514,"nodeType":"ExpressionStatement","src":"22493:23:19"},{"expression":{"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4515,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22602:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4516,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22608:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4517,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"22613:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4518,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22617:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4525,"nodeType":"ExpressionStatement","src":"22602:23:19"},{"expression":{"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4526,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22712:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4527,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22718:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"22723:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4529,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22727:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4536,"nodeType":"ExpressionStatement","src":"22712:23:19"},{"expression":{"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4537,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22822:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4538,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22828:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"22833:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4540,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"22837:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4543,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4547,"nodeType":"ExpressionStatement","src":"22822:23:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4548,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"23211:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4551,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"23232:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"23237:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4553,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"23241:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4549,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"23216:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"23216:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4349,"id":4558,"nodeType":"Return","src":"23204:40:19"}]}]},"documentation":{"id":4343,"nodeType":"StructuredDocumentation","src":"17783:292:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4561,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:19","nodeType":"FunctionDefinition","parameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4345,"mutability":"mutable","name":"a","nameLocation":"18102:1:19","nodeType":"VariableDeclaration","scope":4561,"src":"18094:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4344,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:19"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4561,"src":"18128:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4347,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:19"},"scope":5182,"src":"18080:5181:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4594,"nodeType":"Block","src":"23434:171:19","statements":[{"id":4593,"nodeType":"UncheckedBlock","src":"23444:155:19","statements":[{"assignments":[4573],"declarations":[{"constant":false,"id":4573,"mutability":"mutable","name":"result","nameLocation":"23476:6:19","nodeType":"VariableDeclaration","scope":4593,"src":"23468:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4572,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4577,"initialValue":{"arguments":[{"id":4575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"23490:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4574,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4561,4595],"referencedDeclaration":4561,"src":"23485:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"23513:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4582,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4567,"src":"23555:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}],"id":4581,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"23538:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3588_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"23568:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"23577:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4587,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"23586:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4579,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"23522:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"23522:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4571,"id":4592,"nodeType":"Return","src":"23506:82:19"}]}]},"documentation":{"id":4562,"nodeType":"StructuredDocumentation","src":"23267:86:19","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4595,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:19","nodeType":"FunctionDefinition","parameters":{"id":4568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"a","nameLocation":"23380:1:19","nodeType":"VariableDeclaration","scope":4595,"src":"23372:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4567,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:19","nodeType":"VariableDeclaration","scope":4595,"src":"23383:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"},"typeName":{"id":4566,"nodeType":"UserDefinedTypeName","pathNode":{"id":4565,"name":"Rounding","nameLocations":["23383:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3588,"src":"23383:8:19"},"referencedDeclaration":3588,"src":"23383:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:19"},"returnParameters":{"id":4571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4595,"src":"23425:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:19"},"scope":5182,"src":"23358:247:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4790,"nodeType":"Block","src":"23796:981:19","statements":[{"assignments":[4604],"declarations":[{"constant":false,"id":4604,"mutability":"mutable","name":"result","nameLocation":"23814:6:19","nodeType":"VariableDeclaration","scope":4790,"src":"23806:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4603,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4606,"initialValue":{"hexValue":"30","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:19"},{"assignments":[4608],"declarations":[{"constant":false,"id":4608,"mutability":"mutable","name":"exp","nameLocation":"23842:3:19","nodeType":"VariableDeclaration","scope":4790,"src":"23834:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4607,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4609,"nodeType":"VariableDeclarationStatement","src":"23834:11:19"},{"id":4787,"nodeType":"UncheckedBlock","src":"23855:893:19","statements":[{"expression":{"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4610,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"23879:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"23907:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4612,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"23891:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"23891:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4625,"nodeType":"ExpressionStatement","src":"23879:51:19"},{"expression":{"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"23944:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4627,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"23954:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4629,"nodeType":"ExpressionStatement","src":"23944:13:19"},{"expression":{"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"23971:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4631,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"23981:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4633,"nodeType":"ExpressionStatement","src":"23971:13:19"},{"expression":{"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4634,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"23999:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24026:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4636,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"24010:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"24010:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4649,"nodeType":"ExpressionStatement","src":"23999:49:19"},{"expression":{"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24062:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4651,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24072:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4653,"nodeType":"ExpressionStatement","src":"24062:13:19"},{"expression":{"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4654,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24089:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4655,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24099:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4657,"nodeType":"ExpressionStatement","src":"24089:13:19"},{"expression":{"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4658,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24117:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24144:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4660,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"24128:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"24128:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4673,"nodeType":"ExpressionStatement","src":"24117:49:19"},{"expression":{"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24180:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4675,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24190:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4677,"nodeType":"ExpressionStatement","src":"24180:13:19"},{"expression":{"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24207:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4679,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24217:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4681,"nodeType":"ExpressionStatement","src":"24207:13:19"},{"expression":{"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4682,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24235:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24262:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4684,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"24246:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"24246:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4697,"nodeType":"ExpressionStatement","src":"24235:49:19"},{"expression":{"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24298:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4699,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24308:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4701,"nodeType":"ExpressionStatement","src":"24298:13:19"},{"expression":{"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24325:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4703,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24335:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4705,"nodeType":"ExpressionStatement","src":"24325:13:19"},{"expression":{"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4706,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24353:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24379:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4708,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"24363:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"24363:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4721,"nodeType":"ExpressionStatement","src":"24353:47:19"},{"expression":{"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24414:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4723,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24424:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4725,"nodeType":"ExpressionStatement","src":"24414:13:19"},{"expression":{"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4726,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24441:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4727,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24451:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4729,"nodeType":"ExpressionStatement","src":"24441:13:19"},{"expression":{"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4730,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24469:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24495:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4732,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"24479:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"24479:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4745,"nodeType":"ExpressionStatement","src":"24469:47:19"},{"expression":{"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24530:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4747,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24540:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4749,"nodeType":"ExpressionStatement","src":"24530:13:19"},{"expression":{"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24557:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4751,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24567:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4753,"nodeType":"ExpressionStatement","src":"24557:13:19"},{"expression":{"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4754,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24585:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24611:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4756,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"24595:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"24595:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4769,"nodeType":"ExpressionStatement","src":"24585:47:19"},{"expression":{"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24646:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4771,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24656:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4773,"nodeType":"ExpressionStatement","src":"24646:13:19"},{"expression":{"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4774,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24673:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4775,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"24683:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4777,"nodeType":"ExpressionStatement","src":"24673:13:19"},{"expression":{"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24701:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"24727:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4779,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"24711:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"24711:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4786,"nodeType":"ExpressionStatement","src":"24701:36:19"}]},{"expression":{"id":4788,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"24764:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4602,"id":4789,"nodeType":"Return","src":"24757:13:19"}]},"documentation":{"id":4596,"nodeType":"StructuredDocumentation","src":"23611:119:19","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4791,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:19","nodeType":"FunctionDefinition","parameters":{"id":4599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"mutability":"mutable","name":"value","nameLocation":"23757:5:19","nodeType":"VariableDeclaration","scope":4791,"src":"23749:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4597,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:19"},"returnParameters":{"id":4602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4791,"src":"23787:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4600,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:19"},"scope":5182,"src":"23735:1042:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4824,"nodeType":"Block","src":"25010:175:19","statements":[{"id":4823,"nodeType":"UncheckedBlock","src":"25020:159:19","statements":[{"assignments":[4803],"declarations":[{"constant":false,"id":4803,"mutability":"mutable","name":"result","nameLocation":"25052:6:19","nodeType":"VariableDeclaration","scope":4823,"src":"25044:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4802,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4807,"initialValue":{"arguments":[{"id":4805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"25066:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4804,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4791,4825],"referencedDeclaration":4791,"src":"25061:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4808,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"25093:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4812,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"25135:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}],"id":4811,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"25118:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3588_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"25153:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"25162:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4809,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"25102:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"25102:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4801,"id":4822,"nodeType":"Return","src":"25086:82:19"}]}]},"documentation":{"id":4792,"nodeType":"StructuredDocumentation","src":"24783:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4825,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:19","nodeType":"FunctionDefinition","parameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4794,"mutability":"mutable","name":"value","nameLocation":"24952:5:19","nodeType":"VariableDeclaration","scope":4825,"src":"24944:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4793,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4797,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:19","nodeType":"VariableDeclaration","scope":4825,"src":"24959:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"},"typeName":{"id":4796,"nodeType":"UserDefinedTypeName","pathNode":{"id":4795,"name":"Rounding","nameLocations":["24959:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3588,"src":"24959:8:19"},"referencedDeclaration":3588,"src":"24959:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:19"},"returnParameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4825,"src":"25001:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4799,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:19"},"scope":5182,"src":"24930:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4953,"nodeType":"Block","src":"25378:854:19","statements":[{"assignments":[4834],"declarations":[{"constant":false,"id":4834,"mutability":"mutable","name":"result","nameLocation":"25396:6:19","nodeType":"VariableDeclaration","scope":4953,"src":"25388:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4833,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4836,"initialValue":{"hexValue":"30","id":4835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:19"},{"id":4950,"nodeType":"UncheckedBlock","src":"25416:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25444:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4853,"nodeType":"IfStatement","src":"25440:103:19","trueBody":{"id":4852,"nodeType":"Block","src":"25463:80:19","statements":[{"expression":{"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25481:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4847,"nodeType":"ExpressionStatement","src":"25481:17:19"},{"expression":{"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4848,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"25516:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4851,"nodeType":"ExpressionStatement","src":"25516:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25560:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4870,"nodeType":"IfStatement","src":"25556:103:19","trueBody":{"id":4869,"nodeType":"Block","src":"25579:80:19","statements":[{"expression":{"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25597:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4864,"nodeType":"ExpressionStatement","src":"25597:17:19"},{"expression":{"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"25632:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4868,"nodeType":"ExpressionStatement","src":"25632:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25676:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4887,"nodeType":"IfStatement","src":"25672:103:19","trueBody":{"id":4886,"nodeType":"Block","src":"25695:80:19","statements":[{"expression":{"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25713:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4881,"nodeType":"ExpressionStatement","src":"25713:17:19"},{"expression":{"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"25748:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4885,"nodeType":"ExpressionStatement","src":"25748:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25792:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4904,"nodeType":"IfStatement","src":"25788:100:19","trueBody":{"id":4903,"nodeType":"Block","src":"25810:78:19","statements":[{"expression":{"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25828:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4898,"nodeType":"ExpressionStatement","src":"25828:16:19"},{"expression":{"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"25862:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4902,"nodeType":"ExpressionStatement","src":"25862:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25905:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4921,"nodeType":"IfStatement","src":"25901:100:19","trueBody":{"id":4920,"nodeType":"Block","src":"25923:78:19","statements":[{"expression":{"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"25941:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4915,"nodeType":"ExpressionStatement","src":"25941:16:19"},{"expression":{"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4916,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"25975:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4919,"nodeType":"ExpressionStatement","src":"25975:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"26018:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4938,"nodeType":"IfStatement","src":"26014:100:19","trueBody":{"id":4937,"nodeType":"Block","src":"26036:78:19","statements":[{"expression":{"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"26054:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4932,"nodeType":"ExpressionStatement","src":"26054:16:19"},{"expression":{"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4933,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"26088:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4936,"nodeType":"ExpressionStatement","src":"26088:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"26131:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4949,"nodeType":"IfStatement","src":"26127:66:19","trueBody":{"id":4948,"nodeType":"Block","src":"26149:44:19","statements":[{"expression":{"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4944,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"26167:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4947,"nodeType":"ExpressionStatement","src":"26167:11:19"}]}}]},{"expression":{"id":4951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"26219:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4832,"id":4952,"nodeType":"Return","src":"26212:13:19"}]},"documentation":{"id":4826,"nodeType":"StructuredDocumentation","src":"25191:120:19","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4954,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:19","nodeType":"FunctionDefinition","parameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"value","nameLocation":"25339:5:19","nodeType":"VariableDeclaration","scope":4954,"src":"25331:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:19"},"returnParameters":{"id":4832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4954,"src":"25369:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4830,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:19"},"scope":5182,"src":"25316:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4987,"nodeType":"Block","src":"26467:177:19","statements":[{"id":4986,"nodeType":"UncheckedBlock","src":"26477:161:19","statements":[{"assignments":[4966],"declarations":[{"constant":false,"id":4966,"mutability":"mutable","name":"result","nameLocation":"26509:6:19","nodeType":"VariableDeclaration","scope":4986,"src":"26501:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4965,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4970,"initialValue":{"arguments":[{"id":4968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"26524:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4967,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4954,4988],"referencedDeclaration":4954,"src":"26518:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"26551:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4975,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"26593:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}],"id":4974,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"26576:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3588_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"26612:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"26621:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4972,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"26560:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"26560:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4964,"id":4985,"nodeType":"Return","src":"26544:83:19"}]}]},"documentation":{"id":4955,"nodeType":"StructuredDocumentation","src":"26238:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4988,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:19","nodeType":"FunctionDefinition","parameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4957,"mutability":"mutable","name":"value","nameLocation":"26409:5:19","nodeType":"VariableDeclaration","scope":4988,"src":"26401:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4960,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:19","nodeType":"VariableDeclaration","scope":4988,"src":"26416:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"},"typeName":{"id":4959,"nodeType":"UserDefinedTypeName","pathNode":{"id":4958,"name":"Rounding","nameLocations":["26416:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3588,"src":"26416:8:19"},"referencedDeclaration":3588,"src":"26416:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:19"},"returnParameters":{"id":4964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4988,"src":"26458:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4962,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:19"},"scope":5182,"src":"26386:258:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5124,"nodeType":"Block","src":"26964:674:19","statements":[{"assignments":[4997],"declarations":[{"constant":false,"id":4997,"mutability":"mutable","name":"result","nameLocation":"26982:6:19","nodeType":"VariableDeclaration","scope":5124,"src":"26974:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4996,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4999,"initialValue":{"hexValue":"30","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:19"},{"assignments":[5001],"declarations":[{"constant":false,"id":5001,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:19","nodeType":"VariableDeclaration","scope":5124,"src":"27002:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5000,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5002,"nodeType":"VariableDeclarationStatement","src":"27002:12:19"},{"id":5121,"nodeType":"UncheckedBlock","src":"27024:585:19","statements":[{"expression":{"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5003,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27048:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27071:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5010,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5004,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"27055:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"27055:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5016,"nodeType":"ExpressionStatement","src":"27048:46:19"},{"expression":{"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27108:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5018,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27118:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5022,"nodeType":"ExpressionStatement","src":"27108:20:19"},{"expression":{"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"27142:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5024,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27152:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5028,"nodeType":"ExpressionStatement","src":"27142:19:19"},{"expression":{"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5029,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27176:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27199:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5030,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"27183:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"27183:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5042,"nodeType":"ExpressionStatement","src":"27176:45:19"},{"expression":{"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27235:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5044,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27245:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5048,"nodeType":"ExpressionStatement","src":"27235:19:19"},{"expression":{"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"27268:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5050,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27278:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5054,"nodeType":"ExpressionStatement","src":"27268:18:19"},{"expression":{"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5055,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27301:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27324:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5062,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5056,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"27308:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"27308:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5068,"nodeType":"ExpressionStatement","src":"27301:45:19"},{"expression":{"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27360:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5070,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27370:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5074,"nodeType":"ExpressionStatement","src":"27360:19:19"},{"expression":{"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5075,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"27393:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5076,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27403:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5080,"nodeType":"ExpressionStatement","src":"27393:18:19"},{"expression":{"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5081,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27426:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27449:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5082,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"27433:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"27433:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5094,"nodeType":"ExpressionStatement","src":"27426:45:19"},{"expression":{"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27485:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5096,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27495:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5100,"nodeType":"ExpressionStatement","src":"27485:19:19"},{"expression":{"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"27518:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5102,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"27528:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5106,"nodeType":"ExpressionStatement","src":"27518:18:19"},{"expression":{"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5107,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"27551:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"27577:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5108,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"27561:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"27561:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5120,"nodeType":"ExpressionStatement","src":"27551:47:19"}]},{"expression":{"id":5122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"27625:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4995,"id":5123,"nodeType":"Return","src":"27618:13:19"}]},"documentation":{"id":4989,"nodeType":"StructuredDocumentation","src":"26650:246:19","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5125,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:19","nodeType":"FunctionDefinition","parameters":{"id":4992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4991,"mutability":"mutable","name":"value","nameLocation":"26925:5:19","nodeType":"VariableDeclaration","scope":5125,"src":"26917:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4990,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:19"},"returnParameters":{"id":4995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5125,"src":"26955:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:19"},"scope":5182,"src":"26901:737:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5161,"nodeType":"Block","src":"27875:184:19","statements":[{"id":5160,"nodeType":"UncheckedBlock","src":"27885:168:19","statements":[{"assignments":[5137],"declarations":[{"constant":false,"id":5137,"mutability":"mutable","name":"result","nameLocation":"27917:6:19","nodeType":"VariableDeclaration","scope":5160,"src":"27909:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5136,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5141,"initialValue":{"arguments":[{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"27933:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5138,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5125,5162],"referencedDeclaration":5125,"src":"27926:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"27960:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5146,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"28002:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}],"id":5145,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5181,"src":"27985:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3588_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"28021:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"28036:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5143,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"27969:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"27969:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5135,"id":5159,"nodeType":"Return","src":"27953:89:19"}]}]},"documentation":{"id":5126,"nodeType":"StructuredDocumentation","src":"27644:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5162,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:19","nodeType":"FunctionDefinition","parameters":{"id":5132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5128,"mutability":"mutable","name":"value","nameLocation":"27817:5:19","nodeType":"VariableDeclaration","scope":5162,"src":"27809:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5127,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5131,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:19","nodeType":"VariableDeclaration","scope":5162,"src":"27824:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"},"typeName":{"id":5130,"nodeType":"UserDefinedTypeName","pathNode":{"id":5129,"name":"Rounding","nameLocations":["27824:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3588,"src":"27824:8:19"},"referencedDeclaration":3588,"src":"27824:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:19"},"returnParameters":{"id":5135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5162,"src":"27866:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5133,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:19"},"scope":5182,"src":"27793:266:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5180,"nodeType":"Block","src":"28257:48:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5173,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"28280:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}],"id":5172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5171,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:19","typeDescriptions":{}}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5170,"id":5179,"nodeType":"Return","src":"28267:31:19"}]},"documentation":{"id":5163,"nodeType":"StructuredDocumentation","src":"28065:113:19","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5181,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:19","nodeType":"FunctionDefinition","parameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:19","nodeType":"VariableDeclaration","scope":5181,"src":"28209:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"},"typeName":{"id":5165,"nodeType":"UserDefinedTypeName","pathNode":{"id":5164,"name":"Rounding","nameLocations":["28209:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3588,"src":"28209:8:19"},"referencedDeclaration":3588,"src":"28209:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3588","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:19"},"returnParameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5181,"src":"28251:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5168,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:19"},"scope":5182,"src":"28183:122:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5183,"src":"281:28026:19","usedErrors":[],"usedEvents":[]}],"src":"103:28205:19"},"id":19},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6947]},"id":6948,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5184,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5185,"nodeType":"StructuredDocumentation","src":"218:550:20","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6947,"linearizedBaseContracts":[6947],"name":"SafeCast","nameLocation":"777:8:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5186,"nodeType":"StructuredDocumentation","src":"792:68:20","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5192,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:20","nodeType":"ErrorDefinition","parameters":{"id":5191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5188,"mutability":"mutable","name":"bits","nameLocation":"908:4:20","nodeType":"VariableDeclaration","scope":5192,"src":"902:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5187,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5190,"mutability":"mutable","name":"value","nameLocation":"922:5:20","nodeType":"VariableDeclaration","scope":5192,"src":"914:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5189,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:20"},"src":"865:64:20"},{"documentation":{"id":5193,"nodeType":"StructuredDocumentation","src":"935:75:20","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5197,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:20","nodeType":"ErrorDefinition","parameters":{"id":5196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"value","nameLocation":"1056:5:20","nodeType":"VariableDeclaration","scope":5197,"src":"1049:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5194,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:20"},"src":"1015:48:20"},{"documentation":{"id":5198,"nodeType":"StructuredDocumentation","src":"1069:67:20","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5204,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:20","nodeType":"ErrorDefinition","parameters":{"id":5203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5200,"mutability":"mutable","name":"bits","nameLocation":"1183:4:20","nodeType":"VariableDeclaration","scope":5204,"src":"1177:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5199,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5202,"mutability":"mutable","name":"value","nameLocation":"1196:5:20","nodeType":"VariableDeclaration","scope":5204,"src":"1189:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5201,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:20"},"src":"1141:62:20"},{"documentation":{"id":5205,"nodeType":"StructuredDocumentation","src":"1209:75:20","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5209,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:20","nodeType":"ErrorDefinition","parameters":{"id":5208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"value","nameLocation":"1331:5:20","nodeType":"VariableDeclaration","scope":5209,"src":"1323:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:20"},"src":"1289:49:20"},{"body":{"id":5236,"nodeType":"Block","src":"1695:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"1709:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5219,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5218,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:20","memberName":"max","nodeType":"MemberAccess","src":"1717:17:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5230,"nodeType":"IfStatement","src":"1705:105:20","trueBody":{"id":5229,"nodeType":"Block","src":"1736:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"1793:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5224,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"1757:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5228,"nodeType":"RevertStatement","src":"1750:49:20"}]}},{"expression":{"arguments":[{"id":5233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"1834:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5231,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:20","typeDescriptions":{}}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5216,"id":5235,"nodeType":"Return","src":"1819:21:20"}]},"documentation":{"id":5210,"nodeType":"StructuredDocumentation","src":"1344:280:20","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5237,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:20","nodeType":"FunctionDefinition","parameters":{"id":5213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5212,"mutability":"mutable","name":"value","nameLocation":"1656:5:20","nodeType":"VariableDeclaration","scope":5237,"src":"1648:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:20"},"returnParameters":{"id":5216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5237,"src":"1686:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5214,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:20"},"scope":6947,"src":"1629:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5264,"nodeType":"Block","src":"2204:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"2218:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5247,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5246,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:20","memberName":"max","nodeType":"MemberAccess","src":"2226:17:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5258,"nodeType":"IfStatement","src":"2214:105:20","trueBody":{"id":5257,"nodeType":"Block","src":"2245:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"2302:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5252,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"2266:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5256,"nodeType":"RevertStatement","src":"2259:49:20"}]}},{"expression":{"arguments":[{"id":5261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"2343:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5259,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:20","typeDescriptions":{}}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5244,"id":5263,"nodeType":"Return","src":"2328:21:20"}]},"documentation":{"id":5238,"nodeType":"StructuredDocumentation","src":"1853:280:20","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5265,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:20","nodeType":"FunctionDefinition","parameters":{"id":5241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5240,"mutability":"mutable","name":"value","nameLocation":"2165:5:20","nodeType":"VariableDeclaration","scope":5265,"src":"2157:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5239,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:20"},"returnParameters":{"id":5244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5265,"src":"2195:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5242,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:20"},"scope":6947,"src":"2138:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5292,"nodeType":"Block","src":"2713:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"2727:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5275,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5274,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:20","memberName":"max","nodeType":"MemberAccess","src":"2735:17:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5286,"nodeType":"IfStatement","src":"2723:105:20","trueBody":{"id":5285,"nodeType":"Block","src":"2754:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"2811:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5280,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"2775:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5284,"nodeType":"RevertStatement","src":"2768:49:20"}]}},{"expression":{"arguments":[{"id":5289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"2852:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5287,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:20","typeDescriptions":{}}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5272,"id":5291,"nodeType":"Return","src":"2837:21:20"}]},"documentation":{"id":5266,"nodeType":"StructuredDocumentation","src":"2362:280:20","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5293,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:20","nodeType":"FunctionDefinition","parameters":{"id":5269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5268,"mutability":"mutable","name":"value","nameLocation":"2674:5:20","nodeType":"VariableDeclaration","scope":5293,"src":"2666:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:20"},"returnParameters":{"id":5272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5293,"src":"2704:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5270,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:20"},"scope":6947,"src":"2647:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5320,"nodeType":"Block","src":"3222:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"3236:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5303,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5302,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:20","memberName":"max","nodeType":"MemberAccess","src":"3244:17:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5314,"nodeType":"IfStatement","src":"3232:105:20","trueBody":{"id":5313,"nodeType":"Block","src":"3263:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"3320:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5308,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"3284:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5312,"nodeType":"RevertStatement","src":"3277:49:20"}]}},{"expression":{"arguments":[{"id":5317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"3361:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5315,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:20","typeDescriptions":{}}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5300,"id":5319,"nodeType":"Return","src":"3346:21:20"}]},"documentation":{"id":5294,"nodeType":"StructuredDocumentation","src":"2871:280:20","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5321,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:20","nodeType":"FunctionDefinition","parameters":{"id":5297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"mutability":"mutable","name":"value","nameLocation":"3183:5:20","nodeType":"VariableDeclaration","scope":5321,"src":"3175:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5295,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:20"},"returnParameters":{"id":5300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5321,"src":"3213:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5298,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:20"},"scope":6947,"src":"3156:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5348,"nodeType":"Block","src":"3731:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"3745:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5331,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5330,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:20","memberName":"max","nodeType":"MemberAccess","src":"3753:17:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5342,"nodeType":"IfStatement","src":"3741:105:20","trueBody":{"id":5341,"nodeType":"Block","src":"3772:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"3829:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5336,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"3793:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5340,"nodeType":"RevertStatement","src":"3786:49:20"}]}},{"expression":{"arguments":[{"id":5345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"3870:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5343,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:20","typeDescriptions":{}}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5328,"id":5347,"nodeType":"Return","src":"3855:21:20"}]},"documentation":{"id":5322,"nodeType":"StructuredDocumentation","src":"3380:280:20","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5349,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:20","nodeType":"FunctionDefinition","parameters":{"id":5325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5324,"mutability":"mutable","name":"value","nameLocation":"3692:5:20","nodeType":"VariableDeclaration","scope":5349,"src":"3684:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5323,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:20"},"returnParameters":{"id":5328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5349,"src":"3722:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5326,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:20"},"scope":6947,"src":"3665:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5376,"nodeType":"Block","src":"4240:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"4254:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5359,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5358,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:20","memberName":"max","nodeType":"MemberAccess","src":"4262:17:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5370,"nodeType":"IfStatement","src":"4250:105:20","trueBody":{"id":5369,"nodeType":"Block","src":"4281:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"4338:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5364,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"4302:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5368,"nodeType":"RevertStatement","src":"4295:49:20"}]}},{"expression":{"arguments":[{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"4379:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5371,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:20","typeDescriptions":{}}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5356,"id":5375,"nodeType":"Return","src":"4364:21:20"}]},"documentation":{"id":5350,"nodeType":"StructuredDocumentation","src":"3889:280:20","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5377,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:20","nodeType":"FunctionDefinition","parameters":{"id":5353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5352,"mutability":"mutable","name":"value","nameLocation":"4201:5:20","nodeType":"VariableDeclaration","scope":5377,"src":"4193:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5351,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:20"},"returnParameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5377,"src":"4231:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5354,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:20"},"scope":6947,"src":"4174:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5404,"nodeType":"Block","src":"4749:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"4763:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5387,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5386,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:20","memberName":"max","nodeType":"MemberAccess","src":"4771:17:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5398,"nodeType":"IfStatement","src":"4759:105:20","trueBody":{"id":5397,"nodeType":"Block","src":"4790:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"4847:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5392,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"4811:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5396,"nodeType":"RevertStatement","src":"4804:49:20"}]}},{"expression":{"arguments":[{"id":5401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"4888:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5399,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:20","typeDescriptions":{}}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5384,"id":5403,"nodeType":"Return","src":"4873:21:20"}]},"documentation":{"id":5378,"nodeType":"StructuredDocumentation","src":"4398:280:20","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5405,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:20","nodeType":"FunctionDefinition","parameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"value","nameLocation":"4710:5:20","nodeType":"VariableDeclaration","scope":5405,"src":"4702:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5379,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:20"},"returnParameters":{"id":5384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5405,"src":"4740:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5382,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:20"},"scope":6947,"src":"4683:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5432,"nodeType":"Block","src":"5258:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"5272:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5415,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5414,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:20","memberName":"max","nodeType":"MemberAccess","src":"5280:17:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5426,"nodeType":"IfStatement","src":"5268:105:20","trueBody":{"id":5425,"nodeType":"Block","src":"5299:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"5356:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5420,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"5320:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5424,"nodeType":"RevertStatement","src":"5313:49:20"}]}},{"expression":{"arguments":[{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"5397:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5427,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:20","typeDescriptions":{}}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5412,"id":5431,"nodeType":"Return","src":"5382:21:20"}]},"documentation":{"id":5406,"nodeType":"StructuredDocumentation","src":"4907:280:20","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5433,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:20","nodeType":"FunctionDefinition","parameters":{"id":5409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5408,"mutability":"mutable","name":"value","nameLocation":"5219:5:20","nodeType":"VariableDeclaration","scope":5433,"src":"5211:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5407,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:20"},"returnParameters":{"id":5412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5433,"src":"5249:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5410,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:20"},"scope":6947,"src":"5192:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5460,"nodeType":"Block","src":"5767:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"5781:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5443,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5442,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:20","memberName":"max","nodeType":"MemberAccess","src":"5789:17:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5454,"nodeType":"IfStatement","src":"5777:105:20","trueBody":{"id":5453,"nodeType":"Block","src":"5808:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"5865:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5448,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"5829:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5452,"nodeType":"RevertStatement","src":"5822:49:20"}]}},{"expression":{"arguments":[{"id":5457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"5906:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5455,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:20","typeDescriptions":{}}},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5440,"id":5459,"nodeType":"Return","src":"5891:21:20"}]},"documentation":{"id":5434,"nodeType":"StructuredDocumentation","src":"5416:280:20","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5461,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:20","nodeType":"FunctionDefinition","parameters":{"id":5437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5436,"mutability":"mutable","name":"value","nameLocation":"5728:5:20","nodeType":"VariableDeclaration","scope":5461,"src":"5720:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:20"},"returnParameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5461,"src":"5758:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5438,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:20"},"scope":6947,"src":"5701:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5488,"nodeType":"Block","src":"6276:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"6290:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5471,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5470,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:20","memberName":"max","nodeType":"MemberAccess","src":"6298:17:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5482,"nodeType":"IfStatement","src":"6286:105:20","trueBody":{"id":5481,"nodeType":"Block","src":"6317:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"6374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5476,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"6338:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5480,"nodeType":"RevertStatement","src":"6331:49:20"}]}},{"expression":{"arguments":[{"id":5485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"6415:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5483,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:20","typeDescriptions":{}}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5468,"id":5487,"nodeType":"Return","src":"6400:21:20"}]},"documentation":{"id":5462,"nodeType":"StructuredDocumentation","src":"5925:280:20","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5489,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:20","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"value","nameLocation":"6237:5:20","nodeType":"VariableDeclaration","scope":5489,"src":"6229:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5463,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:20"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5489,"src":"6267:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5466,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:20"},"scope":6947,"src":"6210:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5516,"nodeType":"Block","src":"6785:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"6799:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5499,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5498,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:20","memberName":"max","nodeType":"MemberAccess","src":"6807:17:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5510,"nodeType":"IfStatement","src":"6795:105:20","trueBody":{"id":5509,"nodeType":"Block","src":"6826:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"6883:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5504,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"6847:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5508,"nodeType":"RevertStatement","src":"6840:49:20"}]}},{"expression":{"arguments":[{"id":5513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"6924:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5511,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:20","typeDescriptions":{}}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5496,"id":5515,"nodeType":"Return","src":"6909:21:20"}]},"documentation":{"id":5490,"nodeType":"StructuredDocumentation","src":"6434:280:20","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5517,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:20","nodeType":"FunctionDefinition","parameters":{"id":5493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5492,"mutability":"mutable","name":"value","nameLocation":"6746:5:20","nodeType":"VariableDeclaration","scope":5517,"src":"6738:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5491,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:20"},"returnParameters":{"id":5496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5517,"src":"6776:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5494,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:20"},"scope":6947,"src":"6719:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5544,"nodeType":"Block","src":"7294:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"7308:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5527,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5526,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:20","memberName":"max","nodeType":"MemberAccess","src":"7316:17:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5538,"nodeType":"IfStatement","src":"7304:105:20","trueBody":{"id":5537,"nodeType":"Block","src":"7335:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"7392:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5532,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"7356:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5536,"nodeType":"RevertStatement","src":"7349:49:20"}]}},{"expression":{"arguments":[{"id":5541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"7433:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5539,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:20","typeDescriptions":{}}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5524,"id":5543,"nodeType":"Return","src":"7418:21:20"}]},"documentation":{"id":5518,"nodeType":"StructuredDocumentation","src":"6943:280:20","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5545,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:20","nodeType":"FunctionDefinition","parameters":{"id":5521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5520,"mutability":"mutable","name":"value","nameLocation":"7255:5:20","nodeType":"VariableDeclaration","scope":5545,"src":"7247:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5519,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:20"},"returnParameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5545,"src":"7285:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5522,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:20"},"scope":6947,"src":"7228:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5572,"nodeType":"Block","src":"7803:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"7817:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5555,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5554,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:20","memberName":"max","nodeType":"MemberAccess","src":"7825:17:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5566,"nodeType":"IfStatement","src":"7813:105:20","trueBody":{"id":5565,"nodeType":"Block","src":"7844:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"7901:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5560,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"7865:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5564,"nodeType":"RevertStatement","src":"7858:49:20"}]}},{"expression":{"arguments":[{"id":5569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"7942:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5567,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:20","typeDescriptions":{}}},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5552,"id":5571,"nodeType":"Return","src":"7927:21:20"}]},"documentation":{"id":5546,"nodeType":"StructuredDocumentation","src":"7452:280:20","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5573,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:20","nodeType":"FunctionDefinition","parameters":{"id":5549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5548,"mutability":"mutable","name":"value","nameLocation":"7764:5:20","nodeType":"VariableDeclaration","scope":5573,"src":"7756:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5547,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:20"},"returnParameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5573,"src":"7794:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5550,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:20"},"scope":6947,"src":"7737:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5600,"nodeType":"Block","src":"8312:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"8326:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5583,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5582,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:20","memberName":"max","nodeType":"MemberAccess","src":"8334:17:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5594,"nodeType":"IfStatement","src":"8322:105:20","trueBody":{"id":5593,"nodeType":"Block","src":"8353:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"8410:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5588,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"8374:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5592,"nodeType":"RevertStatement","src":"8367:49:20"}]}},{"expression":{"arguments":[{"id":5597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"8451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5595,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:20","typeDescriptions":{}}},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5580,"id":5599,"nodeType":"Return","src":"8436:21:20"}]},"documentation":{"id":5574,"nodeType":"StructuredDocumentation","src":"7961:280:20","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5601,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:20","nodeType":"FunctionDefinition","parameters":{"id":5577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5576,"mutability":"mutable","name":"value","nameLocation":"8273:5:20","nodeType":"VariableDeclaration","scope":5601,"src":"8265:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5575,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:20"},"returnParameters":{"id":5580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5601,"src":"8303:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5578,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:20"},"scope":6947,"src":"8246:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5628,"nodeType":"Block","src":"8821:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"8835:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5611,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5610,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:20","memberName":"max","nodeType":"MemberAccess","src":"8843:17:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5622,"nodeType":"IfStatement","src":"8831:105:20","trueBody":{"id":5621,"nodeType":"Block","src":"8862:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"8919:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5616,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"8883:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5620,"nodeType":"RevertStatement","src":"8876:49:20"}]}},{"expression":{"arguments":[{"id":5625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"8960:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5623,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:20","typeDescriptions":{}}},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5608,"id":5627,"nodeType":"Return","src":"8945:21:20"}]},"documentation":{"id":5602,"nodeType":"StructuredDocumentation","src":"8470:280:20","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5629,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:20","nodeType":"FunctionDefinition","parameters":{"id":5605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5604,"mutability":"mutable","name":"value","nameLocation":"8782:5:20","nodeType":"VariableDeclaration","scope":5629,"src":"8774:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5603,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:20"},"returnParameters":{"id":5608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5629,"src":"8812:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5606,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:20"},"scope":6947,"src":"8755:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5656,"nodeType":"Block","src":"9330:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"9344:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5639,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5638,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:20","memberName":"max","nodeType":"MemberAccess","src":"9352:17:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5650,"nodeType":"IfStatement","src":"9340:105:20","trueBody":{"id":5649,"nodeType":"Block","src":"9371:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"9428:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5644,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"9392:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5648,"nodeType":"RevertStatement","src":"9385:49:20"}]}},{"expression":{"arguments":[{"id":5653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"9469:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5651,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:20","typeDescriptions":{}}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5636,"id":5655,"nodeType":"Return","src":"9454:21:20"}]},"documentation":{"id":5630,"nodeType":"StructuredDocumentation","src":"8979:280:20","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5657,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:20","nodeType":"FunctionDefinition","parameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"value","nameLocation":"9291:5:20","nodeType":"VariableDeclaration","scope":5657,"src":"9283:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:20"},"returnParameters":{"id":5636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5657,"src":"9321:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5634,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:20"},"scope":6947,"src":"9264:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5684,"nodeType":"Block","src":"9839:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"9853:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5667,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5666,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:20","memberName":"max","nodeType":"MemberAccess","src":"9861:17:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5678,"nodeType":"IfStatement","src":"9849:105:20","trueBody":{"id":5677,"nodeType":"Block","src":"9880:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"9937:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5672,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"9901:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5676,"nodeType":"RevertStatement","src":"9894:49:20"}]}},{"expression":{"arguments":[{"id":5681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"9978:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5679,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:20","typeDescriptions":{}}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5664,"id":5683,"nodeType":"Return","src":"9963:21:20"}]},"documentation":{"id":5658,"nodeType":"StructuredDocumentation","src":"9488:280:20","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5685,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:20","nodeType":"FunctionDefinition","parameters":{"id":5661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5660,"mutability":"mutable","name":"value","nameLocation":"9800:5:20","nodeType":"VariableDeclaration","scope":5685,"src":"9792:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5659,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:20"},"returnParameters":{"id":5664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5685,"src":"9830:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5662,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:20"},"scope":6947,"src":"9773:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5712,"nodeType":"Block","src":"10348:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"10362:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5695,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5694,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:20","memberName":"max","nodeType":"MemberAccess","src":"10370:17:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5706,"nodeType":"IfStatement","src":"10358:105:20","trueBody":{"id":5705,"nodeType":"Block","src":"10389:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"10446:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5700,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"10410:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5704,"nodeType":"RevertStatement","src":"10403:49:20"}]}},{"expression":{"arguments":[{"id":5709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"10487:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5707,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:20","typeDescriptions":{}}},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5692,"id":5711,"nodeType":"Return","src":"10472:21:20"}]},"documentation":{"id":5686,"nodeType":"StructuredDocumentation","src":"9997:280:20","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5713,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:20","nodeType":"FunctionDefinition","parameters":{"id":5689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5688,"mutability":"mutable","name":"value","nameLocation":"10309:5:20","nodeType":"VariableDeclaration","scope":5713,"src":"10301:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5687,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:20"},"returnParameters":{"id":5692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5713,"src":"10339:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5690,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:20"},"scope":6947,"src":"10282:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5740,"nodeType":"Block","src":"10857:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"10871:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5723,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5722,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:20","memberName":"max","nodeType":"MemberAccess","src":"10879:17:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5734,"nodeType":"IfStatement","src":"10867:105:20","trueBody":{"id":5733,"nodeType":"Block","src":"10898:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"10955:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5728,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"10919:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5732,"nodeType":"RevertStatement","src":"10912:49:20"}]}},{"expression":{"arguments":[{"id":5737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"10996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5735,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:20","typeDescriptions":{}}},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5720,"id":5739,"nodeType":"Return","src":"10981:21:20"}]},"documentation":{"id":5714,"nodeType":"StructuredDocumentation","src":"10506:280:20","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5741,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:20","nodeType":"FunctionDefinition","parameters":{"id":5717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5716,"mutability":"mutable","name":"value","nameLocation":"10818:5:20","nodeType":"VariableDeclaration","scope":5741,"src":"10810:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5715,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:20"},"returnParameters":{"id":5720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5741,"src":"10848:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5718,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:20"},"scope":6947,"src":"10791:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5768,"nodeType":"Block","src":"11360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"11374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5751,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5750,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:20","memberName":"max","nodeType":"MemberAccess","src":"11382:16:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5762,"nodeType":"IfStatement","src":"11370:103:20","trueBody":{"id":5761,"nodeType":"Block","src":"11400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"11456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5756,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"11421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5760,"nodeType":"RevertStatement","src":"11414:48:20"}]}},{"expression":{"arguments":[{"id":5765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5744,"src":"11496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5763,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:20","typeDescriptions":{}}},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5748,"id":5767,"nodeType":"Return","src":"11482:20:20"}]},"documentation":{"id":5742,"nodeType":"StructuredDocumentation","src":"11015:276:20","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5769,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5744,"mutability":"mutable","name":"value","nameLocation":"11322:5:20","nodeType":"VariableDeclaration","scope":5769,"src":"11314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5743,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:20"},"returnParameters":{"id":5748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5769,"src":"11352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5746,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:20"},"scope":6947,"src":"11296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5796,"nodeType":"Block","src":"11860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"11874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5779,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5778,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:20","memberName":"max","nodeType":"MemberAccess","src":"11882:16:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5790,"nodeType":"IfStatement","src":"11870:103:20","trueBody":{"id":5789,"nodeType":"Block","src":"11900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"11956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5784,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"11921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5788,"nodeType":"RevertStatement","src":"11914:48:20"}]}},{"expression":{"arguments":[{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"11996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5791,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:20","typeDescriptions":{}}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5776,"id":5795,"nodeType":"Return","src":"11982:20:20"}]},"documentation":{"id":5770,"nodeType":"StructuredDocumentation","src":"11515:276:20","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5797,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5772,"mutability":"mutable","name":"value","nameLocation":"11822:5:20","nodeType":"VariableDeclaration","scope":5797,"src":"11814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5771,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:20"},"returnParameters":{"id":5776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5797,"src":"11852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5774,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:20"},"scope":6947,"src":"11796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5824,"nodeType":"Block","src":"12360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"12374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5807,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5806,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:20","memberName":"max","nodeType":"MemberAccess","src":"12382:16:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5818,"nodeType":"IfStatement","src":"12370:103:20","trueBody":{"id":5817,"nodeType":"Block","src":"12400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"12456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5812,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"12421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5816,"nodeType":"RevertStatement","src":"12414:48:20"}]}},{"expression":{"arguments":[{"id":5821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"12496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5819,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:20","typeDescriptions":{}}},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5804,"id":5823,"nodeType":"Return","src":"12482:20:20"}]},"documentation":{"id":5798,"nodeType":"StructuredDocumentation","src":"12015:276:20","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5825,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5800,"mutability":"mutable","name":"value","nameLocation":"12322:5:20","nodeType":"VariableDeclaration","scope":5825,"src":"12314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5799,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:20"},"returnParameters":{"id":5804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5825,"src":"12352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5802,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:20"},"scope":6947,"src":"12296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5852,"nodeType":"Block","src":"12860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"12874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5835,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5834,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:20","memberName":"max","nodeType":"MemberAccess","src":"12882:16:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5846,"nodeType":"IfStatement","src":"12870:103:20","trueBody":{"id":5845,"nodeType":"Block","src":"12900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"12956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5840,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"12921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5844,"nodeType":"RevertStatement","src":"12914:48:20"}]}},{"expression":{"arguments":[{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"12996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5847,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:20","typeDescriptions":{}}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5832,"id":5851,"nodeType":"Return","src":"12982:20:20"}]},"documentation":{"id":5826,"nodeType":"StructuredDocumentation","src":"12515:276:20","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5853,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5828,"mutability":"mutable","name":"value","nameLocation":"12822:5:20","nodeType":"VariableDeclaration","scope":5853,"src":"12814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5827,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:20"},"returnParameters":{"id":5832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5853,"src":"12852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5830,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:20"},"scope":6947,"src":"12796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5880,"nodeType":"Block","src":"13360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"13374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5863,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5862,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:20","memberName":"max","nodeType":"MemberAccess","src":"13382:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5874,"nodeType":"IfStatement","src":"13370:103:20","trueBody":{"id":5873,"nodeType":"Block","src":"13400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"13456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5868,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"13421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5872,"nodeType":"RevertStatement","src":"13414:48:20"}]}},{"expression":{"arguments":[{"id":5877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"13496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5875,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:20","typeDescriptions":{}}},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5860,"id":5879,"nodeType":"Return","src":"13482:20:20"}]},"documentation":{"id":5854,"nodeType":"StructuredDocumentation","src":"13015:276:20","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5881,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5856,"mutability":"mutable","name":"value","nameLocation":"13322:5:20","nodeType":"VariableDeclaration","scope":5881,"src":"13314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5855,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:20"},"returnParameters":{"id":5860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5881,"src":"13352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5858,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:20"},"scope":6947,"src":"13296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5908,"nodeType":"Block","src":"13860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"13874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5891,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:20","memberName":"max","nodeType":"MemberAccess","src":"13882:16:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5902,"nodeType":"IfStatement","src":"13870:103:20","trueBody":{"id":5901,"nodeType":"Block","src":"13900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"13956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5896,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"13921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5900,"nodeType":"RevertStatement","src":"13914:48:20"}]}},{"expression":{"arguments":[{"id":5905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"13996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5903,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:20","typeDescriptions":{}}},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5888,"id":5907,"nodeType":"Return","src":"13982:20:20"}]},"documentation":{"id":5882,"nodeType":"StructuredDocumentation","src":"13515:276:20","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5909,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5884,"mutability":"mutable","name":"value","nameLocation":"13822:5:20","nodeType":"VariableDeclaration","scope":5909,"src":"13814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5883,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:20"},"returnParameters":{"id":5888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5909,"src":"13852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5886,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:20"},"scope":6947,"src":"13796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5936,"nodeType":"Block","src":"14360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"14374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5919,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5918,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:20","memberName":"max","nodeType":"MemberAccess","src":"14382:16:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5930,"nodeType":"IfStatement","src":"14370:103:20","trueBody":{"id":5929,"nodeType":"Block","src":"14400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"14456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5924,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"14421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5928,"nodeType":"RevertStatement","src":"14414:48:20"}]}},{"expression":{"arguments":[{"id":5933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"14496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5931,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:20","typeDescriptions":{}}},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5916,"id":5935,"nodeType":"Return","src":"14482:20:20"}]},"documentation":{"id":5910,"nodeType":"StructuredDocumentation","src":"14015:276:20","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5937,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5912,"mutability":"mutable","name":"value","nameLocation":"14322:5:20","nodeType":"VariableDeclaration","scope":5937,"src":"14314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5911,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:20"},"returnParameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5937,"src":"14352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5914,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:20"},"scope":6947,"src":"14296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5964,"nodeType":"Block","src":"14860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"14874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5947,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:20","memberName":"max","nodeType":"MemberAccess","src":"14882:16:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5958,"nodeType":"IfStatement","src":"14870:103:20","trueBody":{"id":5957,"nodeType":"Block","src":"14900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"14956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5952,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"14921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5956,"nodeType":"RevertStatement","src":"14914:48:20"}]}},{"expression":{"arguments":[{"id":5961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"14996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5959,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:20","typeDescriptions":{}}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5944,"id":5963,"nodeType":"Return","src":"14982:20:20"}]},"documentation":{"id":5938,"nodeType":"StructuredDocumentation","src":"14515:276:20","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5965,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5940,"mutability":"mutable","name":"value","nameLocation":"14822:5:20","nodeType":"VariableDeclaration","scope":5965,"src":"14814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5939,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:20"},"returnParameters":{"id":5944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5965,"src":"14852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5942,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:20"},"scope":6947,"src":"14796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5992,"nodeType":"Block","src":"15360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"15374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5975,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5974,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:20","memberName":"max","nodeType":"MemberAccess","src":"15382:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5986,"nodeType":"IfStatement","src":"15370:103:20","trueBody":{"id":5985,"nodeType":"Block","src":"15400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"15456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5980,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"15421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5984,"nodeType":"RevertStatement","src":"15414:48:20"}]}},{"expression":{"arguments":[{"id":5989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"15496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5987,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:20","typeDescriptions":{}}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5972,"id":5991,"nodeType":"Return","src":"15482:20:20"}]},"documentation":{"id":5966,"nodeType":"StructuredDocumentation","src":"15015:276:20","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5993,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5968,"mutability":"mutable","name":"value","nameLocation":"15322:5:20","nodeType":"VariableDeclaration","scope":5993,"src":"15314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5967,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:20"},"returnParameters":{"id":5972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5993,"src":"15352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5970,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:20"},"scope":6947,"src":"15296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6020,"nodeType":"Block","src":"15860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"15874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6003,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6002,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:20","memberName":"max","nodeType":"MemberAccess","src":"15882:16:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6014,"nodeType":"IfStatement","src":"15870:103:20","trueBody":{"id":6013,"nodeType":"Block","src":"15900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"15956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6008,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"15921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6012,"nodeType":"RevertStatement","src":"15914:48:20"}]}},{"expression":{"arguments":[{"id":6017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"15996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6015,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:20","typeDescriptions":{}}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6000,"id":6019,"nodeType":"Return","src":"15982:20:20"}]},"documentation":{"id":5994,"nodeType":"StructuredDocumentation","src":"15515:276:20","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6021,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"mutability":"mutable","name":"value","nameLocation":"15822:5:20","nodeType":"VariableDeclaration","scope":6021,"src":"15814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5995,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:20"},"returnParameters":{"id":6000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6021,"src":"15852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5998,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:20"},"scope":6947,"src":"15796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6048,"nodeType":"Block","src":"16360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"16374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6031,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6030,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:20","memberName":"max","nodeType":"MemberAccess","src":"16382:16:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6042,"nodeType":"IfStatement","src":"16370:103:20","trueBody":{"id":6041,"nodeType":"Block","src":"16400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"16456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6036,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"16421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6040,"nodeType":"RevertStatement","src":"16414:48:20"}]}},{"expression":{"arguments":[{"id":6045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"16496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6043,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:20","typeDescriptions":{}}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6028,"id":6047,"nodeType":"Return","src":"16482:20:20"}]},"documentation":{"id":6022,"nodeType":"StructuredDocumentation","src":"16015:276:20","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6049,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6024,"mutability":"mutable","name":"value","nameLocation":"16322:5:20","nodeType":"VariableDeclaration","scope":6049,"src":"16314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6023,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:20"},"returnParameters":{"id":6028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6049,"src":"16352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6026,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:20"},"scope":6947,"src":"16296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6076,"nodeType":"Block","src":"16854:146:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"16868:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6059,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6058,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:20","memberName":"max","nodeType":"MemberAccess","src":"16876:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6070,"nodeType":"IfStatement","src":"16864:101:20","trueBody":{"id":6069,"nodeType":"Block","src":"16893:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"16948:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6064,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"16914:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6068,"nodeType":"RevertStatement","src":"16907:47:20"}]}},{"expression":{"arguments":[{"id":6073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"16987:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6071,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:20","typeDescriptions":{}}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6056,"id":6075,"nodeType":"Return","src":"16974:19:20"}]},"documentation":{"id":6050,"nodeType":"StructuredDocumentation","src":"16515:272:20","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6077,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:20","nodeType":"FunctionDefinition","parameters":{"id":6053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6052,"mutability":"mutable","name":"value","nameLocation":"16817:5:20","nodeType":"VariableDeclaration","scope":6077,"src":"16809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6051,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:20"},"returnParameters":{"id":6056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6077,"src":"16847:5:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6054,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:20"},"scope":6947,"src":"16792:208:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6099,"nodeType":"Block","src":"17236:128:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"17250:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6093,"nodeType":"IfStatement","src":"17246:81:20","trueBody":{"id":6092,"nodeType":"Block","src":"17261:66:20","statements":[{"errorCall":{"arguments":[{"id":6089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"17310:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6088,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"17282:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6091,"nodeType":"RevertStatement","src":"17275:41:20"}]}},{"expression":{"arguments":[{"id":6096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"17351:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6094,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:20","typeDescriptions":{}}},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6084,"id":6098,"nodeType":"Return","src":"17336:21:20"}]},"documentation":{"id":6078,"nodeType":"StructuredDocumentation","src":"17006:160:20","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6100,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:20","nodeType":"FunctionDefinition","parameters":{"id":6081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6080,"mutability":"mutable","name":"value","nameLocation":"17197:5:20","nodeType":"VariableDeclaration","scope":6100,"src":"17190:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6079,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:20"},"returnParameters":{"id":6084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6100,"src":"17227:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6082,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:20"},"scope":6947,"src":"17171:193:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6125,"nodeType":"Block","src":"17761:150:20","statements":[{"expression":{"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6108,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"17771:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"17791:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6109,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:20","typeDescriptions":{}}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6114,"nodeType":"ExpressionStatement","src":"17771:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6115,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"17811:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"17825:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6124,"nodeType":"IfStatement","src":"17807:98:20","trueBody":{"id":6123,"nodeType":"Block","src":"17832:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"17888:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6118,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"17853:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6122,"nodeType":"RevertStatement","src":"17846:48:20"}]}}]},"documentation":{"id":6101,"nodeType":"StructuredDocumentation","src":"17370:312:20","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6126,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:20","nodeType":"FunctionDefinition","parameters":{"id":6104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6103,"mutability":"mutable","name":"value","nameLocation":"17712:5:20","nodeType":"VariableDeclaration","scope":6126,"src":"17705:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6102,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:20"},"returnParameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6106,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:20","nodeType":"VariableDeclaration","scope":6126,"src":"17742:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6105,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:20"},"scope":6947,"src":"17687:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6151,"nodeType":"Block","src":"18308:150:20","statements":[{"expression":{"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6134,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"18318:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"18338:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6135,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:20","typeDescriptions":{}}},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6140,"nodeType":"ExpressionStatement","src":"18318:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6141,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6132,"src":"18358:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"18372:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6150,"nodeType":"IfStatement","src":"18354:98:20","trueBody":{"id":6149,"nodeType":"Block","src":"18379:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"18435:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6144,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"18400:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6148,"nodeType":"RevertStatement","src":"18393:48:20"}]}}]},"documentation":{"id":6127,"nodeType":"StructuredDocumentation","src":"17917:312:20","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6152,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:20","nodeType":"FunctionDefinition","parameters":{"id":6130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"value","nameLocation":"18259:5:20","nodeType":"VariableDeclaration","scope":6152,"src":"18252:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6128,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:20"},"returnParameters":{"id":6133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6132,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:20","nodeType":"VariableDeclaration","scope":6152,"src":"18289:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6131,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:20"},"scope":6947,"src":"18234:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6177,"nodeType":"Block","src":"18855:150:20","statements":[{"expression":{"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6160,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"18865:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"18885:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6161,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:20","typeDescriptions":{}}},"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6166,"nodeType":"ExpressionStatement","src":"18865:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6167,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6158,"src":"18905:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"18919:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6176,"nodeType":"IfStatement","src":"18901:98:20","trueBody":{"id":6175,"nodeType":"Block","src":"18926:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"18982:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6170,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"18947:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6174,"nodeType":"RevertStatement","src":"18940:48:20"}]}}]},"documentation":{"id":6153,"nodeType":"StructuredDocumentation","src":"18464:312:20","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6178,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:20","nodeType":"FunctionDefinition","parameters":{"id":6156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6155,"mutability":"mutable","name":"value","nameLocation":"18806:5:20","nodeType":"VariableDeclaration","scope":6178,"src":"18799:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6154,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:20"},"returnParameters":{"id":6159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6158,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:20","nodeType":"VariableDeclaration","scope":6178,"src":"18836:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6157,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:20"},"scope":6947,"src":"18781:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6203,"nodeType":"Block","src":"19402:150:20","statements":[{"expression":{"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6186,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"19412:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"19432:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6187,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:20","typeDescriptions":{}}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6192,"nodeType":"ExpressionStatement","src":"19412:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6193,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"19452:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"19466:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6202,"nodeType":"IfStatement","src":"19448:98:20","trueBody":{"id":6201,"nodeType":"Block","src":"19473:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"19529:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6196,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"19494:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6200,"nodeType":"RevertStatement","src":"19487:48:20"}]}}]},"documentation":{"id":6179,"nodeType":"StructuredDocumentation","src":"19011:312:20","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6204,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:20","nodeType":"FunctionDefinition","parameters":{"id":6182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6181,"mutability":"mutable","name":"value","nameLocation":"19353:5:20","nodeType":"VariableDeclaration","scope":6204,"src":"19346:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6180,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:20"},"returnParameters":{"id":6185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6184,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:20","nodeType":"VariableDeclaration","scope":6204,"src":"19383:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6183,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:20"},"scope":6947,"src":"19328:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6229,"nodeType":"Block","src":"19949:150:20","statements":[{"expression":{"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6212,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"19959:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"19979:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6213,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:20","typeDescriptions":{}}},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6218,"nodeType":"ExpressionStatement","src":"19959:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6219,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"19999:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"20013:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6228,"nodeType":"IfStatement","src":"19995:98:20","trueBody":{"id":6227,"nodeType":"Block","src":"20020:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"20076:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6222,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"20041:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6226,"nodeType":"RevertStatement","src":"20034:48:20"}]}}]},"documentation":{"id":6205,"nodeType":"StructuredDocumentation","src":"19558:312:20","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6230,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:20","nodeType":"FunctionDefinition","parameters":{"id":6208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6207,"mutability":"mutable","name":"value","nameLocation":"19900:5:20","nodeType":"VariableDeclaration","scope":6230,"src":"19893:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6206,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:20"},"returnParameters":{"id":6211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6210,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:20","nodeType":"VariableDeclaration","scope":6230,"src":"19930:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6209,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:20"},"scope":6947,"src":"19875:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6255,"nodeType":"Block","src":"20496:150:20","statements":[{"expression":{"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6238,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"20506:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"20526:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6239,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:20","typeDescriptions":{}}},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6244,"nodeType":"ExpressionStatement","src":"20506:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6245,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6236,"src":"20546:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"20560:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6254,"nodeType":"IfStatement","src":"20542:98:20","trueBody":{"id":6253,"nodeType":"Block","src":"20567:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"20623:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6248,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"20588:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6252,"nodeType":"RevertStatement","src":"20581:48:20"}]}}]},"documentation":{"id":6231,"nodeType":"StructuredDocumentation","src":"20105:312:20","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6256,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:20","nodeType":"FunctionDefinition","parameters":{"id":6234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6233,"mutability":"mutable","name":"value","nameLocation":"20447:5:20","nodeType":"VariableDeclaration","scope":6256,"src":"20440:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6232,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:20"},"returnParameters":{"id":6237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6236,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:20","nodeType":"VariableDeclaration","scope":6256,"src":"20477:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6235,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:20"},"scope":6947,"src":"20422:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6281,"nodeType":"Block","src":"21043:150:20","statements":[{"expression":{"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6264,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"21053:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"21073:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6265,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:20","typeDescriptions":{}}},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6270,"nodeType":"ExpressionStatement","src":"21053:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6271,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6262,"src":"21093:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"21107:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6280,"nodeType":"IfStatement","src":"21089:98:20","trueBody":{"id":6279,"nodeType":"Block","src":"21114:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"21170:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6274,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"21135:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6278,"nodeType":"RevertStatement","src":"21128:48:20"}]}}]},"documentation":{"id":6257,"nodeType":"StructuredDocumentation","src":"20652:312:20","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6282,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:20","nodeType":"FunctionDefinition","parameters":{"id":6260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6259,"mutability":"mutable","name":"value","nameLocation":"20994:5:20","nodeType":"VariableDeclaration","scope":6282,"src":"20987:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6258,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:20"},"returnParameters":{"id":6263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6262,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:20","nodeType":"VariableDeclaration","scope":6282,"src":"21024:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6261,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:20"},"scope":6947,"src":"20969:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6307,"nodeType":"Block","src":"21590:150:20","statements":[{"expression":{"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6290,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"21600:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"21620:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6291,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:20","typeDescriptions":{}}},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6296,"nodeType":"ExpressionStatement","src":"21600:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6297,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"21640:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"21654:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6306,"nodeType":"IfStatement","src":"21636:98:20","trueBody":{"id":6305,"nodeType":"Block","src":"21661:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"21717:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6300,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"21682:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6304,"nodeType":"RevertStatement","src":"21675:48:20"}]}}]},"documentation":{"id":6283,"nodeType":"StructuredDocumentation","src":"21199:312:20","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6308,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:20","nodeType":"FunctionDefinition","parameters":{"id":6286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6285,"mutability":"mutable","name":"value","nameLocation":"21541:5:20","nodeType":"VariableDeclaration","scope":6308,"src":"21534:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6284,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:20"},"returnParameters":{"id":6289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6288,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:20","nodeType":"VariableDeclaration","scope":6308,"src":"21571:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6287,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:20"},"scope":6947,"src":"21516:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6333,"nodeType":"Block","src":"22137:150:20","statements":[{"expression":{"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6316,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"22147:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"22167:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6317,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:20","typeDescriptions":{}}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6322,"nodeType":"ExpressionStatement","src":"22147:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6323,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"22187:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"22201:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6332,"nodeType":"IfStatement","src":"22183:98:20","trueBody":{"id":6331,"nodeType":"Block","src":"22208:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"22264:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6326,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"22229:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6330,"nodeType":"RevertStatement","src":"22222:48:20"}]}}]},"documentation":{"id":6309,"nodeType":"StructuredDocumentation","src":"21746:312:20","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6334,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:20","nodeType":"FunctionDefinition","parameters":{"id":6312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6311,"mutability":"mutable","name":"value","nameLocation":"22088:5:20","nodeType":"VariableDeclaration","scope":6334,"src":"22081:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6310,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:20"},"returnParameters":{"id":6315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6314,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:20","nodeType":"VariableDeclaration","scope":6334,"src":"22118:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6313,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:20"},"scope":6947,"src":"22063:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6359,"nodeType":"Block","src":"22684:150:20","statements":[{"expression":{"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6342,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"22694:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"22714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6343,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:20","typeDescriptions":{}}},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6348,"nodeType":"ExpressionStatement","src":"22694:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6349,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"22734:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"22748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6358,"nodeType":"IfStatement","src":"22730:98:20","trueBody":{"id":6357,"nodeType":"Block","src":"22755:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"22811:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6352,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"22776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6356,"nodeType":"RevertStatement","src":"22769:48:20"}]}}]},"documentation":{"id":6335,"nodeType":"StructuredDocumentation","src":"22293:312:20","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6360,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:20","nodeType":"FunctionDefinition","parameters":{"id":6338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6337,"mutability":"mutable","name":"value","nameLocation":"22635:5:20","nodeType":"VariableDeclaration","scope":6360,"src":"22628:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6336,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:20"},"returnParameters":{"id":6341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6340,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:20","nodeType":"VariableDeclaration","scope":6360,"src":"22665:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6339,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:20"},"scope":6947,"src":"22610:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6385,"nodeType":"Block","src":"23231:150:20","statements":[{"expression":{"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6368,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"23241:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6363,"src":"23261:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6369,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:20","typeDescriptions":{}}},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6374,"nodeType":"ExpressionStatement","src":"23241:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"23281:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6363,"src":"23295:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6384,"nodeType":"IfStatement","src":"23277:98:20","trueBody":{"id":6383,"nodeType":"Block","src":"23302:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6363,"src":"23358:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6378,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"23323:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6382,"nodeType":"RevertStatement","src":"23316:48:20"}]}}]},"documentation":{"id":6361,"nodeType":"StructuredDocumentation","src":"22840:312:20","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6386,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:20","nodeType":"FunctionDefinition","parameters":{"id":6364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6363,"mutability":"mutable","name":"value","nameLocation":"23182:5:20","nodeType":"VariableDeclaration","scope":6386,"src":"23175:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6362,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:20"},"returnParameters":{"id":6367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6366,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:20","nodeType":"VariableDeclaration","scope":6386,"src":"23212:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6365,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:20"},"scope":6947,"src":"23157:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6411,"nodeType":"Block","src":"23778:150:20","statements":[{"expression":{"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6394,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"23788:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"23808:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6395,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:20","typeDescriptions":{}}},"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6400,"nodeType":"ExpressionStatement","src":"23788:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6401,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6392,"src":"23828:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"23842:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6410,"nodeType":"IfStatement","src":"23824:98:20","trueBody":{"id":6409,"nodeType":"Block","src":"23849:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"23905:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6404,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"23870:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6408,"nodeType":"RevertStatement","src":"23863:48:20"}]}}]},"documentation":{"id":6387,"nodeType":"StructuredDocumentation","src":"23387:312:20","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6412,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:20","nodeType":"FunctionDefinition","parameters":{"id":6390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"value","nameLocation":"23729:5:20","nodeType":"VariableDeclaration","scope":6412,"src":"23722:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6388,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:20"},"returnParameters":{"id":6393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6392,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:20","nodeType":"VariableDeclaration","scope":6412,"src":"23759:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6391,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:20"},"scope":6947,"src":"23704:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6437,"nodeType":"Block","src":"24325:150:20","statements":[{"expression":{"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6420,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6418,"src":"24335:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"24355:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6421,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:20","typeDescriptions":{}}},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6426,"nodeType":"ExpressionStatement","src":"24335:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6427,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6418,"src":"24375:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"24389:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6436,"nodeType":"IfStatement","src":"24371:98:20","trueBody":{"id":6435,"nodeType":"Block","src":"24396:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"24452:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6430,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"24417:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6434,"nodeType":"RevertStatement","src":"24410:48:20"}]}}]},"documentation":{"id":6413,"nodeType":"StructuredDocumentation","src":"23934:312:20","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6438,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:20","nodeType":"FunctionDefinition","parameters":{"id":6416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6415,"mutability":"mutable","name":"value","nameLocation":"24276:5:20","nodeType":"VariableDeclaration","scope":6438,"src":"24269:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6414,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:20"},"returnParameters":{"id":6419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6418,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:20","nodeType":"VariableDeclaration","scope":6438,"src":"24306:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6417,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:20"},"scope":6947,"src":"24251:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6463,"nodeType":"Block","src":"24872:150:20","statements":[{"expression":{"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6446,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"24882:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"24902:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6447,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:20","typeDescriptions":{}}},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6452,"nodeType":"ExpressionStatement","src":"24882:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6453,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"24922:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"24936:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6462,"nodeType":"IfStatement","src":"24918:98:20","trueBody":{"id":6461,"nodeType":"Block","src":"24943:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"24999:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6456,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"24964:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6460,"nodeType":"RevertStatement","src":"24957:48:20"}]}}]},"documentation":{"id":6439,"nodeType":"StructuredDocumentation","src":"24481:312:20","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6464,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:20","nodeType":"FunctionDefinition","parameters":{"id":6442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6441,"mutability":"mutable","name":"value","nameLocation":"24823:5:20","nodeType":"VariableDeclaration","scope":6464,"src":"24816:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6440,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:20"},"returnParameters":{"id":6445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6444,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:20","nodeType":"VariableDeclaration","scope":6464,"src":"24853:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6443,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:20"},"scope":6947,"src":"24798:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6489,"nodeType":"Block","src":"25419:150:20","statements":[{"expression":{"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6472,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"25429:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"25449:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6473,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:20","typeDescriptions":{}}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6478,"nodeType":"ExpressionStatement","src":"25429:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6479,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"25469:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"25483:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6488,"nodeType":"IfStatement","src":"25465:98:20","trueBody":{"id":6487,"nodeType":"Block","src":"25490:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"25546:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6482,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"25511:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6486,"nodeType":"RevertStatement","src":"25504:48:20"}]}}]},"documentation":{"id":6465,"nodeType":"StructuredDocumentation","src":"25028:312:20","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6490,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:20","nodeType":"FunctionDefinition","parameters":{"id":6468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6467,"mutability":"mutable","name":"value","nameLocation":"25370:5:20","nodeType":"VariableDeclaration","scope":6490,"src":"25363:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6466,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:20"},"returnParameters":{"id":6471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6470,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:20","nodeType":"VariableDeclaration","scope":6490,"src":"25400:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6469,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:20"},"scope":6947,"src":"25345:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6515,"nodeType":"Block","src":"25966:150:20","statements":[{"expression":{"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6498,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"25976:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"25996:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6499,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:20","typeDescriptions":{}}},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6504,"nodeType":"ExpressionStatement","src":"25976:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6505,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"26016:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"26030:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6514,"nodeType":"IfStatement","src":"26012:98:20","trueBody":{"id":6513,"nodeType":"Block","src":"26037:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"26093:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6508,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"26058:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6512,"nodeType":"RevertStatement","src":"26051:48:20"}]}}]},"documentation":{"id":6491,"nodeType":"StructuredDocumentation","src":"25575:312:20","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6516,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:20","nodeType":"FunctionDefinition","parameters":{"id":6494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6493,"mutability":"mutable","name":"value","nameLocation":"25917:5:20","nodeType":"VariableDeclaration","scope":6516,"src":"25910:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6492,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:20"},"returnParameters":{"id":6497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6496,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:20","nodeType":"VariableDeclaration","scope":6516,"src":"25947:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6495,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:20"},"scope":6947,"src":"25892:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6541,"nodeType":"Block","src":"26513:150:20","statements":[{"expression":{"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6524,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"26523:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"26543:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6525,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:20","typeDescriptions":{}}},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6530,"nodeType":"ExpressionStatement","src":"26523:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6531,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"26563:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"26577:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6540,"nodeType":"IfStatement","src":"26559:98:20","trueBody":{"id":6539,"nodeType":"Block","src":"26584:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"26640:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6534,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"26605:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6538,"nodeType":"RevertStatement","src":"26598:48:20"}]}}]},"documentation":{"id":6517,"nodeType":"StructuredDocumentation","src":"26122:312:20","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6542,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:20","nodeType":"FunctionDefinition","parameters":{"id":6520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6519,"mutability":"mutable","name":"value","nameLocation":"26464:5:20","nodeType":"VariableDeclaration","scope":6542,"src":"26457:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6518,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:20"},"returnParameters":{"id":6523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6522,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:20","nodeType":"VariableDeclaration","scope":6542,"src":"26494:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6521,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:20"},"scope":6947,"src":"26439:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6567,"nodeType":"Block","src":"27060:150:20","statements":[{"expression":{"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6550,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"27070:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"27090:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6551,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:20","typeDescriptions":{}}},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6556,"nodeType":"ExpressionStatement","src":"27070:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6557,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"27110:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"27124:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6566,"nodeType":"IfStatement","src":"27106:98:20","trueBody":{"id":6565,"nodeType":"Block","src":"27131:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"27187:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6560,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"27152:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6564,"nodeType":"RevertStatement","src":"27145:48:20"}]}}]},"documentation":{"id":6543,"nodeType":"StructuredDocumentation","src":"26669:312:20","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6568,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:20","nodeType":"FunctionDefinition","parameters":{"id":6546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6545,"mutability":"mutable","name":"value","nameLocation":"27011:5:20","nodeType":"VariableDeclaration","scope":6568,"src":"27004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6544,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:20"},"returnParameters":{"id":6549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6548,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:20","nodeType":"VariableDeclaration","scope":6568,"src":"27041:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6547,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:20"},"scope":6947,"src":"26986:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6593,"nodeType":"Block","src":"27607:150:20","statements":[{"expression":{"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6576,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"27617:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"27637:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6577,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:20","typeDescriptions":{}}},"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6582,"nodeType":"ExpressionStatement","src":"27617:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6583,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"27657:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"27671:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6592,"nodeType":"IfStatement","src":"27653:98:20","trueBody":{"id":6591,"nodeType":"Block","src":"27678:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"27734:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6586,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"27699:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6590,"nodeType":"RevertStatement","src":"27692:48:20"}]}}]},"documentation":{"id":6569,"nodeType":"StructuredDocumentation","src":"27216:312:20","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6594,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:20","nodeType":"FunctionDefinition","parameters":{"id":6572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6571,"mutability":"mutable","name":"value","nameLocation":"27558:5:20","nodeType":"VariableDeclaration","scope":6594,"src":"27551:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6570,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:20"},"returnParameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:20","nodeType":"VariableDeclaration","scope":6594,"src":"27588:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6573,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:20"},"scope":6947,"src":"27533:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6619,"nodeType":"Block","src":"28147:148:20","statements":[{"expression":{"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6602,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"28157:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"28176:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6603,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:20","typeDescriptions":{}}},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6608,"nodeType":"ExpressionStatement","src":"28157:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6609,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"28196:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"28210:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6618,"nodeType":"IfStatement","src":"28192:97:20","trueBody":{"id":6617,"nodeType":"Block","src":"28217:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"28272:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6612,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"28238:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6616,"nodeType":"RevertStatement","src":"28231:47:20"}]}}]},"documentation":{"id":6595,"nodeType":"StructuredDocumentation","src":"27763:307:20","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6620,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:20","nodeType":"FunctionDefinition","parameters":{"id":6598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6597,"mutability":"mutable","name":"value","nameLocation":"28099:5:20","nodeType":"VariableDeclaration","scope":6620,"src":"28092:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6596,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:20"},"returnParameters":{"id":6601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6600,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:20","nodeType":"VariableDeclaration","scope":6620,"src":"28129:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6599,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:20"},"scope":6947,"src":"28075:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6645,"nodeType":"Block","src":"28685:148:20","statements":[{"expression":{"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6628,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"28695:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"28714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6629,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:20","typeDescriptions":{}}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6634,"nodeType":"ExpressionStatement","src":"28695:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6635,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"28734:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"28748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6644,"nodeType":"IfStatement","src":"28730:97:20","trueBody":{"id":6643,"nodeType":"Block","src":"28755:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"28810:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6638,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"28776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6642,"nodeType":"RevertStatement","src":"28769:47:20"}]}}]},"documentation":{"id":6621,"nodeType":"StructuredDocumentation","src":"28301:307:20","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6646,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:20","nodeType":"FunctionDefinition","parameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6623,"mutability":"mutable","name":"value","nameLocation":"28637:5:20","nodeType":"VariableDeclaration","scope":6646,"src":"28630:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6622,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:20"},"returnParameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:20","nodeType":"VariableDeclaration","scope":6646,"src":"28667:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6625,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:20"},"scope":6947,"src":"28613:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6671,"nodeType":"Block","src":"29223:148:20","statements":[{"expression":{"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6654,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"29233:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"29252:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6655,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:20","typeDescriptions":{}}},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6660,"nodeType":"ExpressionStatement","src":"29233:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6661,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"29272:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"29286:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6670,"nodeType":"IfStatement","src":"29268:97:20","trueBody":{"id":6669,"nodeType":"Block","src":"29293:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"29348:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6664,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"29314:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6668,"nodeType":"RevertStatement","src":"29307:47:20"}]}}]},"documentation":{"id":6647,"nodeType":"StructuredDocumentation","src":"28839:307:20","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6672,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:20","nodeType":"FunctionDefinition","parameters":{"id":6650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6649,"mutability":"mutable","name":"value","nameLocation":"29175:5:20","nodeType":"VariableDeclaration","scope":6672,"src":"29168:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6648,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:20"},"returnParameters":{"id":6653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6652,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:20","nodeType":"VariableDeclaration","scope":6672,"src":"29205:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6651,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:20"},"scope":6947,"src":"29151:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6697,"nodeType":"Block","src":"29761:148:20","statements":[{"expression":{"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6680,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"29771:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"29790:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6681,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:20","typeDescriptions":{}}},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6686,"nodeType":"ExpressionStatement","src":"29771:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6687,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"29810:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"29824:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6696,"nodeType":"IfStatement","src":"29806:97:20","trueBody":{"id":6695,"nodeType":"Block","src":"29831:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"29886:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6690,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"29852:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6694,"nodeType":"RevertStatement","src":"29845:47:20"}]}}]},"documentation":{"id":6673,"nodeType":"StructuredDocumentation","src":"29377:307:20","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6698,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:20","nodeType":"FunctionDefinition","parameters":{"id":6676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6675,"mutability":"mutable","name":"value","nameLocation":"29713:5:20","nodeType":"VariableDeclaration","scope":6698,"src":"29706:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6674,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:20"},"returnParameters":{"id":6679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6678,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:20","nodeType":"VariableDeclaration","scope":6698,"src":"29743:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6677,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:20"},"scope":6947,"src":"29689:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6723,"nodeType":"Block","src":"30299:148:20","statements":[{"expression":{"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6706,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"30309:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"30328:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6707,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:20","typeDescriptions":{}}},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6712,"nodeType":"ExpressionStatement","src":"30309:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6713,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"30348:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"30362:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6722,"nodeType":"IfStatement","src":"30344:97:20","trueBody":{"id":6721,"nodeType":"Block","src":"30369:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"30424:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6716,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"30390:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6720,"nodeType":"RevertStatement","src":"30383:47:20"}]}}]},"documentation":{"id":6699,"nodeType":"StructuredDocumentation","src":"29915:307:20","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6724,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:20","nodeType":"FunctionDefinition","parameters":{"id":6702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6701,"mutability":"mutable","name":"value","nameLocation":"30251:5:20","nodeType":"VariableDeclaration","scope":6724,"src":"30244:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6700,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:20"},"returnParameters":{"id":6705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6704,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:20","nodeType":"VariableDeclaration","scope":6724,"src":"30281:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6703,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:20"},"scope":6947,"src":"30227:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6749,"nodeType":"Block","src":"30837:148:20","statements":[{"expression":{"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6732,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"30847:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"30866:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6733,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:20","typeDescriptions":{}}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6738,"nodeType":"ExpressionStatement","src":"30847:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6739,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"30886:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"30900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6748,"nodeType":"IfStatement","src":"30882:97:20","trueBody":{"id":6747,"nodeType":"Block","src":"30907:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"30962:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6742,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"30928:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6746,"nodeType":"RevertStatement","src":"30921:47:20"}]}}]},"documentation":{"id":6725,"nodeType":"StructuredDocumentation","src":"30453:307:20","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6750,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:20","nodeType":"FunctionDefinition","parameters":{"id":6728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6727,"mutability":"mutable","name":"value","nameLocation":"30789:5:20","nodeType":"VariableDeclaration","scope":6750,"src":"30782:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6726,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:20"},"returnParameters":{"id":6731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6730,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:20","nodeType":"VariableDeclaration","scope":6750,"src":"30819:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6729,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:20"},"scope":6947,"src":"30765:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6775,"nodeType":"Block","src":"31375:148:20","statements":[{"expression":{"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6758,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"31385:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"31404:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6759,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:20","typeDescriptions":{}}},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6764,"nodeType":"ExpressionStatement","src":"31385:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6765,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"31424:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"31438:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6774,"nodeType":"IfStatement","src":"31420:97:20","trueBody":{"id":6773,"nodeType":"Block","src":"31445:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"31500:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6768,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"31466:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6772,"nodeType":"RevertStatement","src":"31459:47:20"}]}}]},"documentation":{"id":6751,"nodeType":"StructuredDocumentation","src":"30991:307:20","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6776,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:20","nodeType":"FunctionDefinition","parameters":{"id":6754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6753,"mutability":"mutable","name":"value","nameLocation":"31327:5:20","nodeType":"VariableDeclaration","scope":6776,"src":"31320:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6752,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:20"},"returnParameters":{"id":6757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6756,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:20","nodeType":"VariableDeclaration","scope":6776,"src":"31357:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6755,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:20"},"scope":6947,"src":"31303:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6801,"nodeType":"Block","src":"31913:148:20","statements":[{"expression":{"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6784,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"31923:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"31942:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6785,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:20","typeDescriptions":{}}},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6790,"nodeType":"ExpressionStatement","src":"31923:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6791,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"31962:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"31976:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6800,"nodeType":"IfStatement","src":"31958:97:20","trueBody":{"id":6799,"nodeType":"Block","src":"31983:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6779,"src":"32038:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6794,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"32004:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6798,"nodeType":"RevertStatement","src":"31997:47:20"}]}}]},"documentation":{"id":6777,"nodeType":"StructuredDocumentation","src":"31529:307:20","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6802,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:20","nodeType":"FunctionDefinition","parameters":{"id":6780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6779,"mutability":"mutable","name":"value","nameLocation":"31865:5:20","nodeType":"VariableDeclaration","scope":6802,"src":"31858:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6778,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:20"},"returnParameters":{"id":6783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6782,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:20","nodeType":"VariableDeclaration","scope":6802,"src":"31895:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6781,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:20"},"scope":6947,"src":"31841:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6827,"nodeType":"Block","src":"32451:148:20","statements":[{"expression":{"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6810,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"32461:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"32480:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6811,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:20","typeDescriptions":{}}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6816,"nodeType":"ExpressionStatement","src":"32461:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6817,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"32500:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"32514:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6826,"nodeType":"IfStatement","src":"32496:97:20","trueBody":{"id":6825,"nodeType":"Block","src":"32521:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6805,"src":"32576:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6820,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"32542:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6824,"nodeType":"RevertStatement","src":"32535:47:20"}]}}]},"documentation":{"id":6803,"nodeType":"StructuredDocumentation","src":"32067:307:20","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6828,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:20","nodeType":"FunctionDefinition","parameters":{"id":6806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6805,"mutability":"mutable","name":"value","nameLocation":"32403:5:20","nodeType":"VariableDeclaration","scope":6828,"src":"32396:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6804,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:20"},"returnParameters":{"id":6809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6808,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:20","nodeType":"VariableDeclaration","scope":6828,"src":"32433:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6807,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:20"},"scope":6947,"src":"32379:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6853,"nodeType":"Block","src":"32989:148:20","statements":[{"expression":{"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6836,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"32999:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"33018:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6837,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:20","typeDescriptions":{}}},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6842,"nodeType":"ExpressionStatement","src":"32999:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6843,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"33038:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"33052:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6852,"nodeType":"IfStatement","src":"33034:97:20","trueBody":{"id":6851,"nodeType":"Block","src":"33059:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"33114:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6846,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"33080:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6850,"nodeType":"RevertStatement","src":"33073:47:20"}]}}]},"documentation":{"id":6829,"nodeType":"StructuredDocumentation","src":"32605:307:20","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6854,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:20","nodeType":"FunctionDefinition","parameters":{"id":6832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"value","nameLocation":"32941:5:20","nodeType":"VariableDeclaration","scope":6854,"src":"32934:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6830,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:20"},"returnParameters":{"id":6835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6834,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:20","nodeType":"VariableDeclaration","scope":6854,"src":"32971:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6833,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:20"},"scope":6947,"src":"32917:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6879,"nodeType":"Block","src":"33527:148:20","statements":[{"expression":{"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6862,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"33537:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"33556:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6863,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:20","typeDescriptions":{}}},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6868,"nodeType":"ExpressionStatement","src":"33537:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6869,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"33576:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"33590:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6878,"nodeType":"IfStatement","src":"33572:97:20","trueBody":{"id":6877,"nodeType":"Block","src":"33597:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6857,"src":"33652:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6872,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"33618:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6876,"nodeType":"RevertStatement","src":"33611:47:20"}]}}]},"documentation":{"id":6855,"nodeType":"StructuredDocumentation","src":"33143:307:20","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6880,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:20","nodeType":"FunctionDefinition","parameters":{"id":6858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6857,"mutability":"mutable","name":"value","nameLocation":"33479:5:20","nodeType":"VariableDeclaration","scope":6880,"src":"33472:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6856,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:20"},"returnParameters":{"id":6861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6860,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:20","nodeType":"VariableDeclaration","scope":6880,"src":"33509:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6859,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:20"},"scope":6947,"src":"33455:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6905,"nodeType":"Block","src":"34058:146:20","statements":[{"expression":{"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6888,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"34068:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"34086:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6889,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:20","typeDescriptions":{}}},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6894,"nodeType":"ExpressionStatement","src":"34068:24:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6895,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6886,"src":"34106:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"34120:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6904,"nodeType":"IfStatement","src":"34102:96:20","trueBody":{"id":6903,"nodeType":"Block","src":"34127:71:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"34181:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6898,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"34148:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6902,"nodeType":"RevertStatement","src":"34141:46:20"}]}}]},"documentation":{"id":6881,"nodeType":"StructuredDocumentation","src":"33681:302:20","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6906,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:20","nodeType":"FunctionDefinition","parameters":{"id":6884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6883,"mutability":"mutable","name":"value","nameLocation":"34011:5:20","nodeType":"VariableDeclaration","scope":6906,"src":"34004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6882,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:20"},"returnParameters":{"id":6887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6886,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:20","nodeType":"VariableDeclaration","scope":6906,"src":"34041:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6885,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:20"},"scope":6947,"src":"33988:216:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6935,"nodeType":"Block","src":"34444:250:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"34557:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6918,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6917,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:20","memberName":"max","nodeType":"MemberAccess","src":"34573:16:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6915,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:20","typeDescriptions":{}}},"id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6929,"nodeType":"IfStatement","src":"34553:105:20","trueBody":{"id":6928,"nodeType":"Block","src":"34592:66:20","statements":[{"errorCall":{"arguments":[{"id":6925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"34641:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6924,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"34613:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6927,"nodeType":"RevertStatement","src":"34606:41:20"}]}},{"expression":{"arguments":[{"id":6932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"34681:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6930,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:20","typeDescriptions":{}}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6913,"id":6934,"nodeType":"Return","src":"34667:20:20"}]},"documentation":{"id":6907,"nodeType":"StructuredDocumentation","src":"34210:165:20","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6936,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:20","nodeType":"FunctionDefinition","parameters":{"id":6910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6909,"mutability":"mutable","name":"value","nameLocation":"34406:5:20","nodeType":"VariableDeclaration","scope":6936,"src":"34398:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6908,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:20"},"returnParameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6936,"src":"34436:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6911,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:20"},"scope":6947,"src":"34380:314:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6945,"nodeType":"Block","src":"34853:87:20","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:20","statements":[{"nodeType":"YulAssignment","src":"34902:22:20","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:20"},"nodeType":"YulFunctionCall","src":"34914:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:20"},"nodeType":"YulFunctionCall","src":"34907:17:20"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6939,"isOffset":false,"isSlot":false,"src":"34921:1:20","valueSize":1},{"declaration":6942,"isOffset":false,"isSlot":false,"src":"34902:1:20","valueSize":1}],"flags":["memory-safe"],"id":6944,"nodeType":"InlineAssembly","src":"34863:71:20"}]},"documentation":{"id":6937,"nodeType":"StructuredDocumentation","src":"34700:90:20","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6946,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:20","nodeType":"FunctionDefinition","parameters":{"id":6940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6939,"mutability":"mutable","name":"b","nameLocation":"34816:1:20","nodeType":"VariableDeclaration","scope":6946,"src":"34811:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6938,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:20"},"returnParameters":{"id":6943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6942,"mutability":"mutable","name":"u","nameLocation":"34850:1:20","nodeType":"VariableDeclaration","scope":6946,"src":"34842:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6941,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:20"},"scope":6947,"src":"34795:145:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6948,"src":"769:34173:20","usedErrors":[5192,5197,5204,5209],"usedEvents":[]}],"src":"192:34751:20"},"id":20},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6947],"SignedMath":[7091]},"id":7092,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6949,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6951,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7092,"sourceUnit":6948,"src":"135:40:21","symbolAliases":[{"foreign":{"id":6950,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"143:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6952,"nodeType":"StructuredDocumentation","src":"177:80:21","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7091,"linearizedBaseContracts":[7091],"name":"SignedMath","nameLocation":"266:10:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":6981,"nodeType":"Block","src":"746:215:21","statements":[{"id":6980,"nodeType":"UncheckedBlock","src":"756:199:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6964,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"894:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"900:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"904:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6973,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"932:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6971,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"916:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6947_$","typeString":"type(library SafeCast)"}},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6946,"src":"916:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6969,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:21","typeDescriptions":{}}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6963,"id":6979,"nodeType":"Return","src":"887:57:21"}]}]},"documentation":{"id":6953,"nodeType":"StructuredDocumentation","src":"283:374:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6982,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:21","nodeType":"FunctionDefinition","parameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6955,"mutability":"mutable","name":"condition","nameLocation":"684:9:21","nodeType":"VariableDeclaration","scope":6982,"src":"679:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6954,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6957,"mutability":"mutable","name":"a","nameLocation":"702:1:21","nodeType":"VariableDeclaration","scope":6982,"src":"695:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6956,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6959,"mutability":"mutable","name":"b","nameLocation":"712:1:21","nodeType":"VariableDeclaration","scope":6982,"src":"705:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6958,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:21"},"returnParameters":{"id":6963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6982,"src":"738:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6961,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:21"},"scope":7091,"src":"662:299:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7000,"nodeType":"Block","src":"1102:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6993,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"1127:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6994,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"1131:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6996,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"1134:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6997,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"1137:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6992,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"1119:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6991,"id":6999,"nodeType":"Return","src":"1112:27:21"}]},"documentation":{"id":6983,"nodeType":"StructuredDocumentation","src":"967:66:21","text":" @dev Returns the largest of two signed numbers."},"id":7001,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:21","nodeType":"FunctionDefinition","parameters":{"id":6988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6985,"mutability":"mutable","name":"a","nameLocation":"1058:1:21","nodeType":"VariableDeclaration","scope":7001,"src":"1051:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6984,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6987,"mutability":"mutable","name":"b","nameLocation":"1068:1:21","nodeType":"VariableDeclaration","scope":7001,"src":"1061:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6986,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:21"},"returnParameters":{"id":6991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7001,"src":"1094:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6989,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:21"},"scope":7091,"src":"1038:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7019,"nodeType":"Block","src":"1288:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7012,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"1313:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7013,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"1317:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7015,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"1320:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7016,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"1323:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7011,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"1305:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7010,"id":7018,"nodeType":"Return","src":"1298:27:21"}]},"documentation":{"id":7002,"nodeType":"StructuredDocumentation","src":"1152:67:21","text":" @dev Returns the smallest of two signed numbers."},"id":7020,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:21","nodeType":"FunctionDefinition","parameters":{"id":7007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7004,"mutability":"mutable","name":"a","nameLocation":"1244:1:21","nodeType":"VariableDeclaration","scope":7020,"src":"1237:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7003,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7006,"mutability":"mutable","name":"b","nameLocation":"1254:1:21","nodeType":"VariableDeclaration","scope":7020,"src":"1247:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7005,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:21"},"returnParameters":{"id":7010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7020,"src":"1280:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7008,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:21"},"scope":7091,"src":"1224:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7063,"nodeType":"Block","src":"1537:162:21","statements":[{"assignments":[7031],"declarations":[{"constant":false,"id":7031,"mutability":"mutable","name":"x","nameLocation":"1606:1:21","nodeType":"VariableDeclaration","scope":7063,"src":"1599:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7030,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7044,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7032,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"1611:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7033,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7025,"src":"1615:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7036,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"1622:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7037,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7025,"src":"1626:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7039,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:21"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7045,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"1651:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7050,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"1671:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:21","typeDescriptions":{}}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7046,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:21","typeDescriptions":{}}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7055,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"1685:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7056,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7025,"src":"1689:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7029,"id":7062,"nodeType":"Return","src":"1644:48:21"}]},"documentation":{"id":7021,"nodeType":"StructuredDocumentation","src":"1338:126:21","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7064,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:21","nodeType":"FunctionDefinition","parameters":{"id":7026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7023,"mutability":"mutable","name":"a","nameLocation":"1493:1:21","nodeType":"VariableDeclaration","scope":7064,"src":"1486:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7022,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7025,"mutability":"mutable","name":"b","nameLocation":"1503:1:21","nodeType":"VariableDeclaration","scope":7064,"src":"1496:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7024,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:21"},"returnParameters":{"id":7029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7064,"src":"1529:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7027,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:21"},"scope":7091,"src":"1469:230:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7089,"nodeType":"Block","src":"1843:767:21","statements":[{"id":7088,"nodeType":"UncheckedBlock","src":"1853:751:21","statements":[{"assignments":[7073],"declarations":[{"constant":false,"id":7073,"mutability":"mutable","name":"mask","nameLocation":"2424:4:21","nodeType":"VariableDeclaration","scope":7088,"src":"2417:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7072,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7077,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7074,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"2431:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7080,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"2576:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7081,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"2580:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7084,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7073,"src":"2588:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7078,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:21","typeDescriptions":{}}},"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7071,"id":7087,"nodeType":"Return","src":"2560:33:21"}]}]},"documentation":{"id":7065,"nodeType":"StructuredDocumentation","src":"1705:78:21","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7090,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:21","nodeType":"FunctionDefinition","parameters":{"id":7068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7067,"mutability":"mutable","name":"n","nameLocation":"1808:1:21","nodeType":"VariableDeclaration","scope":7090,"src":"1801:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7066,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:21"},"returnParameters":{"id":7071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7090,"src":"1834:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:21"},"scope":7091,"src":"1788:822:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7092,"src":"258:2354:21","usedErrors":[],"usedEvents":[]}],"src":"109:2504:21"},"id":21},"contracts/NFTCallSpread.sol":{"ast":{"absolutePath":"contracts/NFTCallSpread.sol","exportedSymbols":{"AggregatorV3Interface":[7899],"Context":[2288],"ERC165":[3564],"ERC721":[1892],"ERC721URIStorage":[2153],"ERC721Utils":[2258],"IERC165":[3576],"IERC20":[909],"IERC4906":[175],"IERC721":[2009],"IERC721Errors":[269],"IERC721Metadata":[2181],"NFTCallSpread":[7563],"Ownable":[147],"Strings":[3540]},"id":7564,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7093,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7094,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7564,"sourceUnit":1893,"src":"58:57:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":7095,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7564,"sourceUnit":2154,"src":"116:78:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7096,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7564,"sourceUnit":148,"src":"195:52:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7097,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7564,"sourceUnit":910,"src":"248:56:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/AggregatorV3Interface.sol","file":"./interfaces/AggregatorV3Interface.sol","id":7098,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7564,"sourceUnit":7900,"src":"305:48:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7100,"name":"ERC721","nameLocations":["506:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"506:6:22"},"id":7101,"nodeType":"InheritanceSpecifier","src":"506:6:22"},{"baseName":{"id":7102,"name":"ERC721URIStorage","nameLocations":["514:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"514:16:22"},"id":7103,"nodeType":"InheritanceSpecifier","src":"514:16:22"},{"baseName":{"id":7104,"name":"Ownable","nameLocations":["532:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"532:7:22"},"id":7105,"nodeType":"InheritanceSpecifier","src":"532:7:22"}],"canonicalName":"NFTCallSpread","contractDependencies":[],"contractKind":"contract","documentation":{"id":7099,"nodeType":"StructuredDocumentation","src":"355:124:22","text":" @title NFTCallSpread\n @dev Contrat pour gérer des options financières call spread représentées par des NFTs"},"fullyImplemented":true,"id":7563,"linearizedBaseContracts":[7563,147,2153,1892,269,2181,175,2009,3564,3576,2288],"name":"NFTCallSpread","nameLocation":"489:13:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"NFTCallSpread.CallSpread","id":7120,"members":[{"constant":false,"id":7107,"mutability":"mutable","name":"strikePrice1","nameLocation":"582:12:22","nodeType":"VariableDeclaration","scope":7120,"src":"574:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7106,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7109,"mutability":"mutable","name":"strikePrice2","nameLocation":"672:12:22","nodeType":"VariableDeclaration","scope":7120,"src":"664:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7108,"name":"uint256","nodeType":"ElementaryTypeName","src":"664:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7111,"mutability":"mutable","name":"expiry","nameLocation":"762:6:22","nodeType":"VariableDeclaration","scope":7120,"src":"754:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7110,"name":"uint256","nodeType":"ElementaryTypeName","src":"754:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7113,"mutability":"mutable","name":"collateral","nameLocation":"818:10:22","nodeType":"VariableDeclaration","scope":7120,"src":"810:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7112,"name":"uint256","nodeType":"ElementaryTypeName","src":"810:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7115,"mutability":"mutable","name":"seller","nameLocation":"900:6:22","nodeType":"VariableDeclaration","scope":7120,"src":"892:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7114,"name":"address","nodeType":"ElementaryTypeName","src":"892:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7117,"mutability":"mutable","name":"buyer","nameLocation":"952:5:22","nodeType":"VariableDeclaration","scope":7120,"src":"944:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7116,"name":"address","nodeType":"ElementaryTypeName","src":"944:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7119,"mutability":"mutable","name":"exercised","nameLocation":"1004:9:22","nodeType":"VariableDeclaration","scope":7120,"src":"999:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7118,"name":"bool","nodeType":"ElementaryTypeName","src":"999:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"CallSpread","nameLocation":"553:10:22","nodeType":"StructDefinition","scope":7563,"src":"546:527:22","visibility":"public"},{"constant":false,"id":7122,"mutability":"mutable","name":"_nextTokenId","nameLocation":"1138:12:22","nodeType":"VariableDeclaration","scope":7563,"src":"1122:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1122:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"9abe0d58","id":7127,"mutability":"mutable","name":"callSpreads","nameLocation":"1241:11:22","nodeType":"VariableDeclaration","scope":7563,"src":"1203:49:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CallSpread_$7120_storage_$","typeString":"mapping(uint256 => struct NFTCallSpread.CallSpread)"},"typeName":{"id":7126,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7123,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1203:30:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CallSpread_$7120_storage_$","typeString":"mapping(uint256 => struct NFTCallSpread.CallSpread)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7125,"nodeType":"UserDefinedTypeName","pathNode":{"id":7124,"name":"CallSpread","nameLocations":["1222:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":7120,"src":"1222:10:22"},"referencedDeclaration":7120,"src":"1222:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread"}}},"visibility":"public"},{"constant":false,"functionSelector":"e9cbd822","id":7130,"mutability":"mutable","name":"stablecoin","nameLocation":"1333:10:22","nodeType":"VariableDeclaration","scope":7563,"src":"1319:24:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$909","typeString":"contract IERC20"},"typeName":{"id":7129,"nodeType":"UserDefinedTypeName","pathNode":{"id":7128,"name":"IERC20","nameLocations":["1319:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":909,"src":"1319:6:22"},"referencedDeclaration":909,"src":"1319:6:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$909","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"741bef1a","id":7133,"mutability":"mutable","name":"priceFeed","nameLocation":"1428:9:22","nodeType":"VariableDeclaration","scope":7563,"src":"1399:38:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$7899","typeString":"contract AggregatorV3Interface"},"typeName":{"id":7132,"nodeType":"UserDefinedTypeName","pathNode":{"id":7131,"name":"AggregatorV3Interface","nameLocations":["1399:21:22"],"nodeType":"IdentifierPath","referencedDeclaration":7899,"src":"1399:21:22"},"referencedDeclaration":7899,"src":"1399:21:22","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$7899","typeString":"contract AggregatorV3Interface"}},"visibility":"public"},{"anonymous":false,"eventSelector":"aeccbfaf65ad7aba452b41d0c65100e7f22a90b90d0dfb7439da1b3ef280ff06","id":7145,"name":"CallSpreadCreated","nameLocation":"1474:17:22","nodeType":"EventDefinition","parameters":{"id":7144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7135,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1508:7:22","nodeType":"VariableDeclaration","scope":7145,"src":"1492:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7134,"name":"uint256","nodeType":"ElementaryTypeName","src":"1492:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7137,"indexed":false,"mutability":"mutable","name":"seller","nameLocation":"1525:6:22","nodeType":"VariableDeclaration","scope":7145,"src":"1517:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7136,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7139,"indexed":false,"mutability":"mutable","name":"strikePrice1","nameLocation":"1541:12:22","nodeType":"VariableDeclaration","scope":7145,"src":"1533:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1533:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7141,"indexed":false,"mutability":"mutable","name":"strikePrice2","nameLocation":"1563:12:22","nodeType":"VariableDeclaration","scope":7145,"src":"1555:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7140,"name":"uint256","nodeType":"ElementaryTypeName","src":"1555:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7143,"indexed":false,"mutability":"mutable","name":"expiry","nameLocation":"1585:6:22","nodeType":"VariableDeclaration","scope":7145,"src":"1577:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7142,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1491:101:22"},"src":"1468:125:22"},{"anonymous":false,"eventSelector":"6c35fe455375b6647f82e638fc154f286bcc5a02f6ace0290d36aa7ea5aa5413","id":7151,"name":"CallSpreadPurchased","nameLocation":"1604:19:22","nodeType":"EventDefinition","parameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7147,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1640:7:22","nodeType":"VariableDeclaration","scope":7151,"src":"1624:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7149,"indexed":false,"mutability":"mutable","name":"buyer","nameLocation":"1657:5:22","nodeType":"VariableDeclaration","scope":7151,"src":"1649:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7148,"name":"address","nodeType":"ElementaryTypeName","src":"1649:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1623:40:22"},"src":"1598:66:22"},{"anonymous":false,"eventSelector":"b3229cca4d7dce5064bbe840844410c87eb491cb8de1adba5386238aeb50439a","id":7159,"name":"CallSpreadExercised","nameLocation":"1675:19:22","nodeType":"EventDefinition","parameters":{"id":7158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7153,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1711:7:22","nodeType":"VariableDeclaration","scope":7159,"src":"1695:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7152,"name":"uint256","nodeType":"ElementaryTypeName","src":"1695:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7155,"indexed":false,"mutability":"mutable","name":"payoff","nameLocation":"1728:6:22","nodeType":"VariableDeclaration","scope":7159,"src":"1720:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7154,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7157,"indexed":false,"mutability":"mutable","name":"btcPrice","nameLocation":"1744:8:22","nodeType":"VariableDeclaration","scope":7159,"src":"1736:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1736:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1694:59:22"},"src":"1669:85:22"},{"body":{"id":7187,"nodeType":"Block","src":"2086:104:22","statements":[{"expression":{"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7175,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"2096:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$909","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7177,"name":"_stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"2116:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7176,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"2109:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$909_$","typeString":"type(contract IERC20)"}},"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2109:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$909","typeString":"contract IERC20"}},"src":"2096:32:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$909","typeString":"contract IERC20"}},"id":7180,"nodeType":"ExpressionStatement","src":"2096:32:22"},{"expression":{"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7181,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7133,"src":"2138:9:22","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$7899","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7183,"name":"_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"2172:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7182,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"2150:21:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$7899_$","typeString":"type(contract AggregatorV3Interface)"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2150:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$7899","typeString":"contract AggregatorV3Interface"}},"src":"2138:45:22","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$7899","typeString":"contract AggregatorV3Interface"}},"id":7186,"nodeType":"ExpressionStatement","src":"2138:45:22"}]},"documentation":{"id":7160,"nodeType":"StructuredDocumentation","src":"1764:187:22","text":" @dev Constructeur initialisant le contrat\n @param _stablecoin Adresse du contrat du stablecoin\n @param _priceFeed Adresse de l'Oracle Chainlink pour BTC/USD"},"id":7188,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4e46542043616c6c20537072656164","id":7167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2025:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_a31453a6713397b675e73acdf17dc6ec8e27a7d7fb9d027cdf756e372ac62321","typeString":"literal_string \"NFT Call Spread\""},"value":"NFT Call Spread"},{"hexValue":"4e46544353","id":7168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2044:7:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d5631de8281720573bee29a3249e3a6577686e06fe9dd6ced21a90d0b7293c7","typeString":"literal_string \"NFTCS\""},"value":"NFTCS"}],"id":7169,"kind":"baseConstructorSpecifier","modifierName":{"id":7166,"name":"ERC721","nameLocations":["2018:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"2018:6:22"},"nodeType":"ModifierInvocation","src":"2018:34:22"},{"arguments":[{"expression":{"id":7171,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2070:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2074:6:22","memberName":"sender","nodeType":"MemberAccess","src":"2070:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7173,"kind":"baseConstructorSpecifier","modifierName":{"id":7170,"name":"Ownable","nameLocations":["2062:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2062:7:22"},"nodeType":"ModifierInvocation","src":"2062:19:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7162,"mutability":"mutable","name":"_stablecoin","nameLocation":"1976:11:22","nodeType":"VariableDeclaration","scope":7188,"src":"1968:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7161,"name":"address","nodeType":"ElementaryTypeName","src":"1968:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7164,"mutability":"mutable","name":"_priceFeed","nameLocation":"1997:10:22","nodeType":"VariableDeclaration","scope":7188,"src":"1989:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7163,"name":"address","nodeType":"ElementaryTypeName","src":"1989:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1967:41:22"},"returnParameters":{"id":7174,"nodeType":"ParameterList","parameters":[],"src":"2086:0:22"},"scope":7563,"src":"1956:234:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7285,"nodeType":"Block","src":"2744:1137:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7205,"name":"strikePrice1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"2762:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7206,"name":"strikePrice2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"2777:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2762:27:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696b653120646f6974206574726520696e66657269657572206120537472696b6532","id":7208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2791:39:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616","typeString":"literal_string \"Strike1 doit etre inferieur a Strike2\""},"value":"Strike1 doit etre inferieur a Strike2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616","typeString":"literal_string \"Strike1 doit etre inferieur a Strike2\""}],"id":7204,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2754:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2754:77:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7210,"nodeType":"ExpressionStatement","src":"2754:77:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7212,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"2849:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7213,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2858:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"2858:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2849:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c2765787069726174696f6e20646f697420657472652064616e73206c65206675747572","id":7216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2875:38:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd","typeString":"literal_string \"L'expiration doit etre dans le futur\""},"value":"L'expiration doit etre dans le futur"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd","typeString":"literal_string \"L'expiration doit etre dans le futur\""}],"id":7211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2841:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2841:73:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7218,"nodeType":"ExpressionStatement","src":"2841:73:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7220,"name":"collateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"2932:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2951:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2932:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6520636f6c6c61746572616c20646f6974206574726520706f7369746966","id":7223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2954:33:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc","typeString":"literal_string \"Le collateral doit etre positif\""},"value":"Le collateral doit etre positif"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc","typeString":"literal_string \"Le collateral doit etre positif\""}],"id":7219,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2924:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:64:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7225,"nodeType":"ExpressionStatement","src":"2924:64:22"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":7229,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3099:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3103:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3099:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7233,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3119:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_NFTCallSpread_$7563","typeString":"contract NFTCallSpread"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NFTCallSpread_$7563","typeString":"contract NFTCallSpread"}],"id":7232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3111:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7231,"name":"address","nodeType":"ElementaryTypeName","src":"3111:7:22","typeDescriptions":{}}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3111:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7235,"name":"collateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"3126:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7227,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"3075:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$909","typeString":"contract IERC20"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3086:12:22","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":908,"src":"3075:23:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:68:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e736665727420646520636f6c6c61746572616c206563686f7565","id":7237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3145:32:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f","typeString":"literal_string \"Transfert de collateral echoue\""},"value":"Transfert de collateral echoue"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f","typeString":"literal_string \"Transfert de collateral echoue\""}],"id":7226,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3067:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3067:111:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7239,"nodeType":"ExpressionStatement","src":"3067:111:22"},{"assignments":[7241],"declarations":[{"constant":false,"id":7241,"mutability":"mutable","name":"tokenId","nameLocation":"3252:7:22","nodeType":"VariableDeclaration","scope":7285,"src":"3244:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7240,"name":"uint256","nodeType":"ElementaryTypeName","src":"3244:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7244,"initialValue":{"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3262:14:22","subExpression":{"id":7242,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"3262:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3244:32:22"},{"expression":{"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7245,"name":"callSpreads","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"3328:11:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CallSpread_$7120_storage_$","typeString":"mapping(uint256 => struct NFTCallSpread.CallSpread storage ref)"}},"id":7247,"indexExpression":{"id":7246,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"3340:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3328:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage","typeString":"struct NFTCallSpread.CallSpread storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7249,"name":"strikePrice1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"3390:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7250,"name":"strikePrice2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"3430:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7251,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"3464:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7252,"name":"collateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"3496:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7253,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3534:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3538:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3534:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":7257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3573:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3565:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7255,"name":"address","nodeType":"ElementaryTypeName","src":"3565:7:22","typeDescriptions":{}}},"id":7258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":7259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3600:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7248,"name":"CallSpread","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"3351:10:22","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_CallSpread_$7120_storage_ptr_$","typeString":"type(struct NFTCallSpread.CallSpread storage pointer)"}},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3376:12:22","3416:12:22","3456:6:22","3484:10:22","3526:6:22","3558:5:22","3589:9:22"],"names":["strikePrice1","strikePrice2","expiry","collateral","seller","buyer","exercised"],"nodeType":"FunctionCall","src":"3351:265:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_memory_ptr","typeString":"struct NFTCallSpread.CallSpread memory"}},"src":"3328:288:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage","typeString":"struct NFTCallSpread.CallSpread storage ref"}},"id":7262,"nodeType":"ExpressionStatement","src":"3328:288:22"},{"expression":{"arguments":[{"expression":{"id":7264,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3681:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3685:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3681:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7266,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"3693:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7263,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1570,1600],"referencedDeclaration":1570,"src":"3671:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3671:30:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7268,"nodeType":"ExpressionStatement","src":"3671:30:22"},{"expression":{"arguments":[{"id":7270,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"3724:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7271,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"3733:9:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7269,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"3711:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7273,"nodeType":"ExpressionStatement","src":"3711:32:22"},{"eventCall":{"arguments":[{"id":7275,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"3785:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7276,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3794:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3798:6:22","memberName":"sender","nodeType":"MemberAccess","src":"3794:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7278,"name":"strikePrice1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"3806:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7279,"name":"strikePrice2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"3820:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7280,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"3834:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7274,"name":"CallSpreadCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"3767:17:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256,uint256)"}},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3767:74:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7282,"nodeType":"EmitStatement","src":"3762:79:22"},{"expression":{"id":7283,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"3867:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7203,"id":7284,"nodeType":"Return","src":"3860:14:22"}]},"documentation":{"id":7189,"nodeType":"StructuredDocumentation","src":"2200:329:22","text":" @dev Créer un nouveau call spread\n @param strikePrice1 Prix d'exercice inférieur\n @param strikePrice2 Prix d'exercice supérieur\n @param expiry Timestamp d'expiration\n @param collateralAmount Montant de collatéral à déposer\n @param _tokenURI URI des métadonnées pour le NFT"},"functionSelector":"143e602c","id":7286,"implemented":true,"kind":"function","modifiers":[],"name":"createCallSpread","nameLocation":"2543:16:22","nodeType":"FunctionDefinition","parameters":{"id":7200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7191,"mutability":"mutable","name":"strikePrice1","nameLocation":"2577:12:22","nodeType":"VariableDeclaration","scope":7286,"src":"2569:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2569:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7193,"mutability":"mutable","name":"strikePrice2","nameLocation":"2607:12:22","nodeType":"VariableDeclaration","scope":7286,"src":"2599:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2599:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7195,"mutability":"mutable","name":"expiry","nameLocation":"2637:6:22","nodeType":"VariableDeclaration","scope":7286,"src":"2629:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2629:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7197,"mutability":"mutable","name":"collateralAmount","nameLocation":"2661:16:22","nodeType":"VariableDeclaration","scope":7286,"src":"2653:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7196,"name":"uint256","nodeType":"ElementaryTypeName","src":"2653:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7199,"mutability":"mutable","name":"_tokenURI","nameLocation":"2701:9:22","nodeType":"VariableDeclaration","scope":7286,"src":"2687:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7198,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2559:157:22"},"returnParameters":{"id":7203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7286,"src":"2735:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7201,"name":"uint256","nodeType":"ElementaryTypeName","src":"2735:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2734:9:22"},"scope":7563,"src":"2534:1347:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7355,"nodeType":"Block","src":"4060:587:22","statements":[{"assignments":[7294],"declarations":[{"constant":false,"id":7294,"mutability":"mutable","name":"cs","nameLocation":"4089:2:22","nodeType":"VariableDeclaration","scope":7355,"src":"4070:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread"},"typeName":{"id":7293,"nodeType":"UserDefinedTypeName","pathNode":{"id":7292,"name":"CallSpread","nameLocations":["4070:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":7120,"src":"4070:10:22"},"referencedDeclaration":7120,"src":"4070:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread"}},"visibility":"internal"}],"id":7298,"initialValue":{"baseExpression":{"id":7295,"name":"callSpreads","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"4094:11:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CallSpread_$7120_storage_$","typeString":"mapping(uint256 => struct NFTCallSpread.CallSpread storage ref)"}},"id":7297,"indexExpression":{"id":7296,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"4106:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4094:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage","typeString":"struct NFTCallSpread.CallSpread storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4070:44:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7300,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"4132:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4135:6:22","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":7111,"src":"4132:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7302,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4144:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4150:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"4144:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4132:27:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c276f7074696f6e206120657870697265","id":7305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4161:19:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3","typeString":"literal_string \"L'option a expire\""},"value":"L'option a expire"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3","typeString":"literal_string \"L'option a expire\""}],"id":7299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4124:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4124:57:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7307,"nodeType":"ExpressionStatement","src":"4124:57:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7309,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"4199:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4202:5:22","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":7117,"src":"4199:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7311,"name":"address","nodeType":"ElementaryTypeName","src":"4211:7:22","typeDescriptions":{}}},"id":7314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4199:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c276f7074696f6e20612064656a61206574652061636865746565","id":7316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4223:29:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2","typeString":"literal_string \"L'option a deja ete achetee\""},"value":"L'option a deja ete achetee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2","typeString":"literal_string \"L'option a deja ete achetee\""}],"id":7308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4191:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:62:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7318,"nodeType":"ExpressionStatement","src":"4191:62:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7321,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"4279:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7320,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"4271:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7323,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4291:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4295:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4291:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4271:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f7573206e6520706f7576657a20706173206163686574657220766f7472652070726f707265206f7074696f6e","id":7326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4303:48:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac","typeString":"literal_string \"Vous ne pouvez pas acheter votre propre option\""},"value":"Vous ne pouvez pas acheter votre propre option"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac","typeString":"literal_string \"Vous ne pouvez pas acheter votre propre option\""}],"id":7319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4263:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:89:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7328,"nodeType":"ExpressionStatement","src":"4263:89:22"},{"expression":{"id":7334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7329,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"4408:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4411:5:22","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":7117,"src":"4408:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7332,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4419:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4423:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4419:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4408:21:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7335,"nodeType":"ExpressionStatement","src":"4408:21:22"},{"assignments":[7337],"declarations":[{"constant":false,"id":7337,"mutability":"mutable","name":"owner","nameLocation":"4505:5:22","nodeType":"VariableDeclaration","scope":7355,"src":"4497:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7336,"name":"address","nodeType":"ElementaryTypeName","src":"4497:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7341,"initialValue":{"arguments":[{"id":7339,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"4521:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7338,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"4513:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4497:32:22"},{"expression":{"arguments":[{"id":7343,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"4549:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7344,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4556:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4560:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4556:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7346,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"4568:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7342,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"4539:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7348,"nodeType":"ExpressionStatement","src":"4539:37:22"},{"eventCall":{"arguments":[{"id":7350,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"4620:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7351,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4629:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4633:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4629:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7349,"name":"CallSpreadPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"4600:19:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4600:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7354,"nodeType":"EmitStatement","src":"4595:45:22"}]},"documentation":{"id":7287,"nodeType":"StructuredDocumentation","src":"3891:115:22","text":" @dev Acheter un call spread existant\n @param tokenId ID du token du call spread à acheter"},"functionSelector":"9841ac44","id":7356,"implemented":true,"kind":"function","modifiers":[],"name":"buyCallSpread","nameLocation":"4020:13:22","nodeType":"FunctionDefinition","parameters":{"id":7290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7289,"mutability":"mutable","name":"tokenId","nameLocation":"4042:7:22","nodeType":"VariableDeclaration","scope":7356,"src":"4034:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7288,"name":"uint256","nodeType":"ElementaryTypeName","src":"4034:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4033:17:22"},"returnParameters":{"id":7291,"nodeType":"ParameterList","parameters":[],"src":"4060:0:22"},"scope":7563,"src":"4011:636:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7460,"nodeType":"Block","src":"4838:1147:22","statements":[{"assignments":[7364],"declarations":[{"constant":false,"id":7364,"mutability":"mutable","name":"cs","nameLocation":"4867:2:22","nodeType":"VariableDeclaration","scope":7460,"src":"4848:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread"},"typeName":{"id":7363,"nodeType":"UserDefinedTypeName","pathNode":{"id":7362,"name":"CallSpread","nameLocations":["4848:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":7120,"src":"4848:10:22"},"referencedDeclaration":7120,"src":"4848:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread"}},"visibility":"internal"}],"id":7368,"initialValue":{"baseExpression":{"id":7365,"name":"callSpreads","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"4872:11:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CallSpread_$7120_storage_$","typeString":"mapping(uint256 => struct NFTCallSpread.CallSpread storage ref)"}},"id":7367,"indexExpression":{"id":7366,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"4884:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4872:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage","typeString":"struct NFTCallSpread.CallSpread storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4848:44:22"},{"expression":{"arguments":[{"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4910:13:22","subExpression":{"expression":{"id":7370,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"4911:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7371,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4914:9:22","memberName":"exercised","nodeType":"MemberAccess","referencedDeclaration":7119,"src":"4911:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c276f7074696f6e20612064656a61206574652065786572636565","id":7373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4925:29:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0","typeString":"literal_string \"L'option a deja ete exercee\""},"value":"L'option a deja ete exercee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0","typeString":"literal_string \"L'option a deja ete exercee\""}],"id":7369,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4902:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4902:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7375,"nodeType":"ExpressionStatement","src":"4902:53:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7377,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4973:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4979:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"4973:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":7379,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"4992:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4995:6:22","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":7111,"src":"4992:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4973:28:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c276f7074696f6e206e27612070617320656e636f726520657870697265","id":7382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5003:32:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3","typeString":"literal_string \"L'option n'a pas encore expire\""},"value":"L'option n'a pas encore expire"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3","typeString":"literal_string \"L'option n'a pas encore expire\""}],"id":7376,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4965:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4965:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7384,"nodeType":"ExpressionStatement","src":"4965:71:22"},{"expression":{"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7385,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"5088:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5091:9:22","memberName":"exercised","nodeType":"MemberAccess","referencedDeclaration":7119,"src":"5088:12:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5103:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5088:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7390,"nodeType":"ExpressionStatement","src":"5088:19:22"},{"assignments":[7392],"declarations":[{"constant":false,"id":7392,"mutability":"mutable","name":"btcPrice","nameLocation":"5176:8:22","nodeType":"VariableDeclaration","scope":7460,"src":"5168:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7391,"name":"uint256","nodeType":"ElementaryTypeName","src":"5168:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7395,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7393,"name":"getCurrentBTCPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7530,"src":"5187:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5187:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5168:39:22"},{"assignments":[7397],"declarations":[{"constant":false,"id":7397,"mutability":"mutable","name":"payoff","nameLocation":"5264:6:22","nodeType":"VariableDeclaration","scope":7460,"src":"5256:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7396,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7402,"initialValue":{"arguments":[{"id":7399,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"5289:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7400,"name":"btcPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"5298:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7398,"name":"calculatePayoff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"5273:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5273:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5256:51:22"},{"assignments":[7404],"declarations":[{"constant":false,"id":7404,"mutability":"mutable","name":"buyer","nameLocation":"5385:5:22","nodeType":"VariableDeclaration","scope":7460,"src":"5377:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7403,"name":"address","nodeType":"ElementaryTypeName","src":"5377:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7417,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7405,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"5393:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5396:5:22","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":7117,"src":"5393:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5413:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5405:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7407,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:22","typeDescriptions":{}}},"id":7410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5405:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5393:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":7414,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"5429:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5432:6:22","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"5429:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5393:45:22","trueExpression":{"expression":{"id":7412,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"5418:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5421:5:22","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":7117,"src":"5418:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5377:61:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7418,"name":"payoff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"5508:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5517:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5508:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7431,"nodeType":"IfStatement","src":"5504:114:22","trueBody":{"id":7430,"nodeType":"Block","src":"5520:98:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":7424,"name":"buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"5562:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7425,"name":"payoff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"5569:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7422,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"5542:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$909","typeString":"contract IERC20"}},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5553:8:22","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":876,"src":"5542:19:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5542:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657274206465207061796f6666206563686f7565","id":7427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5578:28:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d","typeString":"literal_string \"Transfert de payoff echoue\""},"value":"Transfert de payoff echoue"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d","typeString":"literal_string \"Transfert de payoff echoue\""}],"id":7421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5534:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5534:73:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7429,"nodeType":"ExpressionStatement","src":"5534:73:22"}]}},{"assignments":[7433],"declarations":[{"constant":false,"id":7433,"mutability":"mutable","name":"remainingCollateral","nameLocation":"5699:19:22","nodeType":"VariableDeclaration","scope":7460,"src":"5691:27:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7432,"name":"uint256","nodeType":"ElementaryTypeName","src":"5691:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7438,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7434,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"5721:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5724:10:22","memberName":"collateral","nodeType":"MemberAccess","referencedDeclaration":7113,"src":"5721:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7436,"name":"payoff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"5737:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5721:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5691:52:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7439,"name":"remainingCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"5757:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5779:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5757:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7453,"nodeType":"IfStatement","src":"5753:156:22","trueBody":{"id":7452,"nodeType":"Block","src":"5782:127:22","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":7445,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"5824:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5827:6:22","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"5824:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7447,"name":"remainingCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"5835:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7443,"name":"stablecoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"5804:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$909","typeString":"contract IERC20"}},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5815:8:22","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":876,"src":"5804:19:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5804:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e736665727420646520636f6c6c61746572616c2072657374616e74206563686f7565","id":7449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5857:40:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5","typeString":"literal_string \"Transfert de collateral restant echoue\""},"value":"Transfert de collateral restant echoue"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5","typeString":"literal_string \"Transfert de collateral restant echoue\""}],"id":7442,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5796:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5796:102:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7451,"nodeType":"ExpressionStatement","src":"5796:102:22"}]}},{"eventCall":{"arguments":[{"id":7455,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"5952:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7456,"name":"payoff","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"5961:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7457,"name":"btcPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"5969:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7454,"name":"CallSpreadExercised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"5932:19:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5932:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7459,"nodeType":"EmitStatement","src":"5927:51:22"}]},"documentation":{"id":7357,"nodeType":"StructuredDocumentation","src":"4657:122:22","text":" @dev Exercer un call spread à l'expiration\n @param tokenId ID du token du call spread à exercer"},"functionSelector":"37b371d9","id":7461,"implemented":true,"kind":"function","modifiers":[],"name":"exerciseCallSpread","nameLocation":"4793:18:22","nodeType":"FunctionDefinition","parameters":{"id":7360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7359,"mutability":"mutable","name":"tokenId","nameLocation":"4820:7:22","nodeType":"VariableDeclaration","scope":7461,"src":"4812:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7358,"name":"uint256","nodeType":"ElementaryTypeName","src":"4812:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:17:22"},"returnParameters":{"id":7361,"nodeType":"ParameterList","parameters":[],"src":"4838:0:22"},"scope":7563,"src":"4784:1201:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7504,"nodeType":"Block","src":"6291:559:22","statements":[{"assignments":[7473],"declarations":[{"constant":false,"id":7473,"mutability":"mutable","name":"cs","nameLocation":"6320:2:22","nodeType":"VariableDeclaration","scope":7504,"src":"6301:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread"},"typeName":{"id":7472,"nodeType":"UserDefinedTypeName","pathNode":{"id":7471,"name":"CallSpread","nameLocations":["6301:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":7120,"src":"6301:10:22"},"referencedDeclaration":7120,"src":"6301:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread"}},"visibility":"internal"}],"id":7477,"initialValue":{"baseExpression":{"id":7474,"name":"callSpreads","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"6325:11:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_CallSpread_$7120_storage_$","typeString":"mapping(uint256 => struct NFTCallSpread.CallSpread storage ref)"}},"id":7476,"indexExpression":{"id":7475,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"6337:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6325:20:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage","typeString":"struct NFTCallSpread.CallSpread storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6301:44:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7478,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"6368:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7479,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"6384:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6387:12:22","memberName":"strikePrice1","nodeType":"MemberAccess","referencedDeclaration":7107,"src":"6384:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:31:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7485,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"6508:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":7486,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"6524:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7487,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6527:12:22","memberName":"strikePrice2","nodeType":"MemberAccess","referencedDeclaration":7109,"src":"6524:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6508:31:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7501,"nodeType":"Block","src":"6701:143:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7496,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"6803:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7497,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"6818:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6821:12:22","memberName":"strikePrice1","nodeType":"MemberAccess","referencedDeclaration":7107,"src":"6818:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6803:30:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7470,"id":7500,"nodeType":"Return","src":"6796:37:22"}]},"id":7502,"nodeType":"IfStatement","src":"6504:340:22","trueBody":{"id":7495,"nodeType":"Block","src":"6541:154:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7489,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"6651:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6654:12:22","memberName":"strikePrice2","nodeType":"MemberAccess","referencedDeclaration":7109,"src":"6651:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7491,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"6669:2:22","typeDescriptions":{"typeIdentifier":"t_struct$_CallSpread_$7120_storage_ptr","typeString":"struct NFTCallSpread.CallSpread storage pointer"}},"id":7492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6672:12:22","memberName":"strikePrice1","nodeType":"MemberAccess","referencedDeclaration":7107,"src":"6669:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6651:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7470,"id":7494,"nodeType":"Return","src":"6644:40:22"}]}},"id":7503,"nodeType":"IfStatement","src":"6364:480:22","trueBody":{"id":7484,"nodeType":"Block","src":"6401:97:22","statements":[{"expression":{"hexValue":"30","id":7482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6486:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7470,"id":7483,"nodeType":"Return","src":"6479:8:22"}]}}]},"documentation":{"id":7462,"nodeType":"StructuredDocumentation","src":"5995:197:22","text":" @dev Calculer le payoff pour un call spread\n @param tokenId ID du token du call spread\n @param currentPrice Prix actuel de BTC/USD\n @return Le montant du payoff"},"functionSelector":"34201152","id":7505,"implemented":true,"kind":"function","modifiers":[],"name":"calculatePayoff","nameLocation":"6206:15:22","nodeType":"FunctionDefinition","parameters":{"id":7467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7464,"mutability":"mutable","name":"tokenId","nameLocation":"6230:7:22","nodeType":"VariableDeclaration","scope":7505,"src":"6222:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7463,"name":"uint256","nodeType":"ElementaryTypeName","src":"6222:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7466,"mutability":"mutable","name":"currentPrice","nameLocation":"6247:12:22","nodeType":"VariableDeclaration","scope":7505,"src":"6239:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7465,"name":"uint256","nodeType":"ElementaryTypeName","src":"6239:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6221:39:22"},"returnParameters":{"id":7470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7505,"src":"6282:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7468,"name":"uint256","nodeType":"ElementaryTypeName","src":"6282:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6281:9:22"},"scope":7563,"src":"6197:653:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7529,"nodeType":"Block","src":"7056:149:22","statements":[{"assignments":[null,7512,null,null,null],"declarations":[null,{"constant":false,"id":7512,"mutability":"mutable","name":"price","nameLocation":"7076:5:22","nodeType":"VariableDeclaration","scope":7529,"src":"7069:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7511,"name":"int256","nodeType":"ElementaryTypeName","src":"7069:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":7516,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7513,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7133,"src":"7091:9:22","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$7899","typeString":"contract AggregatorV3Interface"}},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7101:15:22","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":7898,"src":"7091:25:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7091:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"7066:52:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7518,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"7136:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7136:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"507269782042544320696e76616c696465","id":7521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:19:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204","typeString":"literal_string \"Prix BTC invalide\""},"value":"Prix BTC invalide"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204","typeString":"literal_string \"Prix BTC invalide\""}],"id":7517,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7128:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7128:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7523,"nodeType":"ExpressionStatement","src":"7128:39:22"},{"expression":{"arguments":[{"id":7526,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7512,"src":"7192:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7184:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7524,"name":"uint256","nodeType":"ElementaryTypeName","src":"7184:7:22","typeDescriptions":{}}},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7510,"id":7528,"nodeType":"Return","src":"7177:21:22"}]},"documentation":{"id":7506,"nodeType":"StructuredDocumentation","src":"6860:131:22","text":" @dev Obtenir le prix actuel de BTC/USD depuis l'oracle Chainlink\n @return Prix BTC/USD multiplié par 10^8"},"functionSelector":"696c86cd","id":7530,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentBTCPrice","nameLocation":"7005:18:22","nodeType":"FunctionDefinition","parameters":{"id":7507,"nodeType":"ParameterList","parameters":[],"src":"7023:2:22"},"returnParameters":{"id":7510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7530,"src":"7047:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7508,"name":"uint256","nodeType":"ElementaryTypeName","src":"7047:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7046:9:22"},"scope":7563,"src":"6996:209:22","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1131,2133],"body":{"id":7545,"nodeType":"Block","src":"7382:47:22","statements":[{"expression":{"arguments":[{"id":7542,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"7414:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7540,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7399:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NFTCallSpread_$7563_$","typeString":"type(contract super NFTCallSpread)"}},"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7405:8:22","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"7399:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7399:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7539,"id":7544,"nodeType":"Return","src":"7392:30:22"}]},"functionSelector":"c87b56dd","id":7546,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"7285:8:22","nodeType":"FunctionDefinition","overrides":{"id":7536,"nodeType":"OverrideSpecifier","overrides":[{"id":7534,"name":"ERC721","nameLocations":["7332:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"7332:6:22"},{"id":7535,"name":"ERC721URIStorage","nameLocations":["7340:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"7340:16:22"}],"src":"7323:34:22"},"parameters":{"id":7533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7532,"mutability":"mutable","name":"tokenId","nameLocation":"7302:7:22","nodeType":"VariableDeclaration","scope":7546,"src":"7294:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7531,"name":"uint256","nodeType":"ElementaryTypeName","src":"7294:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7293:17:22"},"returnParameters":{"id":7539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7546,"src":"7367:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7537,"name":"string","nodeType":"ElementaryTypeName","src":"7367:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7366:15:22"},"scope":7563,"src":"7276:153:22","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[1036,2076],"body":{"id":7561,"nodeType":"Block","src":"7544:60:22","statements":[{"expression":{"arguments":[{"id":7558,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"7585:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":7556,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7561:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NFTCallSpread_$7563_$","typeString":"type(contract super NFTCallSpread)"}},"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:17:22","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2076,"src":"7561:23:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7561:36:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7555,"id":7560,"nodeType":"Return","src":"7554:43:22"}]},"functionSelector":"01ffc9a7","id":7562,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"7444:17:22","nodeType":"FunctionDefinition","overrides":{"id":7552,"nodeType":"OverrideSpecifier","overrides":[{"id":7550,"name":"ERC721","nameLocations":["7503:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1892,"src":"7503:6:22"},{"id":7551,"name":"ERC721URIStorage","nameLocations":["7511:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"7511:16:22"}],"src":"7494:34:22"},"parameters":{"id":7549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7548,"mutability":"mutable","name":"interfaceId","nameLocation":"7469:11:22","nodeType":"VariableDeclaration","scope":7562,"src":"7462:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7547,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7462:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"7461:20:22"},"returnParameters":{"id":7555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7562,"src":"7538:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7553,"name":"bool","nodeType":"ElementaryTypeName","src":"7538:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7537:6:22"},"scope":7563,"src":"7435:169:22","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":7564,"src":"480:7126:22","usedErrors":[13,18,227,232,241,246,251,258,263,268],"usedEvents":[24,167,174,1908,1917,1926,7145,7151,7159]}],"src":"32:7575:22"},"id":22},"contracts/NFTCallSpreadKeeper.sol":{"ast":{"absolutePath":"contracts/NFTCallSpreadKeeper.sol","exportedSymbols":{"AggregatorV3Interface":[7899],"Context":[2288],"ERC165":[3564],"ERC721":[1892],"ERC721URIStorage":[2153],"ERC721Utils":[2258],"IERC165":[3576],"IERC20":[909],"IERC4906":[175],"IERC721":[2009],"IERC721Errors":[269],"IERC721Metadata":[2181],"KeeperCompatibleInterface":[7918],"NFTCallSpread":[7563],"NFTCallSpreadKeeper":[7853],"Ownable":[147],"Strings":[3540]},"id":7854,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7565,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:23"},{"absolutePath":"contracts/interfaces/KeeperCompatibleInterface.sol","file":"./interfaces/KeeperCompatibleInterface.sol","id":7566,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7854,"sourceUnit":7919,"src":"58:52:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/NFTCallSpread.sol","file":"./NFTCallSpread.sol","id":7567,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7854,"sourceUnit":7564,"src":"111:29:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7569,"name":"KeeperCompatibleInterface","nameLocations":["313:25:23"],"nodeType":"IdentifierPath","referencedDeclaration":7918,"src":"313:25:23"},"id":7570,"nodeType":"InheritanceSpecifier","src":"313:25:23"}],"canonicalName":"NFTCallSpreadKeeper","contractDependencies":[],"contractKind":"contract","documentation":{"id":7568,"nodeType":"StructuredDocumentation","src":"142:138:23","text":" @title NFTCallSpreadKeeper\n @dev Contrat Chainlink Keeper pour exercer automatiquement les call spreads arrivés à maturité"},"fullyImplemented":true,"id":7853,"linearizedBaseContracts":[7853,7918],"name":"NFTCallSpreadKeeper","nameLocation":"290:19:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"bf55dfd4","id":7573,"mutability":"mutable","name":"nftCallSpread","nameLocation":"366:13:23","nodeType":"VariableDeclaration","scope":7853,"src":"345:34:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_NFTCallSpread_$7563","typeString":"contract NFTCallSpread"},"typeName":{"id":7572,"nodeType":"UserDefinedTypeName","pathNode":{"id":7571,"name":"NFTCallSpread","nameLocations":["345:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"345:13:23"},"referencedDeclaration":7563,"src":"345:13:23","typeDescriptions":{"typeIdentifier":"t_contract$_NFTCallSpread_$7563","typeString":"contract NFTCallSpread"}},"visibility":"public"},{"constant":false,"functionSelector":"ef94720d","id":7575,"mutability":"immutable","name":"checkGasLimit","nameLocation":"410:13:23","nodeType":"VariableDeclaration","scope":7853,"src":"385:38:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7574,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"e343dc2d","id":7577,"mutability":"mutable","name":"lastProcessedId","nameLocation":"482:15:23","nodeType":"VariableDeclaration","scope":7853,"src":"467:30:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7576,"name":"uint256","nodeType":"ElementaryTypeName","src":"467:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2913daa0","id":7579,"mutability":"mutable","name":"maxBatchSize","nameLocation":"582:12:23","nodeType":"VariableDeclaration","scope":7853,"src":"567:27:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7578,"name":"uint256","nodeType":"ElementaryTypeName","src":"567:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":7602,"nodeType":"Block","src":"688:140:23","statements":[{"expression":{"id":7592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7588,"name":"nftCallSpread","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"698:13:23","typeDescriptions":{"typeIdentifier":"t_contract$_NFTCallSpread_$7563","typeString":"contract NFTCallSpread"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7590,"name":"_nftCallSpread","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"728:14:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7589,"name":"NFTCallSpread","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7563,"src":"714:13:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_NFTCallSpread_$7563_$","typeString":"type(contract NFTCallSpread)"}},"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"714:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_NFTCallSpread_$7563","typeString":"contract NFTCallSpread"}},"src":"698:45:23","typeDescriptions":{"typeIdentifier":"t_contract$_NFTCallSpread_$7563","typeString":"contract NFTCallSpread"}},"id":7593,"nodeType":"ExpressionStatement","src":"698:45:23"},{"expression":{"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7594,"name":"checkGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"753:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7595,"name":"_checkGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"769:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"753:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7597,"nodeType":"ExpressionStatement","src":"753:30:23"},{"expression":{"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7598,"name":"maxBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"793:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7599,"name":"_maxBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"808:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"793:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7601,"nodeType":"ExpressionStatement","src":"793:28:23"}]},"id":7603,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7581,"mutability":"mutable","name":"_nftCallSpread","nameLocation":"625:14:23","nodeType":"VariableDeclaration","scope":7603,"src":"617:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7580,"name":"address","nodeType":"ElementaryTypeName","src":"617:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7583,"mutability":"mutable","name":"_checkGasLimit","nameLocation":"649:14:23","nodeType":"VariableDeclaration","scope":7603,"src":"641:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7582,"name":"uint256","nodeType":"ElementaryTypeName","src":"641:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7585,"mutability":"mutable","name":"_maxBatchSize","nameLocation":"673:13:23","nodeType":"VariableDeclaration","scope":7603,"src":"665:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7584,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"616:71:23"},"returnParameters":{"id":7587,"nodeType":"ParameterList","parameters":[],"src":"688:0:23"},"scope":7853,"src":"605:223:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[7911],"body":{"id":7742,"nodeType":"Block","src":"1261:1691:23","statements":[{"assignments":[7615],"declarations":[{"constant":false,"id":7615,"mutability":"mutable","name":"currentId","nameLocation":"1279:9:23","nodeType":"VariableDeclaration","scope":7742,"src":"1271:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7617,"initialValue":{"id":7616,"name":"lastProcessedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"1291:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1271:35:23"},{"assignments":[7619],"declarations":[{"constant":false,"id":7619,"mutability":"mutable","name":"batchCount","nameLocation":"1324:10:23","nodeType":"VariableDeclaration","scope":7742,"src":"1316:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7618,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7621,"initialValue":{"hexValue":"30","id":7620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1337:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1316:22:23"},{"assignments":[7626],"declarations":[{"constant":false,"id":7626,"mutability":"mutable","name":"expiredTokenIds","nameLocation":"1365:15:23","nodeType":"VariableDeclaration","scope":7742,"src":"1348:32:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7624,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7625,"nodeType":"ArrayTypeName","src":"1348:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":7632,"initialValue":{"arguments":[{"id":7630,"name":"maxBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"1397:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1383:13:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1387:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7628,"nodeType":"ArrayTypeName","src":"1387:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1383:27:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1348:62:23"},{"body":{"id":7687,"nodeType":"Block","src":"1547:854:23","statements":[{"clauses":[{"block":{"id":7679,"nodeType":"Block","src":"1681:585:23","statements":[{"assignments":[7644,7646,7648,7650,7652,7654,7656],"declarations":[{"constant":false,"id":7644,"mutability":"mutable","name":"strikePrice1","nameLocation":"1801:12:23","nodeType":"VariableDeclaration","scope":7679,"src":"1793:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1793:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7646,"mutability":"mutable","name":"strikePrice2","nameLocation":"1823:12:23","nodeType":"VariableDeclaration","scope":7679,"src":"1815:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7645,"name":"uint256","nodeType":"ElementaryTypeName","src":"1815:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7648,"mutability":"mutable","name":"expiry","nameLocation":"1845:6:23","nodeType":"VariableDeclaration","scope":7679,"src":"1837:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1837:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7650,"mutability":"mutable","name":"collateral","nameLocation":"1861:10:23","nodeType":"VariableDeclaration","scope":7679,"src":"1853:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7649,"name":"uint256","nodeType":"ElementaryTypeName","src":"1853:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7652,"mutability":"mutable","name":"seller","nameLocation":"1881:6:23","nodeType":"VariableDeclaration","scope":7679,"src":"1873:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7651,"name":"address","nodeType":"ElementaryTypeName","src":"1873:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7654,"mutability":"mutable","name":"buyer","nameLocation":"1897:5:23","nodeType":"VariableDeclaration","scope":7679,"src":"1889:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7653,"name":"address","nodeType":"ElementaryTypeName","src":"1889:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7656,"mutability":"mutable","name":"exercised","nameLocation":"1909:9:23","nodeType":"VariableDeclaration","scope":7679,"src":"1904:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7655,"name":"bool","nodeType":"ElementaryTypeName","src":"1904:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7660,"initialValue":{"arguments":[{"id":7658,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"1967:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7657,"name":"getNFTCallSpreadDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7841,"src":"1943:23:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_bool_$","typeString":"function (uint256) view returns (uint256,uint256,uint256,uint256,address,address,bool)"}},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_bool_$","typeString":"tuple(uint256,uint256,uint256,uint256,address,address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"1792:185:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2097:10:23","subExpression":{"id":7661,"name":"exercised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7656,"src":"2098:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7663,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7648,"src":"2111:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7664,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2121:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2127:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"2121:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2111:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2097:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7678,"nodeType":"IfStatement","src":"2093:159:23","trueBody":{"id":7677,"nodeType":"Block","src":"2138:114:23","statements":[{"expression":{"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7668,"name":"expiredTokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"2160:15:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7670,"indexExpression":{"id":7669,"name":"batchCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"2176:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2160:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7671,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"2190:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2160:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7673,"nodeType":"ExpressionStatement","src":"2160:39:23"},{"expression":{"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2221:12:23","subExpression":{"id":7674,"name":"batchCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"2221:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7676,"nodeType":"ExpressionStatement","src":"2221:12:23"}]}}]},"errorName":"","id":7680,"nodeType":"TryCatchClause","parameters":{"id":7642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7680,"src":"1672:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7640,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1671:9:23"},"src":"1663:603:23"},{"block":{"id":7681,"nodeType":"Block","src":"2273:80:23","statements":[]},"errorName":"","id":7682,"nodeType":"TryCatchClause","src":"2267:86:23"}],"externalCall":{"arguments":[{"id":7638,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"1652:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7636,"name":"nftCallSpread","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"1630:13:23","typeDescriptions":{"typeIdentifier":"t_contract$_NFTCallSpread_$7563","typeString":"contract NFTCallSpread"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1644:7:23","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1077,"src":"1630:21:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":7639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1630:32:23","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7683,"nodeType":"TryStatement","src":"1626:727:23"},{"expression":{"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2379:11:23","subExpression":{"id":7684,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"2379:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7686,"nodeType":"ExpressionStatement","src":"2379:11:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7633,"name":"batchCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"1520:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7634,"name":"maxBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"1533:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1520:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7688,"nodeType":"WhileStatement","src":"1513:888:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7689,"name":"batchCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"2491:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2504:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2491:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7740,"nodeType":"Block","src":"2901:45:23","statements":[{"expression":{"id":7738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7736,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"2915:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2930:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2915:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7739,"nodeType":"ExpressionStatement","src":"2915:20:23"}]},"id":7741,"nodeType":"IfStatement","src":"2487:459:23","trueBody":{"id":7735,"nodeType":"Block","src":"2507:388:23","statements":[{"assignments":[7696],"declarations":[{"constant":false,"id":7696,"mutability":"mutable","name":"tokenIdsToExercise","nameLocation":"2594:18:23","nodeType":"VariableDeclaration","scope":7735,"src":"2577:35:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7694,"name":"uint256","nodeType":"ElementaryTypeName","src":"2577:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7695,"nodeType":"ArrayTypeName","src":"2577:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":7702,"initialValue":{"arguments":[{"id":7700,"name":"batchCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"2629:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2615:13:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7697,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7698,"nodeType":"ArrayTypeName","src":"2619:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2615:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2577:63:23"},{"body":{"id":7721,"nodeType":"Block","src":"2695:75:23","statements":[{"expression":{"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7713,"name":"tokenIdsToExercise","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7696,"src":"2713:18:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7715,"indexExpression":{"id":7714,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"2732:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2713:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7716,"name":"expiredTokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"2737:15:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7718,"indexExpression":{"id":7717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"2753:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2737:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2713:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7720,"nodeType":"ExpressionStatement","src":"2713:42:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7707,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"2674:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7708,"name":"batchCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"2678:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2674:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7722,"initializationExpression":{"assignments":[7704],"declarations":[{"constant":false,"id":7704,"mutability":"mutable","name":"i","nameLocation":"2667:1:23","nodeType":"VariableDeclaration","scope":7722,"src":"2659:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7703,"name":"uint256","nodeType":"ElementaryTypeName","src":"2659:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7706,"initialValue":{"hexValue":"30","id":7705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2671:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2659:13:23"},"loopExpression":{"expression":{"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2690:3:23","subExpression":{"id":7710,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"2690:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7712,"nodeType":"ExpressionStatement","src":"2690:3:23"},"nodeType":"ForStatement","src":"2654:116:23"},{"expression":{"id":7729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7723,"name":"performData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7612,"src":"2796:11:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7726,"name":"tokenIdsToExercise","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7696,"src":"2821:18:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":7727,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"2841:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7724,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2810:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2814:6:23","memberName":"encode","nodeType":"MemberAccess","src":"2810:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2796:55:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7730,"nodeType":"ExpressionStatement","src":"2796:55:23"},{"expression":{"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7731,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"2865:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2880:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2865:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7734,"nodeType":"ExpressionStatement","src":"2865:19:23"}]}}]},"documentation":{"id":7604,"nodeType":"StructuredDocumentation","src":"838:252:23","text":" @dev Fonction vérifiée par Chainlink Automation pour déterminer si une exécution est nécessaire\n @return upkeepNeeded Indique si une exécution est nécessaire\n @return performData Données à passer à performUpkeep"},"functionSelector":"6e04ff0d","id":7743,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1104:11:23","nodeType":"FunctionDefinition","overrides":{"id":7608,"nodeType":"OverrideSpecifier","overrides":[],"src":"1186:8:23"},"parameters":{"id":7607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7743,"src":"1116:14:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7605,"name":"bytes","nodeType":"ElementaryTypeName","src":"1116:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1115:32:23"},"returnParameters":{"id":7613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7610,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1217:12:23","nodeType":"VariableDeclaration","scope":7743,"src":"1212:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7609,"name":"bool","nodeType":"ElementaryTypeName","src":"1212:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7612,"mutability":"mutable","name":"performData","nameLocation":"1244:11:23","nodeType":"VariableDeclaration","scope":7743,"src":"1231:24:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7611,"name":"bytes","nodeType":"ElementaryTypeName","src":"1231:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1211:45:23"},"scope":7853,"src":"1095:1857:23","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7917],"body":{"id":7796,"nodeType":"Block","src":"3215:554:23","statements":[{"assignments":[7754,7756],"declarations":[{"constant":false,"id":7754,"mutability":"mutable","name":"tokenIdsToExercise","nameLocation":"3243:18:23","nodeType":"VariableDeclaration","scope":7796,"src":"3226:35:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7752,"name":"uint256","nodeType":"ElementaryTypeName","src":"3226:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7753,"nodeType":"ArrayTypeName","src":"3226:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7756,"mutability":"mutable","name":"nextId","nameLocation":"3271:6:23","nodeType":"VariableDeclaration","scope":7796,"src":"3263:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7755,"name":"uint256","nodeType":"ElementaryTypeName","src":"3263:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7767,"initialValue":{"arguments":[{"id":7759,"name":"performData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7746,"src":"3292:11:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"baseExpression":{"id":7761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3306:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7760,"name":"uint256","nodeType":"ElementaryTypeName","src":"3306:7:23","typeDescriptions":{}}},"id":7762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"IndexAccess","src":"3306:9:23","typeDescriptions":{"typeIdentifier":"t_type$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"type(uint256[] memory)"}},{"id":7764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3317:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7763,"name":"uint256","nodeType":"ElementaryTypeName","src":"3317:7:23","typeDescriptions":{}}}],"id":7765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3305:20:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256[] memory),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_tuple$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256[] memory),type(uint256))"}],"expression":{"id":7757,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3281:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3285:6:23","memberName":"decode","nodeType":"MemberAccess","src":"3281:10:23","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":7766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$","typeString":"tuple(uint256[] memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3225:101:23"},{"body":{"id":7790,"nodeType":"Block","src":"3434:238:23","statements":[{"clauses":[{"block":{"id":7785,"nodeType":"Block","src":"3508:63:23","statements":[]},"errorName":"","id":7786,"nodeType":"TryCatchClause","src":"3508:63:23"},{"block":{"id":7787,"nodeType":"Block","src":"3578:84:23","statements":[]},"errorName":"","id":7788,"nodeType":"TryCatchClause","src":"3572:90:23"}],"externalCall":{"arguments":[{"baseExpression":{"id":7781,"name":"tokenIdsToExercise","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7754,"src":"3485:18:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7783,"indexExpression":{"id":7782,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"3504:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3485:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7779,"name":"nftCallSpread","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"3452:13:23","typeDescriptions":{"typeIdentifier":"t_contract$_NFTCallSpread_$7563","typeString":"contract NFTCallSpread"}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3466:18:23","memberName":"exerciseCallSpread","nodeType":"MemberAccess","referencedDeclaration":7461,"src":"3452:32:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3452:55:23","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7789,"nodeType":"TryStatement","src":"3448:214:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7772,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"3398:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7773,"name":"tokenIdsToExercise","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7754,"src":"3402:18:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3421:6:23","memberName":"length","nodeType":"MemberAccess","src":"3402:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3398:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7791,"initializationExpression":{"assignments":[7769],"declarations":[{"constant":false,"id":7769,"mutability":"mutable","name":"i","nameLocation":"3391:1:23","nodeType":"VariableDeclaration","scope":7791,"src":"3383:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7768,"name":"uint256","nodeType":"ElementaryTypeName","src":"3383:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7771,"initialValue":{"hexValue":"30","id":7770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3395:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3383:13:23"},"loopExpression":{"expression":{"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3429:3:23","subExpression":{"id":7776,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"3429:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7778,"nodeType":"ExpressionStatement","src":"3429:3:23"},"nodeType":"ForStatement","src":"3378:294:23"},{"expression":{"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7792,"name":"lastProcessedId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"3738:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7793,"name":"nextId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7756,"src":"3756:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3738:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7795,"nodeType":"ExpressionStatement","src":"3738:24:23"}]},"documentation":{"id":7744,"nodeType":"StructuredDocumentation","src":"2962:179:23","text":" @dev Fonction exécutée par Chainlink Automation lorsque checkUpkeep indique que c'est nécessaire\n @param performData Données encodées par checkUpkeep"},"functionSelector":"4585e33b","id":7797,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"3155:13:23","nodeType":"FunctionDefinition","overrides":{"id":7748,"nodeType":"OverrideSpecifier","overrides":[],"src":"3206:8:23"},"parameters":{"id":7747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7746,"mutability":"mutable","name":"performData","nameLocation":"3184:11:23","nodeType":"VariableDeclaration","scope":7797,"src":"3169:26:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7745,"name":"bytes","nodeType":"ElementaryTypeName","src":"3169:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3168:28:23"},"returnParameters":{"id":7749,"nodeType":"ParameterList","parameters":[],"src":"3215:0:23"},"scope":7853,"src":"3146:623:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7840,"nodeType":"Block","src":"4489:262:23","statements":[{"expression":{"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7817,"name":"strikePrice1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"4543:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7818,"name":"strikePrice2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"4557:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7819,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"4571:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7820,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7809,"src":"4579:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7821,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"4591:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7822,"name":"buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"4599:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7823,"name":"exercised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"4606:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7824,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4542:74:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_bool_$","typeString":"tuple(uint256,uint256,uint256,uint256,address,address,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7827,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"4645:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7825,"name":"nftCallSpread","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"4619:13:23","typeDescriptions":{"typeIdentifier":"t_contract$_NFTCallSpread_$7563","typeString":"contract NFTCallSpread"}},"id":7826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4633:11:23","memberName":"callSpreads","nodeType":"MemberAccess","referencedDeclaration":7127,"src":"4619:25:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_bool_$","typeString":"function (uint256) view external returns (uint256,uint256,uint256,uint256,address,address,bool)"}},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4619:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_bool_$","typeString":"tuple(uint256,uint256,uint256,uint256,address,address,bool)"}},"src":"4542:111:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7830,"nodeType":"ExpressionStatement","src":"4542:111:23"},{"expression":{"components":[{"id":7831,"name":"strikePrice1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"4671:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7832,"name":"strikePrice2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"4685:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7833,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7807,"src":"4699:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7834,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7809,"src":"4707:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7835,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"4719:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7836,"name":"buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"4727:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7837,"name":"exercised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"4734:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4670:74:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_bool_$","typeString":"tuple(uint256,uint256,uint256,uint256,address,address,bool)"}},"functionReturnParameters":7816,"id":7839,"nodeType":"Return","src":"4663:81:23"}]},"documentation":{"id":7798,"nodeType":"StructuredDocumentation","src":"3779:443:23","text":" @dev Récupère les détails d'un call spread\n @param tokenId ID du token\n @return strikePrice1 Prix d'exercice inférieur\n @return strikePrice2 Prix d'exercice supérieur\n @return expiry Date d'expiration\n @return collateral Montant du collatéral\n @return seller Adresse du vendeur\n @return buyer Adresse de l'acheteur\n @return exercised Indique si l'option a été exercée"},"id":7841,"implemented":true,"kind":"function","modifiers":[],"name":"getNFTCallSpreadDetails","nameLocation":"4236:23:23","nodeType":"FunctionDefinition","parameters":{"id":7801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7800,"mutability":"mutable","name":"tokenId","nameLocation":"4268:7:23","nodeType":"VariableDeclaration","scope":7841,"src":"4260:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7799,"name":"uint256","nodeType":"ElementaryTypeName","src":"4260:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4259:17:23"},"returnParameters":{"id":7816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7803,"mutability":"mutable","name":"strikePrice1","nameLocation":"4317:12:23","nodeType":"VariableDeclaration","scope":7841,"src":"4309:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7802,"name":"uint256","nodeType":"ElementaryTypeName","src":"4309:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7805,"mutability":"mutable","name":"strikePrice2","nameLocation":"4347:12:23","nodeType":"VariableDeclaration","scope":7841,"src":"4339:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7804,"name":"uint256","nodeType":"ElementaryTypeName","src":"4339:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7807,"mutability":"mutable","name":"expiry","nameLocation":"4377:6:23","nodeType":"VariableDeclaration","scope":7841,"src":"4369:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7806,"name":"uint256","nodeType":"ElementaryTypeName","src":"4369:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7809,"mutability":"mutable","name":"collateral","nameLocation":"4401:10:23","nodeType":"VariableDeclaration","scope":7841,"src":"4393:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7808,"name":"uint256","nodeType":"ElementaryTypeName","src":"4393:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7811,"mutability":"mutable","name":"seller","nameLocation":"4429:6:23","nodeType":"VariableDeclaration","scope":7841,"src":"4421:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7810,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7813,"mutability":"mutable","name":"buyer","nameLocation":"4453:5:23","nodeType":"VariableDeclaration","scope":7841,"src":"4445:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7812,"name":"address","nodeType":"ElementaryTypeName","src":"4445:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7815,"mutability":"mutable","name":"exercised","nameLocation":"4473:9:23","nodeType":"VariableDeclaration","scope":7841,"src":"4468:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7814,"name":"bool","nodeType":"ElementaryTypeName","src":"4468:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4299:189:23"},"scope":7853,"src":"4227:524:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7851,"nodeType":"Block","src":"4990:146:23","statements":[{"expression":{"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7847,"name":"maxBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7579,"src":"5101:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7848,"name":"_maxBatchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7844,"src":"5116:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5101:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7850,"nodeType":"ExpressionStatement","src":"5101:28:23"}]},"documentation":{"id":7842,"nodeType":"StructuredDocumentation","src":"4761:167:23","text":" @dev Fonction pour mettre à jour le nombre maximal d'options à exercer par transaction\n @param _maxBatchSize Nouvelle taille de lot maximale"},"functionSelector":"2b26a6bf","id":7852,"implemented":true,"kind":"function","modifiers":[],"name":"setMaxBatchSize","nameLocation":"4942:15:23","nodeType":"FunctionDefinition","parameters":{"id":7845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7844,"mutability":"mutable","name":"_maxBatchSize","nameLocation":"4966:13:23","nodeType":"VariableDeclaration","scope":7852,"src":"4958:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7843,"name":"uint256","nodeType":"ElementaryTypeName","src":"4958:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4957:23:23"},"returnParameters":{"id":7846,"nodeType":"ParameterList","parameters":[],"src":"4990:0:23"},"scope":7853,"src":"4933:203:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7854,"src":"281:4857:23","usedErrors":[],"usedEvents":[]}],"src":"32:5107:23"},"id":23},"contracts/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"contracts/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[7899]},"id":7900,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7855,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7899,"linearizedBaseContracts":[7899],"name":"AggregatorV3Interface","nameLocation":"68:21:24","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":7860,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"103:8:24","nodeType":"FunctionDefinition","parameters":{"id":7856,"nodeType":"ParameterList","parameters":[],"src":"111:2:24"},"returnParameters":{"id":7859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7860,"src":"137:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7857,"name":"uint8","nodeType":"ElementaryTypeName","src":"137:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"136:7:24"},"scope":7899,"src":"94:50:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":7865,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:24","nodeType":"FunctionDefinition","parameters":{"id":7861,"nodeType":"ParameterList","parameters":[],"src":"167:2:24"},"returnParameters":{"id":7864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7865,"src":"193:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7862,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:24"},"scope":7899,"src":"147:61:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":7870,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"220:7:24","nodeType":"FunctionDefinition","parameters":{"id":7866,"nodeType":"ParameterList","parameters":[],"src":"227:2:24"},"returnParameters":{"id":7869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7870,"src":"253:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7867,"name":"uint256","nodeType":"ElementaryTypeName","src":"253:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"252:9:24"},"scope":7899,"src":"211:51:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":7885,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"275:12:24","nodeType":"FunctionDefinition","parameters":{"id":7873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7872,"mutability":"mutable","name":"_roundId","nameLocation":"295:8:24","nodeType":"VariableDeclaration","scope":7885,"src":"288:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7871,"name":"uint80","nodeType":"ElementaryTypeName","src":"288:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"287:17:24"},"returnParameters":{"id":7884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7875,"mutability":"mutable","name":"roundId","nameLocation":"354:7:24","nodeType":"VariableDeclaration","scope":7885,"src":"347:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7874,"name":"uint80","nodeType":"ElementaryTypeName","src":"347:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":7877,"mutability":"mutable","name":"answer","nameLocation":"376:6:24","nodeType":"VariableDeclaration","scope":7885,"src":"369:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7876,"name":"int256","nodeType":"ElementaryTypeName","src":"369:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7879,"mutability":"mutable","name":"startedAt","nameLocation":"398:9:24","nodeType":"VariableDeclaration","scope":7885,"src":"390:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7878,"name":"uint256","nodeType":"ElementaryTypeName","src":"390:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7881,"mutability":"mutable","name":"updatedAt","nameLocation":"423:9:24","nodeType":"VariableDeclaration","scope":7885,"src":"415:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7880,"name":"uint256","nodeType":"ElementaryTypeName","src":"415:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7883,"mutability":"mutable","name":"answeredInRound","nameLocation":"447:15:24","nodeType":"VariableDeclaration","scope":7885,"src":"440:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7882,"name":"uint80","nodeType":"ElementaryTypeName","src":"440:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"339:129:24"},"scope":7899,"src":"266:203:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":7898,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"482:15:24","nodeType":"FunctionDefinition","parameters":{"id":7886,"nodeType":"ParameterList","parameters":[],"src":"497:2:24"},"returnParameters":{"id":7897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7888,"mutability":"mutable","name":"roundId","nameLocation":"549:7:24","nodeType":"VariableDeclaration","scope":7898,"src":"542:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7887,"name":"uint80","nodeType":"ElementaryTypeName","src":"542:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":7890,"mutability":"mutable","name":"answer","nameLocation":"571:6:24","nodeType":"VariableDeclaration","scope":7898,"src":"564:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7889,"name":"int256","nodeType":"ElementaryTypeName","src":"564:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7892,"mutability":"mutable","name":"startedAt","nameLocation":"593:9:24","nodeType":"VariableDeclaration","scope":7898,"src":"585:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7891,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7894,"mutability":"mutable","name":"updatedAt","nameLocation":"618:9:24","nodeType":"VariableDeclaration","scope":7898,"src":"610:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7893,"name":"uint256","nodeType":"ElementaryTypeName","src":"610:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7896,"mutability":"mutable","name":"answeredInRound","nameLocation":"642:15:24","nodeType":"VariableDeclaration","scope":7898,"src":"635:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7895,"name":"uint80","nodeType":"ElementaryTypeName","src":"635:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"534:129:24"},"scope":7899,"src":"473:191:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7900,"src":"58:608:24","usedErrors":[],"usedEvents":[]}],"src":"32:635:24"},"id":24},"contracts/interfaces/KeeperCompatibleInterface.sol":{"ast":{"absolutePath":"contracts/interfaces/KeeperCompatibleInterface.sol","exportedSymbols":{"KeeperCompatibleInterface":[7918]},"id":7919,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7901,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"KeeperCompatibleInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7918,"linearizedBaseContracts":[7918],"name":"KeeperCompatibleInterface","nameLocation":"68:25:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7902,"nodeType":"StructuredDocumentation","src":"98:338:25","text":" @notice méthode qui est simulée par le keeper pour vérifier si l'upkeep est nécessaire\n @param checkData données passées à la fonction checkUpkeep pour indiquer le type d'upkeep requis\n @return upkeepNeeded boolean indiquant si l'upkeep est nécessaire, performData bytes qui seront passées à performUpkeep"},"functionSelector":"6e04ff0d","id":7911,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"448:11:25","nodeType":"FunctionDefinition","parameters":{"id":7905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7904,"mutability":"mutable","name":"checkData","nameLocation":"475:9:25","nodeType":"VariableDeclaration","scope":7911,"src":"460:24:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7903,"name":"bytes","nodeType":"ElementaryTypeName","src":"460:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"459:26:25"},"returnParameters":{"id":7910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7907,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"514:12:25","nodeType":"VariableDeclaration","scope":7911,"src":"509:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7906,"name":"bool","nodeType":"ElementaryTypeName","src":"509:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7909,"mutability":"mutable","name":"performData","nameLocation":"541:11:25","nodeType":"VariableDeclaration","scope":7911,"src":"528:24:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7908,"name":"bytes","nodeType":"ElementaryTypeName","src":"528:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"508:45:25"},"scope":7918,"src":"439:115:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7912,"nodeType":"StructuredDocumentation","src":"558:145:25","text":" @notice méthode qui est appelée par le keeper pour effectuer l'upkeep\n @param performData données passées à performUpkeep"},"functionSelector":"4585e33b","id":7917,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"715:13:25","nodeType":"FunctionDefinition","parameters":{"id":7915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7914,"mutability":"mutable","name":"performData","nameLocation":"744:11:25","nodeType":"VariableDeclaration","scope":7917,"src":"729:26:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7913,"name":"bytes","nodeType":"ElementaryTypeName","src":"729:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"728:28:25"},"returnParameters":{"id":7916,"nodeType":"ParameterList","parameters":[],"src":"765:0:25"},"scope":7918,"src":"706:60:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7919,"src":"58:710:25","usedErrors":[],"usedEvents":[]}],"src":"32:737:25"},"id":25},"contracts/mocks/MockERC20.sol":{"ast":{"absolutePath":"contracts/mocks/MockERC20.sol","exportedSymbols":{"Context":[2288],"ERC20":[831],"IERC20":[909],"IERC20Errors":[221],"IERC20Metadata":[935],"MockERC20":[7951]},"id":7952,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7920,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:26"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7921,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7952,"sourceUnit":832,"src":"58:55:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7923,"name":"ERC20","nameLocations":["215:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"215:5:26"},"id":7924,"nodeType":"InheritanceSpecifier","src":"215:5:26"}],"canonicalName":"MockERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":7922,"nodeType":"StructuredDocumentation","src":"115:77:26","text":" @title MockERC20\n @dev Contrat de stablecoin mock pour les tests"},"fullyImplemented":true,"id":7951,"linearizedBaseContracts":[7951,831,221,935,909,2288],"name":"MockERC20","nameLocation":"202:9:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":7935,"nodeType":"Block","src":"301:2:26","statements":[]},"id":7936,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7931,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"287:4:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7932,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7928,"src":"293:6:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7933,"kind":"baseConstructorSpecifier","modifierName":{"id":7930,"name":"ERC20","nameLocations":["281:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"281:5:26"},"nodeType":"ModifierInvocation","src":"281:19:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7926,"mutability":"mutable","name":"name","nameLocation":"253:4:26","nodeType":"VariableDeclaration","scope":7936,"src":"239:18:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7925,"name":"string","nodeType":"ElementaryTypeName","src":"239:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7928,"mutability":"mutable","name":"symbol","nameLocation":"273:6:26","nodeType":"VariableDeclaration","scope":7936,"src":"259:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7927,"name":"string","nodeType":"ElementaryTypeName","src":"259:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"238:42:26"},"returnParameters":{"id":7934,"nodeType":"ParameterList","parameters":[],"src":"301:0:26"},"scope":7951,"src":"227:76:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7949,"nodeType":"Block","src":"518:39:26","statements":[{"expression":{"arguments":[{"id":7945,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7939,"src":"534:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7946,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"543:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7944,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"528:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"528:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7948,"nodeType":"ExpressionStatement","src":"528:22:26"}]},"documentation":{"id":7937,"nodeType":"StructuredDocumentation","src":"309:148:26","text":" @dev Fonction pour créer des jetons de test\n @param account Adresse du destinataire\n @param amount Montant à créer"},"functionSelector":"40c10f19","id":7950,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"471:4:26","nodeType":"FunctionDefinition","parameters":{"id":7942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7939,"mutability":"mutable","name":"account","nameLocation":"484:7:26","nodeType":"VariableDeclaration","scope":7950,"src":"476:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7938,"name":"address","nodeType":"ElementaryTypeName","src":"476:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7941,"mutability":"mutable","name":"amount","nameLocation":"501:6:26","nodeType":"VariableDeclaration","scope":7950,"src":"493:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7940,"name":"uint256","nodeType":"ElementaryTypeName","src":"493:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"475:33:26"},"returnParameters":{"id":7943,"nodeType":"ParameterList","parameters":[],"src":"518:0:26"},"scope":7951,"src":"462:95:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7952,"src":"193:366:26","usedErrors":[191,196,201,210,215,220],"usedEvents":[843,852]}],"src":"32:528:26"},"id":26},"contracts/mocks/MockV3Aggregator.sol":{"ast":{"absolutePath":"contracts/mocks/MockV3Aggregator.sol","exportedSymbols":{"MockV3Aggregator":[8129]},"id":8130,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7953,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"MockV3Aggregator","contractDependencies":[],"contractKind":"contract","documentation":{"id":7954,"nodeType":"StructuredDocumentation","src":"58:102:27","text":" @title MockV3Aggregator\n @dev Contrat mock pour simuler l'oracle Chainlink dans les tests"},"fullyImplemented":true,"id":8129,"linearizedBaseContracts":[8129],"name":"MockV3Aggregator","nameLocation":"170:16:27","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"313ce567","id":7956,"mutability":"mutable","name":"decimals","nameLocation":"206:8:27","nodeType":"VariableDeclaration","scope":8129,"src":"193:21:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7955,"name":"uint8","nodeType":"ElementaryTypeName","src":"193:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"50d25bcd","id":7958,"mutability":"mutable","name":"latestAnswer","nameLocation":"234:12:27","nodeType":"VariableDeclaration","scope":8129,"src":"220:26:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7957,"name":"int256","nodeType":"ElementaryTypeName","src":"220:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"public"},{"constant":false,"functionSelector":"8205bf6a","id":7960,"mutability":"mutable","name":"latestTimestamp","nameLocation":"267:15:27","nodeType":"VariableDeclaration","scope":8129,"src":"252:30:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7959,"name":"uint256","nodeType":"ElementaryTypeName","src":"252:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"668a0f02","id":7962,"mutability":"mutable","name":"latestRound","nameLocation":"303:11:27","nodeType":"VariableDeclaration","scope":8129,"src":"288:26:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7961,"name":"uint256","nodeType":"ElementaryTypeName","src":"288:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b5ab58dc","id":7966,"mutability":"mutable","name":"getAnswer","nameLocation":"355:9:27","nodeType":"VariableDeclaration","scope":8129,"src":"321:43:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"},"typeName":{"id":7965,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7963,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"321:26:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7964,"name":"int256","nodeType":"ElementaryTypeName","src":"340:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}},"visibility":"public"},{"constant":false,"functionSelector":"b633620c","id":7970,"mutability":"mutable","name":"getTimestamp","nameLocation":"405:12:27","nodeType":"VariableDeclaration","scope":8129,"src":"370:47:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":7969,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7967,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"370:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7968,"name":"uint256","nodeType":"ElementaryTypeName","src":"389:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":7974,"mutability":"mutable","name":"getStartedAt","nameLocation":"459:12:27","nodeType":"VariableDeclaration","scope":8129,"src":"423:48:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":7973,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7971,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"423:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7972,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":7989,"nodeType":"Block","src":"530:75:27","statements":[{"expression":{"id":7983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7981,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7956,"src":"540:8:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7982,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7976,"src":"551:9:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"540:20:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7984,"nodeType":"ExpressionStatement","src":"540:20:27"},{"expression":{"arguments":[{"id":7986,"name":"_initialAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7978,"src":"583:14:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7985,"name":"updateAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8028,"src":"570:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_int256_$returns$__$","typeString":"function (int256)"}},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"570:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7988,"nodeType":"ExpressionStatement","src":"570:28:27"}]},"id":7990,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7976,"mutability":"mutable","name":"_decimals","nameLocation":"496:9:27","nodeType":"VariableDeclaration","scope":7990,"src":"490:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7975,"name":"uint8","nodeType":"ElementaryTypeName","src":"490:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7978,"mutability":"mutable","name":"_initialAnswer","nameLocation":"514:14:27","nodeType":"VariableDeclaration","scope":7990,"src":"507:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7977,"name":"int256","nodeType":"ElementaryTypeName","src":"507:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"489:40:27"},"returnParameters":{"id":7980,"nodeType":"ParameterList","parameters":[],"src":"530:0:27"},"scope":8129,"src":"478:127:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8027,"nodeType":"Block","src":"656:253:27","statements":[{"expression":{"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7995,"name":"latestAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"666:12:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7996,"name":"_answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"681:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"666:22:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":7998,"nodeType":"ExpressionStatement","src":"666:22:27"},{"expression":{"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7999,"name":"latestTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"698:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8000,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"716:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"722:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"716:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"698:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8003,"nodeType":"ExpressionStatement","src":"698:33:27"},{"expression":{"id":8005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"741:13:27","subExpression":{"id":8004,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"741:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8006,"nodeType":"ExpressionStatement","src":"741:13:27"},{"expression":{"id":8011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8007,"name":"getAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7966,"src":"764:9:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":8009,"indexExpression":{"id":8008,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"774:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"764:22:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8010,"name":"_answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"789:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"764:32:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":8012,"nodeType":"ExpressionStatement","src":"764:32:27"},{"expression":{"id":8018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8013,"name":"getTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7970,"src":"806:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8015,"indexExpression":{"id":8014,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"819:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"806:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8016,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"834:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"840:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"834:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"806:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8019,"nodeType":"ExpressionStatement","src":"806:43:27"},{"expression":{"id":8025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8020,"name":"getStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"859:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8022,"indexExpression":{"id":8021,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"872:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"859:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8023,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"887:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"893:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"887:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"859:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8026,"nodeType":"ExpressionStatement","src":"859:43:27"}]},"functionSelector":"a87a20ce","id":8028,"implemented":true,"kind":"function","modifiers":[],"name":"updateAnswer","nameLocation":"620:12:27","nodeType":"FunctionDefinition","parameters":{"id":7993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7992,"mutability":"mutable","name":"_answer","nameLocation":"640:7:27","nodeType":"VariableDeclaration","scope":8028,"src":"633:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7991,"name":"int256","nodeType":"ElementaryTypeName","src":"633:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"632:16:27"},"returnParameters":{"id":7994,"nodeType":"ParameterList","parameters":[],"src":"656:0:27"},"scope":8129,"src":"611:298:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8069,"nodeType":"Block","src":"1058:247:27","statements":[{"expression":{"id":8041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8039,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"1068:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8040,"name":"_roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8030,"src":"1082:8:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"1068:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8042,"nodeType":"ExpressionStatement","src":"1068:22:27"},{"expression":{"id":8045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8043,"name":"latestAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"1100:12:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8044,"name":"_answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8032,"src":"1115:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1100:22:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":8046,"nodeType":"ExpressionStatement","src":"1100:22:27"},{"expression":{"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8047,"name":"latestTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"1132:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8048,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8034,"src":"1150:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1132:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8050,"nodeType":"ExpressionStatement","src":"1132:28:27"},{"expression":{"id":8055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8051,"name":"getAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7966,"src":"1170:9:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":8053,"indexExpression":{"id":8052,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"1180:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1170:22:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8054,"name":"_answer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8032,"src":"1195:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1170:32:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":8056,"nodeType":"ExpressionStatement","src":"1170:32:27"},{"expression":{"id":8061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8057,"name":"getTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7970,"src":"1212:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8059,"indexExpression":{"id":8058,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"1225:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1212:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8060,"name":"_timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8034,"src":"1240:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1212:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8062,"nodeType":"ExpressionStatement","src":"1212:38:27"},{"expression":{"id":8067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8063,"name":"getStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"1260:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8065,"indexExpression":{"id":8064,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"1273:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1260:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8066,"name":"_startedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8036,"src":"1288:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8068,"nodeType":"ExpressionStatement","src":"1260:38:27"}]},"functionSelector":"4aa2011f","id":8070,"implemented":true,"kind":"function","modifiers":[],"name":"updateRoundData","nameLocation":"924:15:27","nodeType":"FunctionDefinition","parameters":{"id":8037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8030,"mutability":"mutable","name":"_roundId","nameLocation":"956:8:27","nodeType":"VariableDeclaration","scope":8070,"src":"949:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8029,"name":"uint80","nodeType":"ElementaryTypeName","src":"949:6:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":8032,"mutability":"mutable","name":"_answer","nameLocation":"981:7:27","nodeType":"VariableDeclaration","scope":8070,"src":"974:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8031,"name":"int256","nodeType":"ElementaryTypeName","src":"974:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8034,"mutability":"mutable","name":"_timestamp","nameLocation":"1006:10:27","nodeType":"VariableDeclaration","scope":8070,"src":"998:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8033,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8036,"mutability":"mutable","name":"_startedAt","nameLocation":"1034:10:27","nodeType":"VariableDeclaration","scope":8070,"src":"1026:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1026:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"939:111:27"},"returnParameters":{"id":8038,"nodeType":"ParameterList","parameters":[],"src":"1058:0:27"},"scope":8129,"src":"915:390:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8098,"nodeType":"Block","src":"1564:183:27","statements":[{"expression":{"components":[{"id":8085,"name":"_roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"1595:8:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},{"baseExpression":{"id":8086,"name":"getAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7966,"src":"1617:9:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":8088,"indexExpression":{"id":8087,"name":"_roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"1627:8:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1617:19:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"baseExpression":{"id":8089,"name":"getStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"1650:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8091,"indexExpression":{"id":8090,"name":"_roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"1663:8:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1650:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":8092,"name":"getTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7970,"src":"1686:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8094,"indexExpression":{"id":8093,"name":"_roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"1699:8:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1686:22:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8095,"name":"_roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"1722:8:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}}],"id":8096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1581:159:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"functionReturnParameters":8084,"id":8097,"nodeType":"Return","src":"1574:166:27"}]},"functionSelector":"9a6fc8f5","id":8099,"implemented":true,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"1320:12:27","nodeType":"FunctionDefinition","parameters":{"id":8073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8072,"mutability":"mutable","name":"_roundId","nameLocation":"1340:8:27","nodeType":"VariableDeclaration","scope":8099,"src":"1333:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8071,"name":"uint80","nodeType":"ElementaryTypeName","src":"1333:6:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"1332:17:27"},"returnParameters":{"id":8084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8075,"mutability":"mutable","name":"roundId","nameLocation":"1417:7:27","nodeType":"VariableDeclaration","scope":8099,"src":"1410:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8074,"name":"uint80","nodeType":"ElementaryTypeName","src":"1410:6:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":8077,"mutability":"mutable","name":"answer","nameLocation":"1445:6:27","nodeType":"VariableDeclaration","scope":8099,"src":"1438:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8076,"name":"int256","nodeType":"ElementaryTypeName","src":"1438:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8079,"mutability":"mutable","name":"startedAt","nameLocation":"1473:9:27","nodeType":"VariableDeclaration","scope":8099,"src":"1465:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1465:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8081,"mutability":"mutable","name":"updatedAt","nameLocation":"1504:9:27","nodeType":"VariableDeclaration","scope":8099,"src":"1496:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8080,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8083,"mutability":"mutable","name":"answeredInRound","nameLocation":"1534:15:27","nodeType":"VariableDeclaration","scope":8099,"src":"1527:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8082,"name":"uint80","nodeType":"ElementaryTypeName","src":"1527:6:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"1396:163:27"},"scope":8129,"src":"1311:436:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8127,"nodeType":"Block","src":"1994:194:27","statements":[{"expression":{"components":[{"arguments":[{"id":8114,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"2032:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2025:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8112,"name":"uint80","nodeType":"ElementaryTypeName","src":"2025:6:27","typeDescriptions":{}}},"id":8115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2025:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},{"id":8116,"name":"latestAnswer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7958,"src":"2058:12:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"baseExpression":{"id":8117,"name":"getStartedAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7974,"src":"2084:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8119,"indexExpression":{"id":8118,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"2097:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2084:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8120,"name":"latestTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"2123:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":8123,"name":"latestRound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"2159:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2152:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8121,"name":"uint80","nodeType":"ElementaryTypeName","src":"2152:6:27","typeDescriptions":{}}},"id":8124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}}],"id":8125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2011:170:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"functionReturnParameters":8111,"id":8126,"nodeType":"Return","src":"2004:177:27"}]},"functionSelector":"feaf968c","id":8128,"implemented":true,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"1762:15:27","nodeType":"FunctionDefinition","parameters":{"id":8100,"nodeType":"ParameterList","parameters":[],"src":"1777:2:27"},"returnParameters":{"id":8111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8102,"mutability":"mutable","name":"roundId","nameLocation":"1847:7:27","nodeType":"VariableDeclaration","scope":8128,"src":"1840:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8101,"name":"uint80","nodeType":"ElementaryTypeName","src":"1840:6:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":8104,"mutability":"mutable","name":"answer","nameLocation":"1875:6:27","nodeType":"VariableDeclaration","scope":8128,"src":"1868:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8103,"name":"int256","nodeType":"ElementaryTypeName","src":"1868:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8106,"mutability":"mutable","name":"startedAt","nameLocation":"1903:9:27","nodeType":"VariableDeclaration","scope":8128,"src":"1895:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1895:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8108,"mutability":"mutable","name":"updatedAt","nameLocation":"1934:9:27","nodeType":"VariableDeclaration","scope":8128,"src":"1926:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1926:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8110,"mutability":"mutable","name":"answeredInRound","nameLocation":"1964:15:27","nodeType":"VariableDeclaration","scope":8128,"src":"1957:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8109,"name":"uint80","nodeType":"ElementaryTypeName","src":"1957:6:27","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"1826:163:27"},"scope":8129,"src":"1753:435:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8130,"src":"161:2029:27","usedErrors":[],"usedEvents":[]}],"src":"32:2159:27"},"id":27}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094a564e6a87c47303b64da925a5efccb7f3eb052eeef7b82a5440c296b82d8bd64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xA5 PUSH5 0xE6A87C4730 EXTCODESIZE PUSH5 0xDA925A5EFC 0xCB PUSH32 0x3EB052EEEF7B82A5440C296B82D8BD64736F6C63430008140033000000000000 ","sourceMap":"431:1480:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094a564e6a87c47303b64da925a5efccb7f3eb052eeef7b82a5440c296b82d8bd64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xA5 PUSH5 0xE6A87C4730 EXTCODESIZE PUSH5 0xDA925A5EFC 0xCB PUSH32 0x3EB052EEEF7B82A5440C296B82D8BD64736F6C63430008140033000000000000 ","sourceMap":"431:1480:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324c39d5297afb136187e0a02fa806c282a2d4d9d4ba345dc57f45522daa24fb64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4C CODECOPY 0xD5 0x29 PUSH27 0xFB136187E0A02FA806C282A2D4D9D4BA345DC57F45522DAA24FB64 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"297:16541:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077b13a6b811363169a34dc3026c435f66e1a245ec08d364ff325e78b6f413bd064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xB13A6B811363169A34DC3026C435F66E1A245EC08D364FF3 0x25 0xE7 DUP12 PUSH16 0x413BD064736F6C634300081400330000 ","sourceMap":"281:28026:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/NFTCallSpread.sol":{"NFTCallSpread":{"abi":[{"inputs":[{"internalType":"address","name":"_stablecoin","type":"address"},{"internalType":"address","name":"_priceFeed","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"strikePrice1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"strikePrice2","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"CallSpreadCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"payoff","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"btcPrice","type":"uint256"}],"name":"CallSpreadExercised","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"buyer","type":"address"}],"name":"CallSpreadPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"buyCallSpread","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"currentPrice","type":"uint256"}],"name":"calculatePayoff","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"callSpreads","outputs":[{"internalType":"uint256","name":"strikePrice1","type":"uint256"},{"internalType":"uint256","name":"strikePrice2","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"collateral","type":"uint256"},{"internalType":"address","name":"seller","type":"address"},{"internalType":"address","name":"buyer","type":"address"},{"internalType":"bool","name":"exercised","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"strikePrice1","type":"uint256"},{"internalType":"uint256","name":"strikePrice2","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"collateralAmount","type":"uint256"},{"internalType":"string","name":"_tokenURI","type":"string"}],"name":"createCallSpread","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"exerciseCallSpread","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBTCPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeed","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stablecoin","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1005":{"entryPoint":null,"id":1005,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7188":{"entryPoint":null,"id":7188,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":475,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":756,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":779,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1715,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1732,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1008,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":850,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1329,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":710,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":678,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1144,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1290,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1164,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1484,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1029,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":955,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1454,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1154,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1422,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":908,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":861,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1204,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":673,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1045,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1409,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1262,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1058,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1214,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":730,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1257,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6934:28","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:28","statements":[{"nodeType":"YulAssignment","src":"57:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:28"},"nodeType":"YulFunctionCall","src":"67:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:28"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:28","type":""}],"src":"7:75:28"},{"body":{"nodeType":"YulBlock","src":"177:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:28"},"nodeType":"YulFunctionCall","src":"187:12:28"},"nodeType":"YulExpressionStatement","src":"187:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:28"},{"body":{"nodeType":"YulBlock","src":"300:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:28"},"nodeType":"YulFunctionCall","src":"310:12:28"},"nodeType":"YulExpressionStatement","src":"310:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:28"},{"body":{"nodeType":"YulBlock","src":"379:81:28","statements":[{"nodeType":"YulAssignment","src":"389:65:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:28"},"nodeType":"YulFunctionCall","src":"400:54:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:28"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:28","type":""}],"src":"334:126:28"},{"body":{"nodeType":"YulBlock","src":"511:51:28","statements":[{"nodeType":"YulAssignment","src":"521:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:28"},"nodeType":"YulFunctionCall","src":"532:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:28"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:28","type":""}],"src":"466:96:28"},{"body":{"nodeType":"YulBlock","src":"611:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:28"},"nodeType":"YulFunctionCall","src":"670:12:28"},"nodeType":"YulExpressionStatement","src":"670:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:28"},"nodeType":"YulFunctionCall","src":"641:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:28"},"nodeType":"YulFunctionCall","src":"631:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:28"},"nodeType":"YulFunctionCall","src":"624:43:28"},"nodeType":"YulIf","src":"621:63:28"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:28","type":""}],"src":"568:122:28"},{"body":{"nodeType":"YulBlock","src":"759:80:28","statements":[{"nodeType":"YulAssignment","src":"769:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:28"},"nodeType":"YulFunctionCall","src":"778:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:28"},"nodeType":"YulFunctionCall","src":"800:33:28"},"nodeType":"YulExpressionStatement","src":"800:33:28"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:28","type":""}],"src":"696:143:28"},{"body":{"nodeType":"YulBlock","src":"939:413:28","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:28"},"nodeType":"YulFunctionCall","src":"987:79:28"},"nodeType":"YulExpressionStatement","src":"987:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:28"},"nodeType":"YulFunctionCall","src":"956:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:28"},"nodeType":"YulFunctionCall","src":"952:32:28"},"nodeType":"YulIf","src":"949:119:28"},{"nodeType":"YulBlock","src":"1078:128:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:28","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:28"},"nodeType":"YulFunctionCall","src":"1164:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:28"},"nodeType":"YulFunctionCall","src":"1132:64:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:28"}]}]},{"nodeType":"YulBlock","src":"1216:129:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:28","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:28"},"nodeType":"YulFunctionCall","src":"1303:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:28"},"nodeType":"YulFunctionCall","src":"1271:64:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:28","type":""}],"src":"845:507:28"},{"body":{"nodeType":"YulBlock","src":"1417:40:28","statements":[{"nodeType":"YulAssignment","src":"1428:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1444:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1438:5:28"},"nodeType":"YulFunctionCall","src":"1438:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1428:6:28"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1400:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1410:6:28","type":""}],"src":"1358:99:28"},{"body":{"nodeType":"YulBlock","src":"1491:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1508:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1511:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1501:6:28"},"nodeType":"YulFunctionCall","src":"1501:88:28"},"nodeType":"YulExpressionStatement","src":"1501:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1605:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1608:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1598:6:28"},"nodeType":"YulFunctionCall","src":"1598:15:28"},"nodeType":"YulExpressionStatement","src":"1598:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1629:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1632:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1622:6:28"},"nodeType":"YulFunctionCall","src":"1622:15:28"},"nodeType":"YulExpressionStatement","src":"1622:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1463:180:28"},{"body":{"nodeType":"YulBlock","src":"1677:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1694:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1697:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1687:6:28"},"nodeType":"YulFunctionCall","src":"1687:88:28"},"nodeType":"YulExpressionStatement","src":"1687:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1791:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1794:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1784:6:28"},"nodeType":"YulFunctionCall","src":"1784:15:28"},"nodeType":"YulExpressionStatement","src":"1784:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1815:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1818:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1808:6:28"},"nodeType":"YulFunctionCall","src":"1808:15:28"},"nodeType":"YulExpressionStatement","src":"1808:15:28"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1649:180:28"},{"body":{"nodeType":"YulBlock","src":"1886:269:28","statements":[{"nodeType":"YulAssignment","src":"1896:22:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1910:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"1916:1:28","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1906:3:28"},"nodeType":"YulFunctionCall","src":"1906:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1896:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1927:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1957:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"1963:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1953:3:28"},"nodeType":"YulFunctionCall","src":"1953:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1931:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2004:51:28","statements":[{"nodeType":"YulAssignment","src":"2018:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2032:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2040:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2028:3:28"},"nodeType":"YulFunctionCall","src":"2028:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2018:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1984:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1977:6:28"},"nodeType":"YulFunctionCall","src":"1977:26:28"},"nodeType":"YulIf","src":"1974:81:28"},{"body":{"nodeType":"YulBlock","src":"2107:42:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2121:16:28"},"nodeType":"YulFunctionCall","src":"2121:18:28"},"nodeType":"YulExpressionStatement","src":"2121:18:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2071:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2094:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2102:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2091:2:28"},"nodeType":"YulFunctionCall","src":"2091:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2068:2:28"},"nodeType":"YulFunctionCall","src":"2068:38:28"},"nodeType":"YulIf","src":"2065:84:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1870:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1879:6:28","type":""}],"src":"1835:320:28"},{"body":{"nodeType":"YulBlock","src":"2215:87:28","statements":[{"nodeType":"YulAssignment","src":"2225:11:28","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2233:3:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2225:4:28"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2253:1:28","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2256:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2246:6:28"},"nodeType":"YulFunctionCall","src":"2246:14:28"},"nodeType":"YulExpressionStatement","src":"2246:14:28"},{"nodeType":"YulAssignment","src":"2269:26:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2287:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2290:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2277:9:28"},"nodeType":"YulFunctionCall","src":"2277:18:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2269:4:28"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2202:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2210:4:28","type":""}],"src":"2161:141:28"},{"body":{"nodeType":"YulBlock","src":"2352:49:28","statements":[{"nodeType":"YulAssignment","src":"2362:33:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"2387:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2376:3:28"},"nodeType":"YulFunctionCall","src":"2376:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"2392:2:28","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2372:3:28"},"nodeType":"YulFunctionCall","src":"2372:23:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2362:6:28"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2335:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2345:6:28","type":""}],"src":"2308:93:28"},{"body":{"nodeType":"YulBlock","src":"2460:54:28","statements":[{"nodeType":"YulAssignment","src":"2470:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"2495:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"2501:5:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2491:3:28"},"nodeType":"YulFunctionCall","src":"2491:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"2470:8:28"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"2435:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"2441:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"2451:8:28","type":""}],"src":"2407:107:28"},{"body":{"nodeType":"YulBlock","src":"2596:317:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2606:35:28","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"2627:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:28","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2623:3:28"},"nodeType":"YulFunctionCall","src":"2623:18:28"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"2610:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2650:109:28","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2681:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2692:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2662:18:28"},"nodeType":"YulFunctionCall","src":"2662:97:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"2654:4:28","type":""}]},{"nodeType":"YulAssignment","src":"2768:51:28","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2799:9:28"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2810:8:28"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2780:18:28"},"nodeType":"YulFunctionCall","src":"2780:39:28"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2768:8:28"}]},{"nodeType":"YulAssignment","src":"2828:30:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2841:5:28"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2852:4:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2848:3:28"},"nodeType":"YulFunctionCall","src":"2848:9:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2837:3:28"},"nodeType":"YulFunctionCall","src":"2837:21:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2828:5:28"}]},{"nodeType":"YulAssignment","src":"2867:40:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2880:5:28"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2891:8:28"},{"name":"mask","nodeType":"YulIdentifier","src":"2901:4:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2887:3:28"},"nodeType":"YulFunctionCall","src":"2887:19:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2877:2:28"},"nodeType":"YulFunctionCall","src":"2877:30:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2867:6:28"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2557:5:28","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"2564:10:28","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"2576:8:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2589:6:28","type":""}],"src":"2520:393:28"},{"body":{"nodeType":"YulBlock","src":"2964:32:28","statements":[{"nodeType":"YulAssignment","src":"2974:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"2985:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2974:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2946:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2956:7:28","type":""}],"src":"2919:77:28"},{"body":{"nodeType":"YulBlock","src":"3034:28:28","statements":[{"nodeType":"YulAssignment","src":"3044:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"3051:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3044:3:28"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3020:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3030:3:28","type":""}],"src":"3002:60:28"},{"body":{"nodeType":"YulBlock","src":"3128:82:28","statements":[{"nodeType":"YulAssignment","src":"3138:66:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3196:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3178:17:28"},"nodeType":"YulFunctionCall","src":"3178:24:28"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3169:8:28"},"nodeType":"YulFunctionCall","src":"3169:34:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3151:17:28"},"nodeType":"YulFunctionCall","src":"3151:53:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3138:9:28"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3108:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3118:9:28","type":""}],"src":"3068:142:28"},{"body":{"nodeType":"YulBlock","src":"3263:28:28","statements":[{"nodeType":"YulAssignment","src":"3273:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"3280:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3273:3:28"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3249:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3259:3:28","type":""}],"src":"3216:75:28"},{"body":{"nodeType":"YulBlock","src":"3373:193:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3383:63:28","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"3438:7:28"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3407:30:28"},"nodeType":"YulFunctionCall","src":"3407:39:28"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"3387:16:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3462:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3502:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3496:5:28"},"nodeType":"YulFunctionCall","src":"3496:11:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3509:6:28"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"3541:16:28"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"3517:23:28"},"nodeType":"YulFunctionCall","src":"3517:41:28"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"3468:27:28"},"nodeType":"YulFunctionCall","src":"3468:91:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3455:6:28"},"nodeType":"YulFunctionCall","src":"3455:105:28"},"nodeType":"YulExpressionStatement","src":"3455:105:28"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3350:4:28","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3356:6:28","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"3364:7:28","type":""}],"src":"3297:269:28"},{"body":{"nodeType":"YulBlock","src":"3621:24:28","statements":[{"nodeType":"YulAssignment","src":"3631:8:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3638:1:28","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3631:3:28"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3617:3:28","type":""}],"src":"3572:73:28"},{"body":{"nodeType":"YulBlock","src":"3704:136:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3714:46:28","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"3728:30:28"},"nodeType":"YulFunctionCall","src":"3728:32:28"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"3718:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3813:4:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3819:6:28"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3827:6:28"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3769:43:28"},"nodeType":"YulFunctionCall","src":"3769:65:28"},"nodeType":"YulExpressionStatement","src":"3769:65:28"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3690:4:28","type":""},{"name":"offset","nodeType":"YulTypedName","src":"3696:6:28","type":""}],"src":"3651:189:28"},{"body":{"nodeType":"YulBlock","src":"3896:136:28","statements":[{"body":{"nodeType":"YulBlock","src":"3963:63:28","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"4007:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"4014:1:28","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3977:29:28"},"nodeType":"YulFunctionCall","src":"3977:39:28"},"nodeType":"YulExpressionStatement","src":"3977:39:28"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3916:5:28"},{"name":"end","nodeType":"YulIdentifier","src":"3923:3:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3913:2:28"},"nodeType":"YulFunctionCall","src":"3913:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3928:26:28","statements":[{"nodeType":"YulAssignment","src":"3930:22:28","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3943:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3950:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:28"},"nodeType":"YulFunctionCall","src":"3939:13:28"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3930:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"3910:2:28","statements":[]},"src":"3906:120:28"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3884:5:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"3891:3:28","type":""}],"src":"3846:186:28"},{"body":{"nodeType":"YulBlock","src":"4117:464:28","statements":[{"body":{"nodeType":"YulBlock","src":"4143:431:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4157:54:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4205:5:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4173:31:28"},"nodeType":"YulFunctionCall","src":"4173:38:28"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"4161:8:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4224:63:28","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4247:8:28"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4275:10:28"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4257:17:28"},"nodeType":"YulFunctionCall","src":"4257:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4243:3:28"},"nodeType":"YulFunctionCall","src":"4243:44:28"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"4228:11:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4444:27:28","statements":[{"nodeType":"YulAssignment","src":"4446:23:28","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"4461:8:28"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4446:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"4428:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"4440:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4425:2:28"},"nodeType":"YulFunctionCall","src":"4425:18:28"},"nodeType":"YulIf","src":"4422:49:28"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"4513:11:28"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"4530:8:28"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4558:3:28"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"4540:17:28"},"nodeType":"YulFunctionCall","src":"4540:22:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4526:3:28"},"nodeType":"YulFunctionCall","src":"4526:37:28"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"4484:28:28"},"nodeType":"YulFunctionCall","src":"4484:80:28"},"nodeType":"YulExpressionStatement","src":"4484:80:28"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"4134:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"4139:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4131:2:28"},"nodeType":"YulFunctionCall","src":"4131:11:28"},"nodeType":"YulIf","src":"4128:446:28"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4093:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"4100:3:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"4105:10:28","type":""}],"src":"4038:543:28"},{"body":{"nodeType":"YulBlock","src":"4650:54:28","statements":[{"nodeType":"YulAssignment","src":"4660:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4685:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"4691:5:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4681:3:28"},"nodeType":"YulFunctionCall","src":"4681:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4660:8:28"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4625:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"4631:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4641:8:28","type":""}],"src":"4587:117:28"},{"body":{"nodeType":"YulBlock","src":"4761:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4771:68:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4820:1:28","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4823:5:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4816:3:28"},"nodeType":"YulFunctionCall","src":"4816:13:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4835:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4831:3:28"},"nodeType":"YulFunctionCall","src":"4831:6:28"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4787:28:28"},"nodeType":"YulFunctionCall","src":"4787:51:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4783:3:28"},"nodeType":"YulFunctionCall","src":"4783:56:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4775:4:28","type":""}]},{"nodeType":"YulAssignment","src":"4848:25:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4862:4:28"},{"name":"mask","nodeType":"YulIdentifier","src":"4868:4:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4858:3:28"},"nodeType":"YulFunctionCall","src":"4858:15:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4848:6:28"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4738:4:28","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"4744:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4754:6:28","type":""}],"src":"4710:169:28"},{"body":{"nodeType":"YulBlock","src":"4965:214:28","statements":[{"nodeType":"YulAssignment","src":"5098:37:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5125:4:28"},{"name":"len","nodeType":"YulIdentifier","src":"5131:3:28"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5106:18:28"},"nodeType":"YulFunctionCall","src":"5106:29:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5098:4:28"}]},{"nodeType":"YulAssignment","src":"5144:29:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5155:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5165:1:28","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"5168:3:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5161:3:28"},"nodeType":"YulFunctionCall","src":"5161:11:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5152:2:28"},"nodeType":"YulFunctionCall","src":"5152:21:28"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"5144:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4946:4:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"4952:3:28","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4960:4:28","type":""}],"src":"4884:295:28"},{"body":{"nodeType":"YulBlock","src":"5276:1303:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5287:51:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5334:3:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5301:32:28"},"nodeType":"YulFunctionCall","src":"5301:37:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"5291:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5423:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5425:16:28"},"nodeType":"YulFunctionCall","src":"5425:18:28"},"nodeType":"YulExpressionStatement","src":"5425:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5395:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5403:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5392:2:28"},"nodeType":"YulFunctionCall","src":"5392:30:28"},"nodeType":"YulIf","src":"5389:56:28"},{"nodeType":"YulVariableDeclaration","src":"5455:52:28","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5501:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5495:5:28"},"nodeType":"YulFunctionCall","src":"5495:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5469:25:28"},"nodeType":"YulFunctionCall","src":"5469:38:28"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"5459:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5600:4:28"},{"name":"oldLen","nodeType":"YulIdentifier","src":"5606:6:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"5614:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"5554:45:28"},"nodeType":"YulFunctionCall","src":"5554:67:28"},"nodeType":"YulExpressionStatement","src":"5554:67:28"},{"nodeType":"YulVariableDeclaration","src":"5631:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5648:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"5635:9:28","type":""}]},{"nodeType":"YulAssignment","src":"5659:17:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5672:4:28","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5659:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5723:611:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5737:37:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5756:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5768:4:28","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5764:3:28"},"nodeType":"YulFunctionCall","src":"5764:9:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5752:3:28"},"nodeType":"YulFunctionCall","src":"5752:22:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"5741:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5788:51:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5834:4:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5802:31:28"},"nodeType":"YulFunctionCall","src":"5802:37:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5792:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5852:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5861:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5856:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5920:163:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5945:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5963:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5968:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5959:3:28"},"nodeType":"YulFunctionCall","src":"5959:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5953:5:28"},"nodeType":"YulFunctionCall","src":"5953:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5938:6:28"},"nodeType":"YulFunctionCall","src":"5938:42:28"},"nodeType":"YulExpressionStatement","src":"5938:42:28"},{"nodeType":"YulAssignment","src":"5997:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6011:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6019:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6007:3:28"},"nodeType":"YulFunctionCall","src":"6007:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5997:6:28"}]},{"nodeType":"YulAssignment","src":"6038:31:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6055:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6066:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6051:3:28"},"nodeType":"YulFunctionCall","src":"6051:18:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"6038:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5886:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5889:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5883:2:28"},"nodeType":"YulFunctionCall","src":"5883:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5898:21:28","statements":[{"nodeType":"YulAssignment","src":"5900:17:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5909:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"5912:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5905:3:28"},"nodeType":"YulFunctionCall","src":"5905:12:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5900:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"5879:3:28","statements":[]},"src":"5875:208:28"},{"body":{"nodeType":"YulBlock","src":"6119:156:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6137:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6164:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6169:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6160:3:28"},"nodeType":"YulFunctionCall","src":"6160:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6154:5:28"},"nodeType":"YulFunctionCall","src":"6154:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"6141:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"6204:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"6231:9:28"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6246:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6254:4:28","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6242:3:28"},"nodeType":"YulFunctionCall","src":"6242:17:28"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"6212:18:28"},"nodeType":"YulFunctionCall","src":"6212:48:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6197:6:28"},"nodeType":"YulFunctionCall","src":"6197:64:28"},"nodeType":"YulExpressionStatement","src":"6197:64:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"6102:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"6111:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6099:2:28"},"nodeType":"YulFunctionCall","src":"6099:19:28"},"nodeType":"YulIf","src":"6096:179:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6295:4:28"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"6309:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6317:1:28","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6305:3:28"},"nodeType":"YulFunctionCall","src":"6305:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"6321:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6301:3:28"},"nodeType":"YulFunctionCall","src":"6301:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6288:6:28"},"nodeType":"YulFunctionCall","src":"6288:36:28"},"nodeType":"YulExpressionStatement","src":"6288:36:28"}]},"nodeType":"YulCase","src":"5716:618:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5721:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"6351:222:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6365:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"6378:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6369:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6402:67:28","statements":[{"nodeType":"YulAssignment","src":"6420:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6439:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"6444:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6435:3:28"},"nodeType":"YulFunctionCall","src":"6435:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6429:5:28"},"nodeType":"YulFunctionCall","src":"6429:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6420:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"6395:6:28"},"nodeType":"YulIf","src":"6392:77:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6489:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6548:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"6555:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"6495:52:28"},"nodeType":"YulFunctionCall","src":"6495:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6482:6:28"},"nodeType":"YulFunctionCall","src":"6482:81:28"},"nodeType":"YulExpressionStatement","src":"6482:81:28"}]},"nodeType":"YulCase","src":"6343:230:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5696:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5704:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5693:2:28"},"nodeType":"YulFunctionCall","src":"5693:14:28"},"nodeType":"YulSwitch","src":"5686:887:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5265:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"5271:3:28","type":""}],"src":"5184:1395:28"},{"body":{"nodeType":"YulBlock","src":"6650:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6667:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6690:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6672:17:28"},"nodeType":"YulFunctionCall","src":"6672:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6660:6:28"},"nodeType":"YulFunctionCall","src":"6660:37:28"},"nodeType":"YulExpressionStatement","src":"6660:37:28"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6638:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6645:3:28","type":""}],"src":"6585:118:28"},{"body":{"nodeType":"YulBlock","src":"6807:124:28","statements":[{"nodeType":"YulAssignment","src":"6817:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6829:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6840:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6825:3:28"},"nodeType":"YulFunctionCall","src":"6825:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6817:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6897:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6910:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6921:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6906:3:28"},"nodeType":"YulFunctionCall","src":"6906:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6853:43:28"},"nodeType":"YulFunctionCall","src":"6853:71:28"},"nodeType":"YulExpressionStatement","src":"6853:71:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6779:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6791:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6802:4:28","type":""}],"src":"6709:222:28"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620044e0380380620044e083398181016040528101906200003791906200030b565b336040518060400160405280600f81526020017f4e46542043616c6c2053707265616400000000000000000000000000000000008152506040518060400160405280600581526020017f4e465443530000000000000000000000000000000000000000000000000000008152508160009081620000b59190620005cc565b508060019081620000c79190620005cc565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001369190620006c4565b60405180910390fd5b6200015081620001db60201b60201c565b5081600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620006e1565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002d382620002a6565b9050919050565b620002e581620002c6565b8114620002f157600080fd5b50565b6000815190506200030581620002da565b92915050565b60008060408385031215620003255762000324620002a1565b5b60006200033585828601620002f4565b92505060206200034885828601620002f4565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003d457607f821691505b602082108103620003ea57620003e96200038c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000415565b62000460868362000415565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004ad620004a7620004a18462000478565b62000482565b62000478565b9050919050565b6000819050919050565b620004c9836200048c565b620004e1620004d882620004b4565b84845462000422565b825550505050565b600090565b620004f8620004e9565b62000505818484620004be565b505050565b5b818110156200052d5762000521600082620004ee565b6001810190506200050b565b5050565b601f8211156200057c576200054681620003f0565b620005518462000405565b8101602085101562000561578190505b62000579620005708562000405565b8301826200050a565b50505b505050565b600082821c905092915050565b6000620005a16000198460080262000581565b1980831691505092915050565b6000620005bc83836200058e565b9150826002028217905092915050565b620005d78262000352565b67ffffffffffffffff811115620005f357620005f26200035d565b5b620005ff8254620003bb565b6200060c82828562000531565b600060209050601f8311600181146200064457600084156200062f578287015190505b6200063b8582620005ae565b865550620006ab565b601f1984166200065486620003f0565b60005b828110156200067e5784890151825560018201915060208501945060208101905062000657565b868310156200069e57848901516200069a601f8916826200058e565b8355505b6001600288020188555050505b505050505050565b620006be81620002c6565b82525050565b6000602082019050620006db6000830184620006b3565b92915050565b613def80620006f16000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063a22cb4651161007c578063a22cb465146103df578063b88d4fde146103fb578063c87b56dd14610417578063e985e9c514610447578063e9cbd82214610477578063f2fde38b1461049557610158565b8063715018a614610329578063741bef1a146103335780638da5cb5b1461035157806395d89b411461036f5780639841ac441461038d5780639abe0d58146103a957610158565b80633420115211610115578063342011521461024357806337b371d91461027357806342842e0e1461028f5780636352211e146102ab578063696c86cd146102db57806370a08231146102f957610158565b806301ffc9a71461015d57806306fdde031461018d578063081812fc146101ab578063095ea7b3146101db578063143e602c146101f757806323b872dd14610227575b600080fd5b610177600480360381019061017291906128e6565b6104b1565b604051610184919061292e565b60405180910390f35b6101956104c3565b6040516101a291906129d9565b60405180910390f35b6101c560048036038101906101c09190612a31565b610555565b6040516101d29190612a9f565b60405180910390f35b6101f560048036038101906101f09190612ae6565b610571565b005b610211600480360381019061020c9190612c5b565b610587565b60405161021e9190612d01565b60405180910390f35b610241600480360381019061023c9190612d1c565b6108fa565b005b61025d60048036038101906102589190612d6f565b6109fc565b60405161026a9190612d01565b60405180910390f35b61028d60048036038101906102889190612a31565b610a6a565b005b6102a960048036038101906102a49190612d1c565b610e48565b005b6102c560048036038101906102c09190612a31565b610e68565b6040516102d29190612a9f565b60405180910390f35b6102e3610e7a565b6040516102f09190612d01565b60405180910390f35b610313600480360381019061030e9190612daf565b610f5e565b6040516103209190612d01565b60405180910390f35b610331611018565b005b61033b61102c565b6040516103489190612e3b565b60405180910390f35b610359611052565b6040516103669190612a9f565b60405180910390f35b61037761107c565b60405161038491906129d9565b60405180910390f35b6103a760048036038101906103a29190612a31565b61110e565b005b6103c360048036038101906103be9190612a31565b61130c565b6040516103d69796959493929190612e56565b60405180910390f35b6103f960048036038101906103f49190612ef1565b61139b565b005b61041560048036038101906104109190612fd2565b6113b1565b005b610431600480360381019061042c9190612a31565b6113d6565b60405161043e91906129d9565b60405180910390f35b610461600480360381019061045c9190613055565b6113e8565b60405161046e919061292e565b60405180910390f35b61047f61147c565b60405161048c91906130b6565b60405180910390f35b6104af60048036038101906104aa9190612daf565b6114a2565b005b60006104bc82611528565b9050919050565b6060600080546104d290613100565b80601f01602080910402602001604051908101604052809291908181526020018280546104fe90613100565b801561054b5780601f106105205761010080835404028352916020019161054b565b820191906000526020600020905b81548152906001019060200180831161052e57829003601f168201915b5050505050905090565b600061056082611589565b5061056a82611611565b9050919050565b610583828261057e61164e565b611656565b5050565b60008486106105cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c2906131a3565b60405180910390fd5b42841161060d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060490613235565b60405180910390fd5b60008311610650576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610647906132a1565b60405180910390fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016106af939291906132c1565b6020604051808303816000875af11580156106ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f2919061330d565b610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890613386565b60405180910390fd5b600060086000815480929190610746906133d5565b9190505590506040518060e001604052808881526020018781526020018681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160001515815250600960008381526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160146101000a81548160ff0219169083151502179055509050506108a53382611668565b6108af8184611686565b807faeccbfaf65ad7aba452b41d0c65100e7f22a90b90d0dfb7439da1b3ef280ff06338989896040516108e5949392919061341d565b60405180910390a28091505095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096c5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016109639190612a9f565b60405180910390fd5b6000610980838361097b61164e565b6116e2565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109f6578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016109ed93929190613462565b60405180910390fd5b50505050565b60008060096000858152602001908152602001600020905080600001548311610a29576000915050610a64565b80600101548310610a505780600001548160010154610a489190613499565b915050610a64565b806000015483610a609190613499565b9150505b92915050565b60006009600083815260200190815260200160002090508060050160149054906101000a900460ff1615610ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aca90613519565b60405180910390fd5b8060020154421015610b1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1190613585565b60405180910390fd5b60018160050160146101000a81548160ff0219169083151502179055506000610b41610e7a565b90506000610b4f84836109fc565b905060008073ffffffffffffffffffffffffffffffffffffffff168460050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bd4578360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610bfa565b8360050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b90506000821115610ce557600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b8152600401610c629291906135a5565b6020604051808303816000875af1158015610c81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca5919061330d565b610ce4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdb9061361a565b60405180910390fd5b5b6000828560030154610cf79190613499565b90506000811115610e0657600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8660040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610d839291906135a5565b6020604051808303816000875af1158015610da2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc6919061330d565b610e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfc906136ac565b60405180910390fd5b5b857fb3229cca4d7dce5064bbe840844410c87eb491cb8de1adba5386238aeb50439a8486604051610e389291906136cc565b60405180910390a2505050505050565b610e63838383604051806020016040528060008152506113b1565b505050565b6000610e7382611589565b9050919050565b600080600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610eea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0e9190613782565b50505091505060008113610f57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4e90613849565b60405180910390fd5b8091505090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fd15760006040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610fc89190612a9f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6110206118fc565b61102a6000611983565b565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461108b90613100565b80601f01602080910402602001604051908101604052809291908181526020018280546110b790613100565b80156111045780601f106110d957610100808354040283529160200191611104565b820191906000526020600020905b8154815290600101906020018083116110e757829003601f168201915b5050505050905090565b60006009600083815260200190815260200160002090504281600201541161116b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611162906138b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f590613921565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1661121e83610e68565b73ffffffffffffffffffffffffffffffffffffffff1603611274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126b906139b3565b60405180910390fd5b338160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006112c283610e68565b90506112cf813385611a49565b827f6c35fe455375b6647f82e638fc154f286bcc5a02f6ace0290d36aa7ea5aa5413336040516112ff9190612a9f565b60405180910390a2505050565b60096020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160149054906101000a900460ff16905087565b6113ad6113a661164e565b8383611bb6565b5050565b6113bc8484846108fa565b6113d06113c761164e565b85858585611d25565b50505050565b60606113e182611ed6565b9050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6114aa6118fc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361151c5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016115139190612a9f565b60405180910390fd5b61152581611983565b50565b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611582575061158182611fe9565b5b9050919050565b600080611595836120cb565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361160857826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016115ff9190612d01565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6116638383836001612108565b505050565b6116828282604051806020016040528060008152506122cd565b5050565b806006600084815260200190815260200160002090816116a69190613b75565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516116d69190612d01565b60405180910390a15050565b6000806116ee846120cb565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146117305761172f8184866122f1565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117c157611772600085600080612108565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611844576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b61190461164e565b73ffffffffffffffffffffffffffffffffffffffff16611922611052565b73ffffffffffffffffffffffffffffffffffffffff16146119815761194561164e565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016119789190612a9f565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611abb5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ab29190612a9f565b60405180910390fd5b6000611ac9838360006116e2565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611b3c57816040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611b339190612d01565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611bb0578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401611ba793929190613462565b60405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c2757816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401611c1e9190612a9f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611d18919061292e565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611ecf578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401611d849493929190613c9c565b6020604051808303816000875af1925050508015611dc057506040513d601f19601f82011682018060405250810190611dbd9190613cfd565b60015b611e44573d8060008114611df0576040519150601f19603f3d011682016040523d82523d6000602084013e611df5565b606091505b506000815103611e3c57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611e339190612a9f565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611ecd57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ec49190612a9f565b60405180910390fd5b505b5050505050565b6060611ee182611589565b506000600660008481526020019081526020016000208054611f0290613100565b80601f0160208091040260200160405190810160405280929190818152602001828054611f2e90613100565b8015611f7b5780601f10611f5057610100808354040283529160200191611f7b565b820191906000526020600020905b815481529060010190602001808311611f5e57829003601f168201915b505050505090506000611f8c6123b5565b90506000815103611fa1578192505050611fe4565b600082511115611fd6578082604051602001611fbe929190613d66565b60405160208183030381529060405292505050611fe4565b611fdf846123cc565b925050505b919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806120b457507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806120c457506120c382612435565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806121415750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561227557600061215184611589565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156121bc57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156121cf57506121cd81846113e8565b155b1561221157826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016122089190612a9f565b60405180910390fd5b811561227357838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6122d7838361249f565b6122ec6122e261164e565b6000858585611d25565b505050565b6122fc838383612598565b6123b057600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361237157806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016123689190612d01565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016123a79291906135a5565b60405180910390fd5b505050565b606060405180602001604052806000815250905090565b60606123d782611589565b5060006123e26123b5565b90506000815111612402576040518060200160405280600081525061242d565b8061240c84612659565b60405160200161241d929190613d66565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036125115760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016125089190612a9f565b60405180910390fd5b600061251f838360006116e2565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146125935760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161258a9190612a9f565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561265057508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612611575061261084846113e8565b5b8061264f57508273ffffffffffffffffffffffffffffffffffffffff1661263783611611565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b60606000600161266884612727565b01905060008167ffffffffffffffff81111561268757612686612b30565b5b6040519080825280601f01601f1916602001820160405280156126b95781602001600182028036833780820191505090505b509050600082602001820190505b60011561271c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816127105761270f613d8a565b5b049450600085036126c7575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612785577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161277b5761277a613d8a565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106127c2576d04ee2d6d415b85acef810000000083816127b8576127b7613d8a565b5b0492506020810190505b662386f26fc1000083106127f157662386f26fc1000083816127e7576127e6613d8a565b5b0492506010810190505b6305f5e100831061281a576305f5e10083816128105761280f613d8a565b5b0492506008810190505b612710831061283f57612710838161283557612834613d8a565b5b0492506004810190505b60648310612862576064838161285857612857613d8a565b5b0492506002810190505b600a8310612871576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6128c38161288e565b81146128ce57600080fd5b50565b6000813590506128e0816128ba565b92915050565b6000602082840312156128fc576128fb612884565b5b600061290a848285016128d1565b91505092915050565b60008115159050919050565b61292881612913565b82525050565b6000602082019050612943600083018461291f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612983578082015181840152602081019050612968565b60008484015250505050565b6000601f19601f8301169050919050565b60006129ab82612949565b6129b58185612954565b93506129c5818560208601612965565b6129ce8161298f565b840191505092915050565b600060208201905081810360008301526129f381846129a0565b905092915050565b6000819050919050565b612a0e816129fb565b8114612a1957600080fd5b50565b600081359050612a2b81612a05565b92915050565b600060208284031215612a4757612a46612884565b5b6000612a5584828501612a1c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612a8982612a5e565b9050919050565b612a9981612a7e565b82525050565b6000602082019050612ab46000830184612a90565b92915050565b612ac381612a7e565b8114612ace57600080fd5b50565b600081359050612ae081612aba565b92915050565b60008060408385031215612afd57612afc612884565b5b6000612b0b85828601612ad1565b9250506020612b1c85828601612a1c565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612b688261298f565b810181811067ffffffffffffffff82111715612b8757612b86612b30565b5b80604052505050565b6000612b9a61287a565b9050612ba68282612b5f565b919050565b600067ffffffffffffffff821115612bc657612bc5612b30565b5b612bcf8261298f565b9050602081019050919050565b82818337600083830152505050565b6000612bfe612bf984612bab565b612b90565b905082815260208101848484011115612c1a57612c19612b2b565b5b612c25848285612bdc565b509392505050565b600082601f830112612c4257612c41612b26565b5b8135612c52848260208601612beb565b91505092915050565b600080600080600060a08688031215612c7757612c76612884565b5b6000612c8588828901612a1c565b9550506020612c9688828901612a1c565b9450506040612ca788828901612a1c565b9350506060612cb888828901612a1c565b925050608086013567ffffffffffffffff811115612cd957612cd8612889565b5b612ce588828901612c2d565b9150509295509295909350565b612cfb816129fb565b82525050565b6000602082019050612d166000830184612cf2565b92915050565b600080600060608486031215612d3557612d34612884565b5b6000612d4386828701612ad1565b9350506020612d5486828701612ad1565b9250506040612d6586828701612a1c565b9150509250925092565b60008060408385031215612d8657612d85612884565b5b6000612d9485828601612a1c565b9250506020612da585828601612a1c565b9150509250929050565b600060208284031215612dc557612dc4612884565b5b6000612dd384828501612ad1565b91505092915050565b6000819050919050565b6000612e01612dfc612df784612a5e565b612ddc565b612a5e565b9050919050565b6000612e1382612de6565b9050919050565b6000612e2582612e08565b9050919050565b612e3581612e1a565b82525050565b6000602082019050612e506000830184612e2c565b92915050565b600060e082019050612e6b600083018a612cf2565b612e786020830189612cf2565b612e856040830188612cf2565b612e926060830187612cf2565b612e9f6080830186612a90565b612eac60a0830185612a90565b612eb960c083018461291f565b98975050505050505050565b612ece81612913565b8114612ed957600080fd5b50565b600081359050612eeb81612ec5565b92915050565b60008060408385031215612f0857612f07612884565b5b6000612f1685828601612ad1565b9250506020612f2785828601612edc565b9150509250929050565b600067ffffffffffffffff821115612f4c57612f4b612b30565b5b612f558261298f565b9050602081019050919050565b6000612f75612f7084612f31565b612b90565b905082815260208101848484011115612f9157612f90612b2b565b5b612f9c848285612bdc565b509392505050565b600082601f830112612fb957612fb8612b26565b5b8135612fc9848260208601612f62565b91505092915050565b60008060008060808587031215612fec57612feb612884565b5b6000612ffa87828801612ad1565b945050602061300b87828801612ad1565b935050604061301c87828801612a1c565b925050606085013567ffffffffffffffff81111561303d5761303c612889565b5b61304987828801612fa4565b91505092959194509250565b6000806040838503121561306c5761306b612884565b5b600061307a85828601612ad1565b925050602061308b85828601612ad1565b9150509250929050565b60006130a082612e08565b9050919050565b6130b081613095565b82525050565b60006020820190506130cb60008301846130a7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061311857607f821691505b60208210810361312b5761312a6130d1565b5b50919050565b7f537472696b653120646f6974206574726520696e66657269657572206120537460008201527f72696b6532000000000000000000000000000000000000000000000000000000602082015250565b600061318d602583612954565b915061319882613131565b604082019050919050565b600060208201905081810360008301526131bc81613180565b9050919050565b7f4c2765787069726174696f6e20646f697420657472652064616e73206c65206660008201527f7574757200000000000000000000000000000000000000000000000000000000602082015250565b600061321f602483612954565b915061322a826131c3565b604082019050919050565b6000602082019050818103600083015261324e81613212565b9050919050565b7f4c6520636f6c6c61746572616c20646f6974206574726520706f736974696600600082015250565b600061328b601f83612954565b915061329682613255565b602082019050919050565b600060208201905081810360008301526132ba8161327e565b9050919050565b60006060820190506132d66000830186612a90565b6132e36020830185612a90565b6132f06040830184612cf2565b949350505050565b60008151905061330781612ec5565b92915050565b60006020828403121561332357613322612884565b5b6000613331848285016132f8565b91505092915050565b7f5472616e736665727420646520636f6c6c61746572616c206563686f75650000600082015250565b6000613370601e83612954565b915061337b8261333a565b602082019050919050565b6000602082019050818103600083015261339f81613363565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006133e0826129fb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613412576134116133a6565b5b600182019050919050565b60006080820190506134326000830187612a90565b61343f6020830186612cf2565b61344c6040830185612cf2565b6134596060830184612cf2565b95945050505050565b60006060820190506134776000830186612a90565b6134846020830185612cf2565b6134916040830184612a90565b949350505050565b60006134a4826129fb565b91506134af836129fb565b92508282039050818111156134c7576134c66133a6565b5b92915050565b7f4c276f7074696f6e20612064656a612065746520657865726365650000000000600082015250565b6000613503601b83612954565b915061350e826134cd565b602082019050919050565b60006020820190508181036000830152613532816134f6565b9050919050565b7f4c276f7074696f6e206e27612070617320656e636f7265206578706972650000600082015250565b600061356f601e83612954565b915061357a82613539565b602082019050919050565b6000602082019050818103600083015261359e81613562565b9050919050565b60006040820190506135ba6000830185612a90565b6135c76020830184612cf2565b9392505050565b7f5472616e7366657274206465207061796f6666206563686f7565000000000000600082015250565b6000613604601a83612954565b915061360f826135ce565b602082019050919050565b60006020820190508181036000830152613633816135f7565b9050919050565b7f5472616e736665727420646520636f6c6c61746572616c2072657374616e742060008201527f6563686f75650000000000000000000000000000000000000000000000000000602082015250565b6000613696602683612954565b91506136a18261363a565b604082019050919050565b600060208201905081810360008301526136c581613689565b9050919050565b60006040820190506136e16000830185612cf2565b6136ee6020830184612cf2565b9392505050565b600069ffffffffffffffffffff82169050919050565b613714816136f5565b811461371f57600080fd5b50565b6000815190506137318161370b565b92915050565b6000819050919050565b61374a81613737565b811461375557600080fd5b50565b60008151905061376781613741565b92915050565b60008151905061377c81612a05565b92915050565b600080600080600060a0868803121561379e5761379d612884565b5b60006137ac88828901613722565b95505060206137bd88828901613758565b94505060406137ce8882890161376d565b93505060606137df8882890161376d565b92505060806137f088828901613722565b9150509295509295909350565b7f507269782042544320696e76616c696465000000000000000000000000000000600082015250565b6000613833601183612954565b915061383e826137fd565b602082019050919050565b6000602082019050818103600083015261386281613826565b9050919050565b7f4c276f7074696f6e206120657870697265000000000000000000000000000000600082015250565b600061389f601183612954565b91506138aa82613869565b602082019050919050565b600060208201905081810360008301526138ce81613892565b9050919050565b7f4c276f7074696f6e20612064656a612065746520616368657465650000000000600082015250565b600061390b601b83612954565b9150613916826138d5565b602082019050919050565b6000602082019050818103600083015261393a816138fe565b9050919050565b7f566f7573206e6520706f7576657a20706173206163686574657220766f74726560008201527f2070726f707265206f7074696f6e000000000000000000000000000000000000602082015250565b600061399d602e83612954565b91506139a882613941565b604082019050919050565b600060208201905081810360008301526139cc81613990565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613a357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826139f8565b613a3f86836139f8565b95508019841693508086168417925050509392505050565b6000613a72613a6d613a68846129fb565b612ddc565b6129fb565b9050919050565b6000819050919050565b613a8c83613a57565b613aa0613a9882613a79565b848454613a05565b825550505050565b600090565b613ab5613aa8565b613ac0818484613a83565b505050565b5b81811015613ae457613ad9600082613aad565b600181019050613ac6565b5050565b601f821115613b2957613afa816139d3565b613b03846139e8565b81016020851015613b12578190505b613b26613b1e856139e8565b830182613ac5565b50505b505050565b600082821c905092915050565b6000613b4c60001984600802613b2e565b1980831691505092915050565b6000613b658383613b3b565b9150826002028217905092915050565b613b7e82612949565b67ffffffffffffffff811115613b9757613b96612b30565b5b613ba18254613100565b613bac828285613ae8565b600060209050601f831160018114613bdf5760008415613bcd578287015190505b613bd78582613b59565b865550613c3f565b601f198416613bed866139d3565b60005b82811015613c1557848901518255600182019150602085019450602081019050613bf0565b86831015613c325784890151613c2e601f891682613b3b565b8355505b6001600288020188555050505b505050505050565b600081519050919050565b600082825260208201905092915050565b6000613c6e82613c47565b613c788185613c52565b9350613c88818560208601612965565b613c918161298f565b840191505092915050565b6000608082019050613cb16000830187612a90565b613cbe6020830186612a90565b613ccb6040830185612cf2565b8181036060830152613cdd8184613c63565b905095945050505050565b600081519050613cf7816128ba565b92915050565b600060208284031215613d1357613d12612884565b5b6000613d2184828501613ce8565b91505092915050565b600081905092915050565b6000613d4082612949565b613d4a8185613d2a565b9350613d5a818560208601612965565b80840191505092915050565b6000613d728285613d35565b9150613d7e8284613d35565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220cddb372110bd4b6444dde837de85e5a772650ed2efa4df7aa16070c4979498da64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x44E0 CODESIZE SUB DUP1 PUSH3 0x44E0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x30B JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E46542043616C6C205370726561640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E46544353000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0x5CC JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0x5CC JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x136 SWAP2 SWAP1 PUSH3 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x150 DUP2 PUSH3 0x1DB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x6E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D3 DUP3 PUSH3 0x2A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2E5 DUP2 PUSH3 0x2C6 JUMP JUMPDEST DUP2 EQ PUSH3 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x305 DUP2 PUSH3 0x2DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x325 JUMPI PUSH3 0x324 PUSH3 0x2A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x335 DUP6 DUP3 DUP7 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x348 DUP6 DUP3 DUP7 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3D4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3EA JUMPI PUSH3 0x3E9 PUSH3 0x38C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x454 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x415 JUMP JUMPDEST PUSH3 0x460 DUP7 DUP4 PUSH3 0x415 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4AD PUSH3 0x4A7 PUSH3 0x4A1 DUP5 PUSH3 0x478 JUMP JUMPDEST PUSH3 0x482 JUMP JUMPDEST PUSH3 0x478 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4C9 DUP4 PUSH3 0x48C JUMP JUMPDEST PUSH3 0x4E1 PUSH3 0x4D8 DUP3 PUSH3 0x4B4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x422 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x4F8 PUSH3 0x4E9 JUMP JUMPDEST PUSH3 0x505 DUP2 DUP5 DUP5 PUSH3 0x4BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x52D JUMPI PUSH3 0x521 PUSH1 0x0 DUP3 PUSH3 0x4EE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x50B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x57C JUMPI PUSH3 0x546 DUP2 PUSH3 0x3F0 JUMP JUMPDEST PUSH3 0x551 DUP5 PUSH3 0x405 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x561 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x579 PUSH3 0x570 DUP6 PUSH3 0x405 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x50A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5A1 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x581 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5BC DUP4 DUP4 PUSH3 0x58E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x5D7 DUP3 PUSH3 0x352 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5F3 JUMPI PUSH3 0x5F2 PUSH3 0x35D JUMP JUMPDEST JUMPDEST PUSH3 0x5FF DUP3 SLOAD PUSH3 0x3BB JUMP JUMPDEST PUSH3 0x60C DUP3 DUP3 DUP6 PUSH3 0x531 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x644 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x62F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x63B DUP6 DUP3 PUSH3 0x5AE JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x6AB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x654 DUP7 PUSH3 0x3F0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x67E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x657 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x69E JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x69A PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x58E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x6BE DUP2 PUSH3 0x2C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x6DB PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x6B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3DEF DUP1 PUSH3 0x6F1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xE9CBD822 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x495 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x9841AC44 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x9ABE0D58 EQ PUSH2 0x3A9 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x34201152 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x34201152 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x37B371D9 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x696C86CD EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F9 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x143E602C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x227 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x28E6 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x29D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x2C5B JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x2D1C JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x2D6F JUMP JUMPDEST PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2D1C JUMP JUMPDEST PUSH2 0xE48 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH2 0x1018 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x2E3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH2 0x107C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x29D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x110E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2EF1 JUMP JUMPDEST PUSH2 0x139B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x415 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x2FD2 JUMP JUMPDEST PUSH2 0x13B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x431 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x29D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x461 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH2 0x147C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x30B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST PUSH2 0x14A2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x4BC DUP3 PUSH2 0x1528 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4D2 SWAP1 PUSH2 0x3100 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FE SWAP1 PUSH2 0x3100 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x520 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x560 DUP3 PUSH2 0x1589 JUMP JUMPDEST POP PUSH2 0x56A DUP3 PUSH2 0x1611 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x583 DUP3 DUP3 PUSH2 0x57E PUSH2 0x164E JUMP JUMPDEST PUSH2 0x1656 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 LT PUSH2 0x5CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C2 SWAP1 PUSH2 0x31A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP5 GT PUSH2 0x60D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP1 PUSH2 0x3235 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x647 SWAP1 PUSH2 0x32A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0x330D JUMP JUMPDEST PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x3386 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x746 SWAP1 PUSH2 0x33D5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x8A5 CALLER DUP3 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x8AF DUP2 DUP5 PUSH2 0x1686 JUMP JUMPDEST DUP1 PUSH32 0xAECCBFAF65AD7ABA452B41D0C65100E7F22A90B90D0DFB7439DA1B3EF280FF06 CALLER DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x8E5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x341D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x96C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x963 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x980 DUP4 DUP4 PUSH2 0x97B PUSH2 0x164E JUMP JUMPDEST PUSH2 0x16E2 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9F6 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP4 GT PUSH2 0xA29 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xA64 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP4 LT PUSH2 0xA50 JUMPI DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x3499 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA64 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD SLOAD DUP4 PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0x3499 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACA SWAP1 PUSH2 0x3519 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB11 SWAP1 PUSH2 0x3585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xB41 PUSH2 0xE7A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB4F DUP5 DUP4 PUSH2 0x9FC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD4 JUMPI DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBFA JUMP JUMPDEST DUP4 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0xCE5 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC62 SWAP3 SWAP2 SWAP1 PUSH2 0x35A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA5 SWAP2 SWAP1 PUSH2 0x330D JUMP JUMPDEST PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP1 PUSH2 0x361A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP3 DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0xCF7 SWAP2 SWAP1 PUSH2 0x3499 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xE06 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD83 SWAP3 SWAP2 SWAP1 PUSH2 0x35A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDA2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x330D JUMP JUMPDEST PUSH2 0xE05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFC SWAP1 PUSH2 0x36AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP6 PUSH32 0xB3229CCA4D7DCE5064BBE840844410C87EB491CB8DE1ADBA5386238AEB50439A DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xE38 SWAP3 SWAP2 SWAP1 PUSH2 0x36CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE63 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x13B1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE73 DUP3 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF0E SWAP2 SWAP1 PUSH2 0x3782 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4E SWAP1 PUSH2 0x3849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFD1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC8 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1020 PUSH2 0x18FC JUMP JUMPDEST PUSH2 0x102A PUSH1 0x0 PUSH2 0x1983 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x108B SWAP1 PUSH2 0x3100 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10B7 SWAP1 PUSH2 0x3100 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1104 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1104 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP TIMESTAMP DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1162 SWAP1 PUSH2 0x38B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F5 SWAP1 PUSH2 0x3921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x121E DUP4 PUSH2 0xE68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1274 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126B SWAP1 PUSH2 0x39B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x12C2 DUP4 PUSH2 0xE68 JUMP JUMPDEST SWAP1 POP PUSH2 0x12CF DUP2 CALLER DUP6 PUSH2 0x1A49 JUMP JUMPDEST DUP3 PUSH32 0x6C35FE455375B6647F82E638FC154F286BCC5A02F6ACE0290D36AA7EA5AA5413 CALLER PUSH1 0x40 MLOAD PUSH2 0x12FF SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0x13AD PUSH2 0x13A6 PUSH2 0x164E JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1BB6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x13BC DUP5 DUP5 DUP5 PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x13D0 PUSH2 0x13C7 PUSH2 0x164E JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1D25 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13E1 DUP3 PUSH2 0x1ED6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x14AA PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x151C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1513 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1525 DUP2 PUSH2 0x1983 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1582 JUMPI POP PUSH2 0x1581 DUP3 PUSH2 0x1FE9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1595 DUP4 PUSH2 0x20CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1608 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FF SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1663 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2108 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1682 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x22CD JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x16A6 SWAP2 SWAP1 PUSH2 0x3B75 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x16D6 SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16EE DUP5 PUSH2 0x20CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1730 JUMPI PUSH2 0x172F DUP2 DUP5 DUP7 PUSH2 0x22F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17C1 JUMPI PUSH2 0x1772 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1844 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1904 PUSH2 0x164E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1922 PUSH2 0x1052 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1981 JUMPI PUSH2 0x1945 PUSH2 0x164E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1978 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ABB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB2 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AC9 DUP4 DUP4 PUSH1 0x0 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B3C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B33 SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BB0 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C27 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1E SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D18 SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1ECF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D84 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C9C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1DC0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DBD SWAP2 SWAP1 PUSH2 0x3CFD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1E44 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DF0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DF5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1E3C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E33 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1ECD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC4 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1EE1 DUP3 PUSH2 0x1589 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1F02 SWAP1 PUSH2 0x3100 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F2E SWAP1 PUSH2 0x3100 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F7B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F50 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F7B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F5E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1F8C PUSH2 0x23B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1FA1 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1FD6 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FBE SWAP3 SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1FE4 JUMP JUMPDEST PUSH2 0x1FDF DUP5 PUSH2 0x23CC JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x20B4 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x20C4 JUMPI POP PUSH2 0x20C3 DUP3 PUSH2 0x2435 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2141 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2275 JUMPI PUSH1 0x0 PUSH2 0x2151 DUP5 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x21BC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x21CF JUMPI POP PUSH2 0x21CD DUP2 DUP5 PUSH2 0x13E8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2211 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2208 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2273 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x22D7 DUP4 DUP4 PUSH2 0x249F JUMP JUMPDEST PUSH2 0x22EC PUSH2 0x22E2 PUSH2 0x164E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x1D25 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x22FC DUP4 DUP4 DUP4 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x23B0 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2371 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2368 SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23A7 SWAP3 SWAP2 SWAP1 PUSH2 0x35A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x23D7 DUP3 PUSH2 0x1589 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x23E2 PUSH2 0x23B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2402 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x242D JUMP JUMPDEST DUP1 PUSH2 0x240C DUP5 PUSH2 0x2659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x241D SWAP3 SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2511 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2508 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x251F DUP4 DUP4 PUSH1 0x0 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2593 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x258A SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2650 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2611 JUMPI POP PUSH2 0x2610 DUP5 DUP5 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x264F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2637 DUP4 PUSH2 0x1611 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2668 DUP5 PUSH2 0x2727 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2687 JUMPI PUSH2 0x2686 PUSH2 0x2B30 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x26B9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x271C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2710 JUMPI PUSH2 0x270F PUSH2 0x3D8A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x26C7 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2785 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x277B JUMPI PUSH2 0x277A PUSH2 0x3D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x27C2 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x27B8 JUMPI PUSH2 0x27B7 PUSH2 0x3D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x27F1 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x27E7 JUMPI PUSH2 0x27E6 PUSH2 0x3D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x281A JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2810 JUMPI PUSH2 0x280F PUSH2 0x3D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x283F JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2835 JUMPI PUSH2 0x2834 PUSH2 0x3D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2862 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x2858 JUMPI PUSH2 0x2857 PUSH2 0x3D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2871 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28C3 DUP2 PUSH2 0x288E JUMP JUMPDEST DUP2 EQ PUSH2 0x28CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28E0 DUP2 PUSH2 0x28BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28FC JUMPI PUSH2 0x28FB PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x290A DUP5 DUP3 DUP6 ADD PUSH2 0x28D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2928 DUP2 PUSH2 0x2913 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2943 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x291F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2983 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2968 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29AB DUP3 PUSH2 0x2949 JUMP JUMPDEST PUSH2 0x29B5 DUP2 DUP6 PUSH2 0x2954 JUMP JUMPDEST SWAP4 POP PUSH2 0x29C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2965 JUMP JUMPDEST PUSH2 0x29CE DUP2 PUSH2 0x298F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29F3 DUP2 DUP5 PUSH2 0x29A0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A0E DUP2 PUSH2 0x29FB JUMP JUMPDEST DUP2 EQ PUSH2 0x2A19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A2B DUP2 PUSH2 0x2A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A47 JUMPI PUSH2 0x2A46 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A55 DUP5 DUP3 DUP6 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A89 DUP3 PUSH2 0x2A5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A99 DUP2 PUSH2 0x2A7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AB4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AC3 DUP2 PUSH2 0x2A7E JUMP JUMPDEST DUP2 EQ PUSH2 0x2ACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AE0 DUP2 PUSH2 0x2ABA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AFD JUMPI PUSH2 0x2AFC PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B0B DUP6 DUP3 DUP7 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B1C DUP6 DUP3 DUP7 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2B68 DUP3 PUSH2 0x298F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B87 JUMPI PUSH2 0x2B86 PUSH2 0x2B30 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B9A PUSH2 0x287A JUMP JUMPDEST SWAP1 POP PUSH2 0x2BA6 DUP3 DUP3 PUSH2 0x2B5F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BC6 JUMPI PUSH2 0x2BC5 PUSH2 0x2B30 JUMP JUMPDEST JUMPDEST PUSH2 0x2BCF DUP3 PUSH2 0x298F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BFE PUSH2 0x2BF9 DUP5 PUSH2 0x2BAB JUMP JUMPDEST PUSH2 0x2B90 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C1A JUMPI PUSH2 0x2C19 PUSH2 0x2B2B JUMP JUMPDEST JUMPDEST PUSH2 0x2C25 DUP5 DUP3 DUP6 PUSH2 0x2BDC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C42 JUMPI PUSH2 0x2C41 PUSH2 0x2B26 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C52 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2C77 JUMPI PUSH2 0x2C76 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C85 DUP9 DUP3 DUP10 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2C96 DUP9 DUP3 DUP10 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2CA7 DUP9 DUP3 DUP10 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2CB8 DUP9 DUP3 DUP10 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD9 JUMPI PUSH2 0x2CD8 PUSH2 0x2889 JUMP JUMPDEST JUMPDEST PUSH2 0x2CE5 DUP9 DUP3 DUP10 ADD PUSH2 0x2C2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x2CFB DUP2 PUSH2 0x29FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D16 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D35 JUMPI PUSH2 0x2D34 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D43 DUP7 DUP3 DUP8 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2D54 DUP7 DUP3 DUP8 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2D65 DUP7 DUP3 DUP8 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D86 JUMPI PUSH2 0x2D85 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D94 DUP6 DUP3 DUP7 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DA5 DUP6 DUP3 DUP7 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DC5 JUMPI PUSH2 0x2DC4 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DD3 DUP5 DUP3 DUP6 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E01 PUSH2 0x2DFC PUSH2 0x2DF7 DUP5 PUSH2 0x2A5E JUMP JUMPDEST PUSH2 0x2DDC JUMP JUMPDEST PUSH2 0x2A5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E13 DUP3 PUSH2 0x2DE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E25 DUP3 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E35 DUP2 PUSH2 0x2E1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E50 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2E6B PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x2E78 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x2E85 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x2E92 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x2E9F PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x2EAC PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x2EB9 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x291F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2ECE DUP2 PUSH2 0x2913 JUMP JUMPDEST DUP2 EQ PUSH2 0x2ED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EEB DUP2 PUSH2 0x2EC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F08 JUMPI PUSH2 0x2F07 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F16 DUP6 DUP3 DUP7 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F27 DUP6 DUP3 DUP7 ADD PUSH2 0x2EDC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2F4C JUMPI PUSH2 0x2F4B PUSH2 0x2B30 JUMP JUMPDEST JUMPDEST PUSH2 0x2F55 DUP3 PUSH2 0x298F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F75 PUSH2 0x2F70 DUP5 PUSH2 0x2F31 JUMP JUMPDEST PUSH2 0x2B90 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2F91 JUMPI PUSH2 0x2F90 PUSH2 0x2B2B JUMP JUMPDEST JUMPDEST PUSH2 0x2F9C DUP5 DUP3 DUP6 PUSH2 0x2BDC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2FB9 JUMPI PUSH2 0x2FB8 PUSH2 0x2B26 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2FC9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2F62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2FEC JUMPI PUSH2 0x2FEB PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FFA DUP8 DUP3 DUP9 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x300B DUP8 DUP3 DUP9 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x301C DUP8 DUP3 DUP9 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x303D JUMPI PUSH2 0x303C PUSH2 0x2889 JUMP JUMPDEST JUMPDEST PUSH2 0x3049 DUP8 DUP3 DUP9 ADD PUSH2 0x2FA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x306C JUMPI PUSH2 0x306B PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x307A DUP6 DUP3 DUP7 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x308B DUP6 DUP3 DUP7 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A0 DUP3 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30B0 DUP2 PUSH2 0x3095 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3118 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x312B JUMPI PUSH2 0x312A PUSH2 0x30D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696B653120646F6974206574726520696E666572696575722061205374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72696B6532000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x318D PUSH1 0x25 DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x3198 DUP3 PUSH2 0x3131 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31BC DUP2 PUSH2 0x3180 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C2765787069726174696F6E20646F697420657472652064616E73206C652066 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574757200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x321F PUSH1 0x24 DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x322A DUP3 PUSH2 0x31C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x324E DUP2 PUSH2 0x3212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6520636F6C6C61746572616C20646F6974206574726520706F736974696600 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328B PUSH1 0x1F DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x3296 DUP3 PUSH2 0x3255 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32BA DUP2 PUSH2 0x327E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x32D6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x32E3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x32F0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2CF2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3307 DUP2 PUSH2 0x2EC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3323 JUMPI PUSH2 0x3322 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3331 DUP5 DUP3 DUP6 ADD PUSH2 0x32F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E736665727420646520636F6C6C61746572616C206563686F75650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3370 PUSH1 0x1E DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x337B DUP3 PUSH2 0x333A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x339F DUP2 PUSH2 0x3363 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33E0 DUP3 PUSH2 0x29FB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3412 JUMPI PUSH2 0x3411 PUSH2 0x33A6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3432 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x343F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x344C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x3459 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2CF2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3477 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x3484 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x3491 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A90 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A4 DUP3 PUSH2 0x29FB JUMP JUMPDEST SWAP2 POP PUSH2 0x34AF DUP4 PUSH2 0x29FB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x34C7 JUMPI PUSH2 0x34C6 PUSH2 0x33A6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C276F7074696F6E20612064656A612065746520657865726365650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3503 PUSH1 0x1B DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x350E DUP3 PUSH2 0x34CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3532 DUP2 PUSH2 0x34F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C276F7074696F6E206E27612070617320656E636F7265206578706972650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x356F PUSH1 0x1E DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x357A DUP3 PUSH2 0x3539 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x359E DUP2 PUSH2 0x3562 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35BA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x35C7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2CF2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657274206465207061796F6666206563686F7565000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3604 PUSH1 0x1A DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x360F DUP3 PUSH2 0x35CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3633 DUP2 PUSH2 0x35F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E736665727420646520636F6C6C61746572616C2072657374616E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6563686F75650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3696 PUSH1 0x26 DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x36A1 DUP3 PUSH2 0x363A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36C5 DUP2 PUSH2 0x3689 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x36E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x36EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2CF2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3714 DUP2 PUSH2 0x36F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x371F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3731 DUP2 PUSH2 0x370B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x374A DUP2 PUSH2 0x3737 JUMP JUMPDEST DUP2 EQ PUSH2 0x3755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3767 DUP2 PUSH2 0x3741 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x377C DUP2 PUSH2 0x2A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x379E JUMPI PUSH2 0x379D PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37AC DUP9 DUP3 DUP10 ADD PUSH2 0x3722 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x37BD DUP9 DUP3 DUP10 ADD PUSH2 0x3758 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x37CE DUP9 DUP3 DUP10 ADD PUSH2 0x376D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x37DF DUP9 DUP3 DUP10 ADD PUSH2 0x376D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x37F0 DUP9 DUP3 DUP10 ADD PUSH2 0x3722 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x507269782042544320696E76616C696465000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3833 PUSH1 0x11 DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x383E DUP3 PUSH2 0x37FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3862 DUP2 PUSH2 0x3826 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C276F7074696F6E206120657870697265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x389F PUSH1 0x11 DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x38AA DUP3 PUSH2 0x3869 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38CE DUP2 PUSH2 0x3892 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C276F7074696F6E20612064656A612065746520616368657465650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390B PUSH1 0x1B DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x3916 DUP3 PUSH2 0x38D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x393A DUP2 PUSH2 0x38FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x566F7573206E6520706F7576657A20706173206163686574657220766F747265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2070726F707265206F7074696F6E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399D PUSH1 0x2E DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x39A8 DUP3 PUSH2 0x3941 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39CC DUP2 PUSH2 0x3990 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3A35 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x39F8 JUMP JUMPDEST PUSH2 0x3A3F DUP7 DUP4 PUSH2 0x39F8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A72 PUSH2 0x3A6D PUSH2 0x3A68 DUP5 PUSH2 0x29FB JUMP JUMPDEST PUSH2 0x2DDC JUMP JUMPDEST PUSH2 0x29FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A8C DUP4 PUSH2 0x3A57 JUMP JUMPDEST PUSH2 0x3AA0 PUSH2 0x3A98 DUP3 PUSH2 0x3A79 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3A05 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3AB5 PUSH2 0x3AA8 JUMP JUMPDEST PUSH2 0x3AC0 DUP2 DUP5 DUP5 PUSH2 0x3A83 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3AE4 JUMPI PUSH2 0x3AD9 PUSH1 0x0 DUP3 PUSH2 0x3AAD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3AC6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3B29 JUMPI PUSH2 0x3AFA DUP2 PUSH2 0x39D3 JUMP JUMPDEST PUSH2 0x3B03 DUP5 PUSH2 0x39E8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3B12 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3B26 PUSH2 0x3B1E DUP6 PUSH2 0x39E8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3AC5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3B2E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B65 DUP4 DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B7E DUP3 PUSH2 0x2949 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B97 JUMPI PUSH2 0x3B96 PUSH2 0x2B30 JUMP JUMPDEST JUMPDEST PUSH2 0x3BA1 DUP3 SLOAD PUSH2 0x3100 JUMP JUMPDEST PUSH2 0x3BAC DUP3 DUP3 DUP6 PUSH2 0x3AE8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3BDF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3BCD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3BD7 DUP6 DUP3 PUSH2 0x3B59 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3C3F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3BED DUP7 PUSH2 0x39D3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3C15 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3BF0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3C32 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3C2E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3B3B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C6E DUP3 PUSH2 0x3C47 JUMP JUMPDEST PUSH2 0x3C78 DUP2 DUP6 PUSH2 0x3C52 JUMP JUMPDEST SWAP4 POP PUSH2 0x3C88 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2965 JUMP JUMPDEST PUSH2 0x3C91 DUP2 PUSH2 0x298F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3CB1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x3CBE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x3CCB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2CF2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3CDD DUP2 DUP5 PUSH2 0x3C63 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3CF7 DUP2 PUSH2 0x28BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D13 JUMPI PUSH2 0x3D12 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D21 DUP5 DUP3 DUP6 ADD PUSH2 0x3CE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D40 DUP3 PUSH2 0x2949 JUMP JUMPDEST PUSH2 0x3D4A DUP2 DUP6 PUSH2 0x3D2A JUMP JUMPDEST SWAP4 POP PUSH2 0x3D5A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2965 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D72 DUP3 DUP6 PUSH2 0x3D35 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D7E DUP3 DUP5 PUSH2 0x3D35 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xDB CALLDATACOPY 0x21 LT 0xBD 0x4B PUSH5 0x44DDE837DE DUP6 0xE5 0xA7 PUSH19 0x650ED2EFA4DF7AA16070C4979498DA64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"480:7126:22:-:0;;;1956:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2070:10;1380:113:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2116:11:22::2;2096:10;;:32;;;;;;;;;;;;;;;;;;2172:10;2138:9;;:45;;;;;;;;;;;;;;;;;;1956:234:::0;;480:7126;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:28:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;480:7126:22:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1759":{"entryPoint":5718,"id":1759,"parameterSlots":3,"returnSlots":0},"@_approve_1825":{"entryPoint":8456,"id":1825,"parameterSlots":4,"returnSlots":0},"@_baseURI_1140":{"entryPoint":9141,"id":1140,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_1399":{"entryPoint":8945,"id":1399,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":6396,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_1326":{"entryPoint":5649,"id":1326,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_1362":{"entryPoint":9624,"id":1362,"parameterSlots":3,"returnSlots":1},"@_mint_1555":{"entryPoint":9375,"id":1555,"parameterSlots":2,"returnSlots":0},"@_msgSender_2270":{"entryPoint":5710,"id":2270,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1313":{"entryPoint":8395,"id":1313,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1891":{"entryPoint":5513,"id":1891,"parameterSlots":1,"returnSlots":1},"@_safeMint_1570":{"entryPoint":5736,"id":1570,"parameterSlots":2,"returnSlots":0},"@_safeMint_1600":{"entryPoint":8909,"id":1600,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1862":{"entryPoint":7094,"id":1862,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_2152":{"entryPoint":5766,"id":2152,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":6531,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_1693":{"entryPoint":6729,"id":1693,"parameterSlots":3,"returnSlots":0},"@_update_1505":{"entryPoint":5858,"id":1505,"parameterSlots":3,"returnSlots":1},"@approve_1156":{"entryPoint":1393,"id":1156,"parameterSlots":2,"returnSlots":0},"@balanceOf_1064":{"entryPoint":3934,"id":1064,"parameterSlots":1,"returnSlots":1},"@buyCallSpread_7356":{"entryPoint":4366,"id":7356,"parameterSlots":1,"returnSlots":0},"@calculatePayoff_7505":{"entryPoint":2556,"id":7505,"parameterSlots":2,"returnSlots":1},"@callSpreads_7127":{"entryPoint":4876,"id":7127,"parameterSlots":0,"returnSlots":0},"@checkOnERC721Received_2257":{"entryPoint":7461,"id":2257,"parameterSlots":5,"returnSlots":0},"@createCallSpread_7286":{"entryPoint":1415,"id":7286,"parameterSlots":5,"returnSlots":1},"@exerciseCallSpread_7461":{"entryPoint":2666,"id":7461,"parameterSlots":1,"returnSlots":0},"@getApproved_1173":{"entryPoint":1365,"id":1173,"parameterSlots":1,"returnSlots":1},"@getCurrentBTCPrice_7530":{"entryPoint":3706,"id":7530,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_1206":{"entryPoint":5096,"id":1206,"parameterSlots":2,"returnSlots":1},"@log10_4954":{"entryPoint":10023,"id":4954,"parameterSlots":1,"returnSlots":1},"@name_1086":{"entryPoint":1219,"id":1086,"parameterSlots":0,"returnSlots":1},"@ownerOf_1077":{"entryPoint":3688,"id":1077,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":4178,"id":67,"parameterSlots":0,"returnSlots":1},"@priceFeed_7133":{"entryPoint":4140,"id":7133,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":4120,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1270":{"entryPoint":3656,"id":1270,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1300":{"entryPoint":5041,"id":1300,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1189":{"entryPoint":5019,"id":1189,"parameterSlots":2,"returnSlots":0},"@stablecoin_7130":{"entryPoint":5244,"id":7130,"parameterSlots":0,"returnSlots":0},"@supportsInterface_1036":{"entryPoint":8169,"id":1036,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2076":{"entryPoint":5416,"id":2076,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3563":{"entryPoint":9269,"id":3563,"parameterSlots":1,"returnSlots":1},"@supportsInterface_7562":{"entryPoint":1201,"id":7562,"parameterSlots":1,"returnSlots":1},"@symbol_1095":{"entryPoint":4220,"id":1095,"parameterSlots":0,"returnSlots":1},"@toString_2418":{"entryPoint":9817,"id":2418,"parameterSlots":1,"returnSlots":1},"@tokenURI_1131":{"entryPoint":9164,"id":1131,"parameterSlots":1,"returnSlots":1},"@tokenURI_2133":{"entryPoint":7894,"id":2133,"parameterSlots":1,"returnSlots":1},"@tokenURI_7546":{"entryPoint":5078,"id":7546,"parameterSlots":1,"returnSlots":1},"@transferFrom_1252":{"entryPoint":2298,"id":1252,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":5282,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":12130,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":11243,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":11996,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":13048,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":10449,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":15592,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":12196,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":14168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":11309,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10780,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":14189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":14114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11695,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":12373,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":11548,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":12242,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":12017,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10982,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":13069,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":10470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":15613,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":10801,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":11631,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_string_memory_ptr":{"entryPoint":11355,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":14210,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10896,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10527,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":15459,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_AggregatorV3Interface_$7899_to_t_address_fromStack":{"entryPoint":11820,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$909_to_t_address_fromStack":{"entryPoint":12455,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":10656,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15669,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204_to_t_string_memory_ptr_fromStack":{"entryPoint":14374,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3_to_t_string_memory_ptr_fromStack":{"entryPoint":13666,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2_to_t_string_memory_ptr_fromStack":{"entryPoint":14590,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3_to_t_string_memory_ptr_fromStack":{"entryPoint":14482,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0_to_t_string_memory_ptr_fromStack":{"entryPoint":13558,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc_to_t_string_memory_ptr_fromStack":{"entryPoint":12926,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd_to_t_string_memory_ptr_fromStack":{"entryPoint":12818,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f_to_t_string_memory_ptr_fromStack":{"entryPoint":13155,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac_to_t_string_memory_ptr_fromStack":{"entryPoint":14736,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5_to_t_string_memory_ptr_fromStack":{"entryPoint":13961,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d_to_t_string_memory_ptr_fromStack":{"entryPoint":13815,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616_to_t_string_memory_ptr_fromStack":{"entryPoint":12672,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":11506,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":15718,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10911,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":12993,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":15516,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":13733,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":13410,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13341,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":10542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_AggregatorV3Interface_$7899__to_t_address__fromStack_reversed":{"entryPoint":11835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$909__to_t_address__fromStack_reversed":{"entryPoint":12470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10713,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14409,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13701,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14625,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14517,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13593,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12961,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12853,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13190,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14771,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13996,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13850,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12707,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":11521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":14028,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_address_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_address_t_bool__fromStack_reversed":{"entryPoint":11862,"id":null,"parameterSlots":8,"returnSlots":1},"allocate_memory":{"entryPoint":11152,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":10362,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":12081,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":11179,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":14803,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":15431,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":10569,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":15442,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":10580,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":15658,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13465,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":15080,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":10878,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10515,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":10382,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":14135,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":10846,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10747,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":14069,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":15045,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_contract$_AggregatorV3Interface_$7899_to_t_address":{"entryPoint":11802,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$909_to_t_address":{"entryPoint":12437,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":11784,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":11750,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":14935,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":15221,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":11228,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":10597,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":14824,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":12544,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":15193,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":11103,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":11740,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":13269,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":15163,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":13222,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":15754,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":12497,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":11056,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":14969,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":11046,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":11051,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":10377,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10372,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10639,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":14840,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":15150,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":15021,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204":{"entryPoint":14333,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3":{"entryPoint":13625,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2":{"entryPoint":14549,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3":{"entryPoint":14441,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0":{"entryPoint":13517,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc":{"entryPoint":12885,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd":{"entryPoint":12739,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f":{"entryPoint":13114,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac":{"entryPoint":14657,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5":{"entryPoint":13882,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d":{"entryPoint":13774,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616":{"entryPoint":12593,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":14853,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":14979,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10938,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":11973,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":10426,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":14145,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10757,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":14091,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":15016,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:40420:28","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:28","statements":[{"nodeType":"YulAssignment","src":"57:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:28"},"nodeType":"YulFunctionCall","src":"67:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:28"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:28","type":""}],"src":"7:75:28"},{"body":{"nodeType":"YulBlock","src":"177:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:28"},"nodeType":"YulFunctionCall","src":"187:12:28"},"nodeType":"YulExpressionStatement","src":"187:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:28"},{"body":{"nodeType":"YulBlock","src":"300:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:28"},"nodeType":"YulFunctionCall","src":"310:12:28"},"nodeType":"YulExpressionStatement","src":"310:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:28"},{"body":{"nodeType":"YulBlock","src":"378:105:28","statements":[{"nodeType":"YulAssignment","src":"388:89:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:28","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:28"},"nodeType":"YulFunctionCall","src":"399:78:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:28"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:28","type":""}],"src":"334:149:28"},{"body":{"nodeType":"YulBlock","src":"531:78:28","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:28"},"nodeType":"YulFunctionCall","src":"589:12:28"},"nodeType":"YulExpressionStatement","src":"589:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:28"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:28"},"nodeType":"YulFunctionCall","src":"561:23:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:28"},"nodeType":"YulFunctionCall","src":"551:34:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:28"},"nodeType":"YulFunctionCall","src":"544:42:28"},"nodeType":"YulIf","src":"541:62:28"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:28","type":""}],"src":"489:120:28"},{"body":{"nodeType":"YulBlock","src":"666:86:28","statements":[{"nodeType":"YulAssignment","src":"676:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:28"},"nodeType":"YulFunctionCall","src":"685:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:28"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:28"},"nodeType":"YulFunctionCall","src":"714:32:28"},"nodeType":"YulExpressionStatement","src":"714:32:28"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:28","type":""}],"src":"615:137:28"},{"body":{"nodeType":"YulBlock","src":"823:262:28","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:28"},"nodeType":"YulFunctionCall","src":"871:79:28"},"nodeType":"YulExpressionStatement","src":"871:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:28"},"nodeType":"YulFunctionCall","src":"840:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:28"},"nodeType":"YulFunctionCall","src":"836:32:28"},"nodeType":"YulIf","src":"833:119:28"},{"nodeType":"YulBlock","src":"962:116:28","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:28","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:28"},"nodeType":"YulFunctionCall","src":"1036:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:28"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:28"},"nodeType":"YulFunctionCall","src":"1016:52:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:28"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:28","type":""}],"src":"758:327:28"},{"body":{"nodeType":"YulBlock","src":"1133:48:28","statements":[{"nodeType":"YulAssignment","src":"1143:32:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:28"},"nodeType":"YulFunctionCall","src":"1161:13:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:28"},"nodeType":"YulFunctionCall","src":"1154:21:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:28"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:28","type":""}],"src":"1091:90:28"},{"body":{"nodeType":"YulBlock","src":"1246:50:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:28"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:28"},"nodeType":"YulFunctionCall","src":"1268:21:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:28"},"nodeType":"YulFunctionCall","src":"1256:34:28"},"nodeType":"YulExpressionStatement","src":"1256:34:28"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:28","type":""}],"src":"1187:109:28"},{"body":{"nodeType":"YulBlock","src":"1394:118:28","statements":[{"nodeType":"YulAssignment","src":"1404:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:28"},"nodeType":"YulFunctionCall","src":"1412:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:28"},"nodeType":"YulFunctionCall","src":"1487:17:28"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:28"},"nodeType":"YulFunctionCall","src":"1440:65:28"},"nodeType":"YulExpressionStatement","src":"1440:65:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:28","type":""}],"src":"1302:210:28"},{"body":{"nodeType":"YulBlock","src":"1577:40:28","statements":[{"nodeType":"YulAssignment","src":"1588:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:28"},"nodeType":"YulFunctionCall","src":"1598:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:28"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:28","type":""}],"src":"1518:99:28"},{"body":{"nodeType":"YulBlock","src":"1719:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:28"},"nodeType":"YulFunctionCall","src":"1729:19:28"},"nodeType":"YulExpressionStatement","src":"1729:19:28"},{"nodeType":"YulAssignment","src":"1757:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:28"},"nodeType":"YulFunctionCall","src":"1772:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:28"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:28","type":""}],"src":"1623:169:28"},{"body":{"nodeType":"YulBlock","src":"1860:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:28"},"nodeType":"YulFunctionCall","src":"1960:11:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:28"},"nodeType":"YulFunctionCall","src":"1979:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:28"},"nodeType":"YulFunctionCall","src":"1973:18:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:28"},"nodeType":"YulFunctionCall","src":"1953:39:28"},"nodeType":"YulExpressionStatement","src":"1953:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:28"},"nodeType":"YulFunctionCall","src":"1897:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:28","statements":[{"nodeType":"YulAssignment","src":"1913:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:28"},"nodeType":"YulFunctionCall","src":"1918:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:28","statements":[]},"src":"1889:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:28"},"nodeType":"YulFunctionCall","src":"2018:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:28"},"nodeType":"YulFunctionCall","src":"2011:27:28"},"nodeType":"YulExpressionStatement","src":"2011:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:28","type":""}],"src":"1798:246:28"},{"body":{"nodeType":"YulBlock","src":"2098:54:28","statements":[{"nodeType":"YulAssignment","src":"2108:38:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:28"},"nodeType":"YulFunctionCall","src":"2122:14:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:28"},"nodeType":"YulFunctionCall","src":"2138:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:28"},"nodeType":"YulFunctionCall","src":"2118:28:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:28"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:28","type":""}],"src":"2050:102:28"},{"body":{"nodeType":"YulBlock","src":"2250:285:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:28"},"nodeType":"YulFunctionCall","src":"2274:39:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:28","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:28"},"nodeType":"YulFunctionCall","src":"2329:71:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:28"},"nodeType":"YulFunctionCall","src":"2444:16:28"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:28"},"nodeType":"YulFunctionCall","src":"2409:65:28"},"nodeType":"YulExpressionStatement","src":"2409:65:28"},{"nodeType":"YulAssignment","src":"2483:46:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:28"},"nodeType":"YulFunctionCall","src":"2499:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:28"},"nodeType":"YulFunctionCall","src":"2490:39:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:28"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:28","type":""}],"src":"2158:377:28"},{"body":{"nodeType":"YulBlock","src":"2659:195:28","statements":[{"nodeType":"YulAssignment","src":"2669:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:28"},"nodeType":"YulFunctionCall","src":"2677:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:28"},"nodeType":"YulFunctionCall","src":"2712:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:28"},"nodeType":"YulFunctionCall","src":"2731:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:28"},"nodeType":"YulFunctionCall","src":"2705:47:28"},"nodeType":"YulExpressionStatement","src":"2705:47:28"},{"nodeType":"YulAssignment","src":"2761:86:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:28"},"nodeType":"YulFunctionCall","src":"2769:78:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:28","type":""}],"src":"2541:313:28"},{"body":{"nodeType":"YulBlock","src":"2905:32:28","statements":[{"nodeType":"YulAssignment","src":"2915:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:28","type":""}],"src":"2860:77:28"},{"body":{"nodeType":"YulBlock","src":"2986:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:28"},"nodeType":"YulFunctionCall","src":"3045:12:28"},"nodeType":"YulExpressionStatement","src":"3045:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:28"},"nodeType":"YulFunctionCall","src":"3016:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:28"},"nodeType":"YulFunctionCall","src":"3006:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:28"},"nodeType":"YulFunctionCall","src":"2999:43:28"},"nodeType":"YulIf","src":"2996:63:28"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:28","type":""}],"src":"2943:122:28"},{"body":{"nodeType":"YulBlock","src":"3123:87:28","statements":[{"nodeType":"YulAssignment","src":"3133:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:28"},"nodeType":"YulFunctionCall","src":"3142:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:28"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:28"},"nodeType":"YulFunctionCall","src":"3171:33:28"},"nodeType":"YulExpressionStatement","src":"3171:33:28"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:28","type":""}],"src":"3071:139:28"},{"body":{"nodeType":"YulBlock","src":"3282:263:28","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:28"},"nodeType":"YulFunctionCall","src":"3330:79:28"},"nodeType":"YulExpressionStatement","src":"3330:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:28"},"nodeType":"YulFunctionCall","src":"3299:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:28"},"nodeType":"YulFunctionCall","src":"3295:32:28"},"nodeType":"YulIf","src":"3292:119:28"},{"nodeType":"YulBlock","src":"3421:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:28","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:28"},"nodeType":"YulFunctionCall","src":"3496:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:28"},"nodeType":"YulFunctionCall","src":"3475:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:28","type":""}],"src":"3216:329:28"},{"body":{"nodeType":"YulBlock","src":"3596:81:28","statements":[{"nodeType":"YulAssignment","src":"3606:65:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:28"},"nodeType":"YulFunctionCall","src":"3617:54:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:28"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:28","type":""}],"src":"3551:126:28"},{"body":{"nodeType":"YulBlock","src":"3728:51:28","statements":[{"nodeType":"YulAssignment","src":"3738:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:28"},"nodeType":"YulFunctionCall","src":"3749:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:28"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:28","type":""}],"src":"3683:96:28"},{"body":{"nodeType":"YulBlock","src":"3850:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:28"},"nodeType":"YulFunctionCall","src":"3872:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:28"},"nodeType":"YulFunctionCall","src":"3860:37:28"},"nodeType":"YulExpressionStatement","src":"3860:37:28"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:28","type":""}],"src":"3785:118:28"},{"body":{"nodeType":"YulBlock","src":"4007:124:28","statements":[{"nodeType":"YulAssignment","src":"4017:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:28"},"nodeType":"YulFunctionCall","src":"4025:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:28"},"nodeType":"YulFunctionCall","src":"4106:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:28"},"nodeType":"YulFunctionCall","src":"4053:71:28"},"nodeType":"YulExpressionStatement","src":"4053:71:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:28","type":""}],"src":"3909:222:28"},{"body":{"nodeType":"YulBlock","src":"4180:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:28"},"nodeType":"YulFunctionCall","src":"4239:12:28"},"nodeType":"YulExpressionStatement","src":"4239:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:28"},"nodeType":"YulFunctionCall","src":"4210:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:28"},"nodeType":"YulFunctionCall","src":"4200:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:28"},"nodeType":"YulFunctionCall","src":"4193:43:28"},"nodeType":"YulIf","src":"4190:63:28"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:28","type":""}],"src":"4137:122:28"},{"body":{"nodeType":"YulBlock","src":"4317:87:28","statements":[{"nodeType":"YulAssignment","src":"4327:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:28"},"nodeType":"YulFunctionCall","src":"4336:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:28"},"nodeType":"YulFunctionCall","src":"4365:33:28"},"nodeType":"YulExpressionStatement","src":"4365:33:28"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:28","type":""}],"src":"4265:139:28"},{"body":{"nodeType":"YulBlock","src":"4493:391:28","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:28"},"nodeType":"YulFunctionCall","src":"4541:79:28"},"nodeType":"YulExpressionStatement","src":"4541:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:28"},"nodeType":"YulFunctionCall","src":"4510:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:28"},"nodeType":"YulFunctionCall","src":"4506:32:28"},"nodeType":"YulIf","src":"4503:119:28"},{"nodeType":"YulBlock","src":"4632:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:28"},"nodeType":"YulFunctionCall","src":"4707:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:28"},"nodeType":"YulFunctionCall","src":"4686:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:28"}]}]},{"nodeType":"YulBlock","src":"4759:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:28"},"nodeType":"YulFunctionCall","src":"4835:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:28"},"nodeType":"YulFunctionCall","src":"4814:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:28","type":""}],"src":"4410:474:28"},{"body":{"nodeType":"YulBlock","src":"4979:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4996:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4999:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4989:6:28"},"nodeType":"YulFunctionCall","src":"4989:12:28"},"nodeType":"YulExpressionStatement","src":"4989:12:28"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4890:117:28"},{"body":{"nodeType":"YulBlock","src":"5102:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5119:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5122:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5112:6:28"},"nodeType":"YulFunctionCall","src":"5112:12:28"},"nodeType":"YulExpressionStatement","src":"5112:12:28"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"5013:117:28"},{"body":{"nodeType":"YulBlock","src":"5164:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5181:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5184:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5174:6:28"},"nodeType":"YulFunctionCall","src":"5174:88:28"},"nodeType":"YulExpressionStatement","src":"5174:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5278:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5281:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5271:6:28"},"nodeType":"YulFunctionCall","src":"5271:15:28"},"nodeType":"YulExpressionStatement","src":"5271:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5302:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5305:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5295:6:28"},"nodeType":"YulFunctionCall","src":"5295:15:28"},"nodeType":"YulExpressionStatement","src":"5295:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5136:180:28"},{"body":{"nodeType":"YulBlock","src":"5365:238:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:58:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5397:6:28"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5427:4:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5405:21:28"},"nodeType":"YulFunctionCall","src":"5405:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5393:3:28"},"nodeType":"YulFunctionCall","src":"5393:40:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5379:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5544:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5546:16:28"},"nodeType":"YulFunctionCall","src":"5546:18:28"},"nodeType":"YulExpressionStatement","src":"5546:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5487:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"5499:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5484:2:28"},"nodeType":"YulFunctionCall","src":"5484:34:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5523:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5535:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5520:2:28"},"nodeType":"YulFunctionCall","src":"5520:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5481:2:28"},"nodeType":"YulFunctionCall","src":"5481:62:28"},"nodeType":"YulIf","src":"5478:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5582:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5586:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5575:6:28"},"nodeType":"YulFunctionCall","src":"5575:22:28"},"nodeType":"YulExpressionStatement","src":"5575:22:28"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5351:6:28","type":""},{"name":"size","nodeType":"YulTypedName","src":"5359:4:28","type":""}],"src":"5322:281:28"},{"body":{"nodeType":"YulBlock","src":"5650:88:28","statements":[{"nodeType":"YulAssignment","src":"5660:30:28","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5670:18:28"},"nodeType":"YulFunctionCall","src":"5670:20:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5660:6:28"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5719:6:28"},{"name":"size","nodeType":"YulIdentifier","src":"5727:4:28"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5699:19:28"},"nodeType":"YulFunctionCall","src":"5699:33:28"},"nodeType":"YulExpressionStatement","src":"5699:33:28"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5634:4:28","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5643:6:28","type":""}],"src":"5609:129:28"},{"body":{"nodeType":"YulBlock","src":"5811:241:28","statements":[{"body":{"nodeType":"YulBlock","src":"5916:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5918:16:28"},"nodeType":"YulFunctionCall","src":"5918:18:28"},"nodeType":"YulExpressionStatement","src":"5918:18:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5888:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5896:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5885:2:28"},"nodeType":"YulFunctionCall","src":"5885:30:28"},"nodeType":"YulIf","src":"5882:56:28"},{"nodeType":"YulAssignment","src":"5948:37:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5978:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5956:21:28"},"nodeType":"YulFunctionCall","src":"5956:29:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5948:4:28"}]},{"nodeType":"YulAssignment","src":"6022:23:28","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6034:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"6040:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6030:3:28"},"nodeType":"YulFunctionCall","src":"6030:15:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6022:4:28"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5795:6:28","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5806:4:28","type":""}],"src":"5744:308:28"},{"body":{"nodeType":"YulBlock","src":"6122:82:28","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6145:3:28"},{"name":"src","nodeType":"YulIdentifier","src":"6150:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"6155:6:28"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6132:12:28"},"nodeType":"YulFunctionCall","src":"6132:30:28"},"nodeType":"YulExpressionStatement","src":"6132:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6182:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"6187:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6178:3:28"},"nodeType":"YulFunctionCall","src":"6178:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"6196:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6171:6:28"},"nodeType":"YulFunctionCall","src":"6171:27:28"},"nodeType":"YulExpressionStatement","src":"6171:27:28"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6104:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6109:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"6114:6:28","type":""}],"src":"6058:146:28"},{"body":{"nodeType":"YulBlock","src":"6294:341:28","statements":[{"nodeType":"YulAssignment","src":"6304:75:28","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6371:6:28"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6329:41:28"},"nodeType":"YulFunctionCall","src":"6329:49:28"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6313:15:28"},"nodeType":"YulFunctionCall","src":"6313:66:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6304:5:28"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6395:5:28"},{"name":"length","nodeType":"YulIdentifier","src":"6402:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6388:6:28"},"nodeType":"YulFunctionCall","src":"6388:21:28"},"nodeType":"YulExpressionStatement","src":"6388:21:28"},{"nodeType":"YulVariableDeclaration","src":"6418:27:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6433:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"6440:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6429:3:28"},"nodeType":"YulFunctionCall","src":"6429:16:28"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6422:3:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6483:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"6485:77:28"},"nodeType":"YulFunctionCall","src":"6485:79:28"},"nodeType":"YulExpressionStatement","src":"6485:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6464:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"6469:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6460:3:28"},"nodeType":"YulFunctionCall","src":"6460:16:28"},{"name":"end","nodeType":"YulIdentifier","src":"6478:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6457:2:28"},"nodeType":"YulFunctionCall","src":"6457:25:28"},"nodeType":"YulIf","src":"6454:112:28"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6612:3:28"},{"name":"dst","nodeType":"YulIdentifier","src":"6617:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"6622:6:28"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6575:36:28"},"nodeType":"YulFunctionCall","src":"6575:54:28"},"nodeType":"YulExpressionStatement","src":"6575:54:28"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6267:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"6272:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"6280:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6288:5:28","type":""}],"src":"6210:425:28"},{"body":{"nodeType":"YulBlock","src":"6717:278:28","statements":[{"body":{"nodeType":"YulBlock","src":"6766:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6768:77:28"},"nodeType":"YulFunctionCall","src":"6768:79:28"},"nodeType":"YulExpressionStatement","src":"6768:79:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6745:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6753:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6741:3:28"},"nodeType":"YulFunctionCall","src":"6741:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"6760:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6737:3:28"},"nodeType":"YulFunctionCall","src":"6737:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6730:6:28"},"nodeType":"YulFunctionCall","src":"6730:35:28"},"nodeType":"YulIf","src":"6727:122:28"},{"nodeType":"YulVariableDeclaration","src":"6858:34:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6885:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6872:12:28"},"nodeType":"YulFunctionCall","src":"6872:20:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6862:6:28","type":""}]},{"nodeType":"YulAssignment","src":"6901:88:28","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6962:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6970:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6958:3:28"},"nodeType":"YulFunctionCall","src":"6958:17:28"},{"name":"length","nodeType":"YulIdentifier","src":"6977:6:28"},{"name":"end","nodeType":"YulIdentifier","src":"6985:3:28"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6910:47:28"},"nodeType":"YulFunctionCall","src":"6910:79:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6901:5:28"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6695:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"6703:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6711:5:28","type":""}],"src":"6655:340:28"},{"body":{"nodeType":"YulBlock","src":"7145:947:28","statements":[{"body":{"nodeType":"YulBlock","src":"7192:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7194:77:28"},"nodeType":"YulFunctionCall","src":"7194:79:28"},"nodeType":"YulExpressionStatement","src":"7194:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7166:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"7175:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7162:3:28"},"nodeType":"YulFunctionCall","src":"7162:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"7187:3:28","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7158:3:28"},"nodeType":"YulFunctionCall","src":"7158:33:28"},"nodeType":"YulIf","src":"7155:120:28"},{"nodeType":"YulBlock","src":"7285:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7300:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7314:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7304:6:28","type":""}]},{"nodeType":"YulAssignment","src":"7329:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7364:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"7375:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7360:3:28"},"nodeType":"YulFunctionCall","src":"7360:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7384:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7339:20:28"},"nodeType":"YulFunctionCall","src":"7339:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7329:6:28"}]}]},{"nodeType":"YulBlock","src":"7412:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7427:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7441:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7431:6:28","type":""}]},{"nodeType":"YulAssignment","src":"7457:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7492:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"7503:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:28"},"nodeType":"YulFunctionCall","src":"7488:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7512:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7467:20:28"},"nodeType":"YulFunctionCall","src":"7467:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7457:6:28"}]}]},{"nodeType":"YulBlock","src":"7540:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7555:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7569:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7559:6:28","type":""}]},{"nodeType":"YulAssignment","src":"7585:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7620:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"7631:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7616:3:28"},"nodeType":"YulFunctionCall","src":"7616:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7640:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7595:20:28"},"nodeType":"YulFunctionCall","src":"7595:53:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7585:6:28"}]}]},{"nodeType":"YulBlock","src":"7668:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7683:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7697:2:28","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7687:6:28","type":""}]},{"nodeType":"YulAssignment","src":"7713:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7748:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"7759:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7744:3:28"},"nodeType":"YulFunctionCall","src":"7744:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7768:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7723:20:28"},"nodeType":"YulFunctionCall","src":"7723:53:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7713:6:28"}]}]},{"nodeType":"YulBlock","src":"7796:289:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7811:47:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7842:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7853:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7838:3:28"},"nodeType":"YulFunctionCall","src":"7838:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7825:12:28"},"nodeType":"YulFunctionCall","src":"7825:33:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7815:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7905:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7907:77:28"},"nodeType":"YulFunctionCall","src":"7907:79:28"},"nodeType":"YulExpressionStatement","src":"7907:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7877:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7885:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7874:2:28"},"nodeType":"YulFunctionCall","src":"7874:30:28"},"nodeType":"YulIf","src":"7871:117:28"},{"nodeType":"YulAssignment","src":"8002:73:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8047:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"8058:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:28"},"nodeType":"YulFunctionCall","src":"8043:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8067:7:28"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8012:30:28"},"nodeType":"YulFunctionCall","src":"8012:63:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"8002:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7083:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7094:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7106:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7114:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7122:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7130:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7138:6:28","type":""}],"src":"7001:1091:28"},{"body":{"nodeType":"YulBlock","src":"8163:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8180:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8203:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8185:17:28"},"nodeType":"YulFunctionCall","src":"8185:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8173:6:28"},"nodeType":"YulFunctionCall","src":"8173:37:28"},"nodeType":"YulExpressionStatement","src":"8173:37:28"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8151:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8158:3:28","type":""}],"src":"8098:118:28"},{"body":{"nodeType":"YulBlock","src":"8320:124:28","statements":[{"nodeType":"YulAssignment","src":"8330:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8342:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8353:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8338:3:28"},"nodeType":"YulFunctionCall","src":"8338:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8330:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8410:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8423:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8434:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8419:3:28"},"nodeType":"YulFunctionCall","src":"8419:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8366:43:28"},"nodeType":"YulFunctionCall","src":"8366:71:28"},"nodeType":"YulExpressionStatement","src":"8366:71:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8292:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8304:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8315:4:28","type":""}],"src":"8222:222:28"},{"body":{"nodeType":"YulBlock","src":"8550:519:28","statements":[{"body":{"nodeType":"YulBlock","src":"8596:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8598:77:28"},"nodeType":"YulFunctionCall","src":"8598:79:28"},"nodeType":"YulExpressionStatement","src":"8598:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8571:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"8580:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8567:3:28"},"nodeType":"YulFunctionCall","src":"8567:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"8592:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8563:3:28"},"nodeType":"YulFunctionCall","src":"8563:32:28"},"nodeType":"YulIf","src":"8560:119:28"},{"nodeType":"YulBlock","src":"8689:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8704:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8718:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8708:6:28","type":""}]},{"nodeType":"YulAssignment","src":"8733:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8768:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"8779:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8764:3:28"},"nodeType":"YulFunctionCall","src":"8764:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8788:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8743:20:28"},"nodeType":"YulFunctionCall","src":"8743:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8733:6:28"}]}]},{"nodeType":"YulBlock","src":"8816:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8831:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8845:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8835:6:28","type":""}]},{"nodeType":"YulAssignment","src":"8861:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8896:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"8907:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8892:3:28"},"nodeType":"YulFunctionCall","src":"8892:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8916:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8871:20:28"},"nodeType":"YulFunctionCall","src":"8871:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8861:6:28"}]}]},{"nodeType":"YulBlock","src":"8944:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8959:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8973:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8963:6:28","type":""}]},{"nodeType":"YulAssignment","src":"8989:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9024:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"9035:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9020:3:28"},"nodeType":"YulFunctionCall","src":"9020:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9044:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8999:20:28"},"nodeType":"YulFunctionCall","src":"8999:53:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8989:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8504:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8515:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8527:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8535:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8543:6:28","type":""}],"src":"8450:619:28"},{"body":{"nodeType":"YulBlock","src":"9158:391:28","statements":[{"body":{"nodeType":"YulBlock","src":"9204:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9206:77:28"},"nodeType":"YulFunctionCall","src":"9206:79:28"},"nodeType":"YulExpressionStatement","src":"9206:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9179:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"9188:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9175:3:28"},"nodeType":"YulFunctionCall","src":"9175:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9171:3:28"},"nodeType":"YulFunctionCall","src":"9171:32:28"},"nodeType":"YulIf","src":"9168:119:28"},{"nodeType":"YulBlock","src":"9297:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9312:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9326:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9316:6:28","type":""}]},{"nodeType":"YulAssignment","src":"9341:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9376:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"9387:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9372:3:28"},"nodeType":"YulFunctionCall","src":"9372:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9396:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9351:20:28"},"nodeType":"YulFunctionCall","src":"9351:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9341:6:28"}]}]},{"nodeType":"YulBlock","src":"9424:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9439:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9453:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9443:6:28","type":""}]},{"nodeType":"YulAssignment","src":"9469:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9504:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"9515:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9500:3:28"},"nodeType":"YulFunctionCall","src":"9500:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9524:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9479:20:28"},"nodeType":"YulFunctionCall","src":"9479:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9469:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9120:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9131:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9143:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9151:6:28","type":""}],"src":"9075:474:28"},{"body":{"nodeType":"YulBlock","src":"9621:263:28","statements":[{"body":{"nodeType":"YulBlock","src":"9667:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9669:77:28"},"nodeType":"YulFunctionCall","src":"9669:79:28"},"nodeType":"YulExpressionStatement","src":"9669:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9642:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"9651:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9638:3:28"},"nodeType":"YulFunctionCall","src":"9638:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"9663:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9634:3:28"},"nodeType":"YulFunctionCall","src":"9634:32:28"},"nodeType":"YulIf","src":"9631:119:28"},{"nodeType":"YulBlock","src":"9760:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9775:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9789:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9779:6:28","type":""}]},{"nodeType":"YulAssignment","src":"9804:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9839:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"9850:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9835:3:28"},"nodeType":"YulFunctionCall","src":"9835:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9859:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9814:20:28"},"nodeType":"YulFunctionCall","src":"9814:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9804:6:28"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9591:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9602:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9614:6:28","type":""}],"src":"9555:329:28"},{"body":{"nodeType":"YulBlock","src":"9922:28:28","statements":[{"nodeType":"YulAssignment","src":"9932:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"9939:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9932:3:28"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9908:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9918:3:28","type":""}],"src":"9890:60:28"},{"body":{"nodeType":"YulBlock","src":"10016:82:28","statements":[{"nodeType":"YulAssignment","src":"10026:66:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10084:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10066:17:28"},"nodeType":"YulFunctionCall","src":"10066:24:28"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"10057:8:28"},"nodeType":"YulFunctionCall","src":"10057:34:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10039:17:28"},"nodeType":"YulFunctionCall","src":"10039:53:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10026:9:28"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9996:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10006:9:28","type":""}],"src":"9956:142:28"},{"body":{"nodeType":"YulBlock","src":"10164:66:28","statements":[{"nodeType":"YulAssignment","src":"10174:50:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10218:5:28"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"10187:30:28"},"nodeType":"YulFunctionCall","src":"10187:37:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10174:9:28"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10144:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10154:9:28","type":""}],"src":"10104:126:28"},{"body":{"nodeType":"YulBlock","src":"10326:66:28","statements":[{"nodeType":"YulAssignment","src":"10336:50:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10380:5:28"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"10349:30:28"},"nodeType":"YulFunctionCall","src":"10349:37:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10336:9:28"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$7899_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10306:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10316:9:28","type":""}],"src":"10236:156:28"},{"body":{"nodeType":"YulBlock","src":"10493:96:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10510:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10576:5:28"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$7899_to_t_address","nodeType":"YulIdentifier","src":"10515:60:28"},"nodeType":"YulFunctionCall","src":"10515:67:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10503:6:28"},"nodeType":"YulFunctionCall","src":"10503:80:28"},"nodeType":"YulExpressionStatement","src":"10503:80:28"}]},"name":"abi_encode_t_contract$_AggregatorV3Interface_$7899_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10481:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10488:3:28","type":""}],"src":"10398:191:28"},{"body":{"nodeType":"YulBlock","src":"10723:154:28","statements":[{"nodeType":"YulAssignment","src":"10733:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10745:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10756:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10741:3:28"},"nodeType":"YulFunctionCall","src":"10741:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10733:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10843:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10856:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10867:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10852:3:28"},"nodeType":"YulFunctionCall","src":"10852:17:28"}],"functionName":{"name":"abi_encode_t_contract$_AggregatorV3Interface_$7899_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10769:73:28"},"nodeType":"YulFunctionCall","src":"10769:101:28"},"nodeType":"YulExpressionStatement","src":"10769:101:28"}]},"name":"abi_encode_tuple_t_contract$_AggregatorV3Interface_$7899__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10695:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10707:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10718:4:28","type":""}],"src":"10595:282:28"},{"body":{"nodeType":"YulBlock","src":"11143:614:28","statements":[{"nodeType":"YulAssignment","src":"11153:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11165:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11176:3:28","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11161:3:28"},"nodeType":"YulFunctionCall","src":"11161:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11153:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11234:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11247:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11258:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11243:3:28"},"nodeType":"YulFunctionCall","src":"11243:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11190:43:28"},"nodeType":"YulFunctionCall","src":"11190:71:28"},"nodeType":"YulExpressionStatement","src":"11190:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11315:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11328:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11339:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11324:3:28"},"nodeType":"YulFunctionCall","src":"11324:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11271:43:28"},"nodeType":"YulFunctionCall","src":"11271:72:28"},"nodeType":"YulExpressionStatement","src":"11271:72:28"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11397:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11410:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11421:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11406:3:28"},"nodeType":"YulFunctionCall","src":"11406:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11353:43:28"},"nodeType":"YulFunctionCall","src":"11353:72:28"},"nodeType":"YulExpressionStatement","src":"11353:72:28"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11479:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11492:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11503:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11488:3:28"},"nodeType":"YulFunctionCall","src":"11488:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11435:43:28"},"nodeType":"YulFunctionCall","src":"11435:72:28"},"nodeType":"YulExpressionStatement","src":"11435:72:28"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11561:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11574:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11585:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11570:3:28"},"nodeType":"YulFunctionCall","src":"11570:19:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11517:43:28"},"nodeType":"YulFunctionCall","src":"11517:73:28"},"nodeType":"YulExpressionStatement","src":"11517:73:28"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"11644:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11657:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11668:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11653:3:28"},"nodeType":"YulFunctionCall","src":"11653:19:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11600:43:28"},"nodeType":"YulFunctionCall","src":"11600:73:28"},"nodeType":"YulExpressionStatement","src":"11600:73:28"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"11721:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11734:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11745:3:28","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11730:3:28"},"nodeType":"YulFunctionCall","src":"11730:19:28"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"11683:37:28"},"nodeType":"YulFunctionCall","src":"11683:67:28"},"nodeType":"YulExpressionStatement","src":"11683:67:28"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_address_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11067:9:28","type":""},{"name":"value6","nodeType":"YulTypedName","src":"11079:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11087:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11095:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11103:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11111:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11119:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11127:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11138:4:28","type":""}],"src":"10883:874:28"},{"body":{"nodeType":"YulBlock","src":"11803:76:28","statements":[{"body":{"nodeType":"YulBlock","src":"11857:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11866:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11869:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11859:6:28"},"nodeType":"YulFunctionCall","src":"11859:12:28"},"nodeType":"YulExpressionStatement","src":"11859:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11826:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11848:5:28"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"11833:14:28"},"nodeType":"YulFunctionCall","src":"11833:21:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11823:2:28"},"nodeType":"YulFunctionCall","src":"11823:32:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11816:6:28"},"nodeType":"YulFunctionCall","src":"11816:40:28"},"nodeType":"YulIf","src":"11813:60:28"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11796:5:28","type":""}],"src":"11763:116:28"},{"body":{"nodeType":"YulBlock","src":"11934:84:28","statements":[{"nodeType":"YulAssignment","src":"11944:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11966:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11953:12:28"},"nodeType":"YulFunctionCall","src":"11953:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11944:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12006:5:28"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"11982:23:28"},"nodeType":"YulFunctionCall","src":"11982:30:28"},"nodeType":"YulExpressionStatement","src":"11982:30:28"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11912:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"11920:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11928:5:28","type":""}],"src":"11885:133:28"},{"body":{"nodeType":"YulBlock","src":"12104:388:28","statements":[{"body":{"nodeType":"YulBlock","src":"12150:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12152:77:28"},"nodeType":"YulFunctionCall","src":"12152:79:28"},"nodeType":"YulExpressionStatement","src":"12152:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12125:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"12134:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12121:3:28"},"nodeType":"YulFunctionCall","src":"12121:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"12146:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12117:3:28"},"nodeType":"YulFunctionCall","src":"12117:32:28"},"nodeType":"YulIf","src":"12114:119:28"},{"nodeType":"YulBlock","src":"12243:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"12258:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"12272:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12262:6:28","type":""}]},{"nodeType":"YulAssignment","src":"12287:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12322:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"12333:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12318:3:28"},"nodeType":"YulFunctionCall","src":"12318:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12342:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12297:20:28"},"nodeType":"YulFunctionCall","src":"12297:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12287:6:28"}]}]},{"nodeType":"YulBlock","src":"12370:115:28","statements":[{"nodeType":"YulVariableDeclaration","src":"12385:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"12399:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12389:6:28","type":""}]},{"nodeType":"YulAssignment","src":"12415:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12447:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"12458:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12443:3:28"},"nodeType":"YulFunctionCall","src":"12443:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12467:7:28"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"12425:17:28"},"nodeType":"YulFunctionCall","src":"12425:50:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12415:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12066:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12077:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12089:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12097:6:28","type":""}],"src":"12024:468:28"},{"body":{"nodeType":"YulBlock","src":"12564:241:28","statements":[{"body":{"nodeType":"YulBlock","src":"12669:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12671:16:28"},"nodeType":"YulFunctionCall","src":"12671:18:28"},"nodeType":"YulExpressionStatement","src":"12671:18:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12641:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"12649:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12638:2:28"},"nodeType":"YulFunctionCall","src":"12638:30:28"},"nodeType":"YulIf","src":"12635:56:28"},{"nodeType":"YulAssignment","src":"12701:37:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12731:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12709:21:28"},"nodeType":"YulFunctionCall","src":"12709:29:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"12701:4:28"}]},{"nodeType":"YulAssignment","src":"12775:23:28","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"12787:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"12793:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12783:3:28"},"nodeType":"YulFunctionCall","src":"12783:15:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"12775:4:28"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"12548:6:28","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"12559:4:28","type":""}],"src":"12498:307:28"},{"body":{"nodeType":"YulBlock","src":"12894:340:28","statements":[{"nodeType":"YulAssignment","src":"12904:74:28","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12970:6:28"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12929:40:28"},"nodeType":"YulFunctionCall","src":"12929:48:28"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"12913:15:28"},"nodeType":"YulFunctionCall","src":"12913:65:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"12904:5:28"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"12994:5:28"},{"name":"length","nodeType":"YulIdentifier","src":"13001:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12987:6:28"},"nodeType":"YulFunctionCall","src":"12987:21:28"},"nodeType":"YulExpressionStatement","src":"12987:21:28"},{"nodeType":"YulVariableDeclaration","src":"13017:27:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13032:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"13039:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13028:3:28"},"nodeType":"YulFunctionCall","src":"13028:16:28"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13021:3:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"13082:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"13084:77:28"},"nodeType":"YulFunctionCall","src":"13084:79:28"},"nodeType":"YulExpressionStatement","src":"13084:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13063:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"13068:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13059:3:28"},"nodeType":"YulFunctionCall","src":"13059:16:28"},{"name":"end","nodeType":"YulIdentifier","src":"13077:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13056:2:28"},"nodeType":"YulFunctionCall","src":"13056:25:28"},"nodeType":"YulIf","src":"13053:112:28"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13211:3:28"},{"name":"dst","nodeType":"YulIdentifier","src":"13216:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"13221:6:28"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13174:36:28"},"nodeType":"YulFunctionCall","src":"13174:54:28"},"nodeType":"YulExpressionStatement","src":"13174:54:28"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12867:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"12872:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"12880:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"12888:5:28","type":""}],"src":"12811:423:28"},{"body":{"nodeType":"YulBlock","src":"13314:277:28","statements":[{"body":{"nodeType":"YulBlock","src":"13363:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"13365:77:28"},"nodeType":"YulFunctionCall","src":"13365:79:28"},"nodeType":"YulExpressionStatement","src":"13365:79:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13342:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"13350:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13338:3:28"},"nodeType":"YulFunctionCall","src":"13338:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"13357:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13334:3:28"},"nodeType":"YulFunctionCall","src":"13334:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13327:6:28"},"nodeType":"YulFunctionCall","src":"13327:35:28"},"nodeType":"YulIf","src":"13324:122:28"},{"nodeType":"YulVariableDeclaration","src":"13455:34:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13482:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13469:12:28"},"nodeType":"YulFunctionCall","src":"13469:20:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13459:6:28","type":""}]},{"nodeType":"YulAssignment","src":"13498:87:28","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13558:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"13566:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13554:3:28"},"nodeType":"YulFunctionCall","src":"13554:17:28"},{"name":"length","nodeType":"YulIdentifier","src":"13573:6:28"},{"name":"end","nodeType":"YulIdentifier","src":"13581:3:28"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13507:46:28"},"nodeType":"YulFunctionCall","src":"13507:78:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13498:5:28"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13292:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"13300:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13308:5:28","type":""}],"src":"13253:338:28"},{"body":{"nodeType":"YulBlock","src":"13723:817:28","statements":[{"body":{"nodeType":"YulBlock","src":"13770:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13772:77:28"},"nodeType":"YulFunctionCall","src":"13772:79:28"},"nodeType":"YulExpressionStatement","src":"13772:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13744:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"13753:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13740:3:28"},"nodeType":"YulFunctionCall","src":"13740:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"13765:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13736:3:28"},"nodeType":"YulFunctionCall","src":"13736:33:28"},"nodeType":"YulIf","src":"13733:120:28"},{"nodeType":"YulBlock","src":"13863:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"13878:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"13892:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13882:6:28","type":""}]},{"nodeType":"YulAssignment","src":"13907:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13942:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"13953:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13938:3:28"},"nodeType":"YulFunctionCall","src":"13938:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13962:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13917:20:28"},"nodeType":"YulFunctionCall","src":"13917:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13907:6:28"}]}]},{"nodeType":"YulBlock","src":"13990:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"14005:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"14019:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14009:6:28","type":""}]},{"nodeType":"YulAssignment","src":"14035:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14070:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"14081:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14066:3:28"},"nodeType":"YulFunctionCall","src":"14066:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14090:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14045:20:28"},"nodeType":"YulFunctionCall","src":"14045:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14035:6:28"}]}]},{"nodeType":"YulBlock","src":"14118:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"14133:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"14147:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14137:6:28","type":""}]},{"nodeType":"YulAssignment","src":"14163:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14198:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"14209:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14194:3:28"},"nodeType":"YulFunctionCall","src":"14194:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14218:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14173:20:28"},"nodeType":"YulFunctionCall","src":"14173:53:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14163:6:28"}]}]},{"nodeType":"YulBlock","src":"14246:287:28","statements":[{"nodeType":"YulVariableDeclaration","src":"14261:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14292:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14303:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14288:3:28"},"nodeType":"YulFunctionCall","src":"14288:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14275:12:28"},"nodeType":"YulFunctionCall","src":"14275:32:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14265:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"14354:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14356:77:28"},"nodeType":"YulFunctionCall","src":"14356:79:28"},"nodeType":"YulExpressionStatement","src":"14356:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14326:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"14334:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14323:2:28"},"nodeType":"YulFunctionCall","src":"14323:30:28"},"nodeType":"YulIf","src":"14320:117:28"},{"nodeType":"YulAssignment","src":"14451:72:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14495:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"14506:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14491:3:28"},"nodeType":"YulFunctionCall","src":"14491:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14515:7:28"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14461:29:28"},"nodeType":"YulFunctionCall","src":"14461:62:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14451:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13669:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13680:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13692:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13700:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13708:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13716:6:28","type":""}],"src":"13597:943:28"},{"body":{"nodeType":"YulBlock","src":"14629:391:28","statements":[{"body":{"nodeType":"YulBlock","src":"14675:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14677:77:28"},"nodeType":"YulFunctionCall","src":"14677:79:28"},"nodeType":"YulExpressionStatement","src":"14677:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14650:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"14659:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14646:3:28"},"nodeType":"YulFunctionCall","src":"14646:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"14671:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14642:3:28"},"nodeType":"YulFunctionCall","src":"14642:32:28"},"nodeType":"YulIf","src":"14639:119:28"},{"nodeType":"YulBlock","src":"14768:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"14783:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"14797:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14787:6:28","type":""}]},{"nodeType":"YulAssignment","src":"14812:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14847:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"14858:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14843:3:28"},"nodeType":"YulFunctionCall","src":"14843:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14867:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14822:20:28"},"nodeType":"YulFunctionCall","src":"14822:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14812:6:28"}]}]},{"nodeType":"YulBlock","src":"14895:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"14910:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"14924:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14914:6:28","type":""}]},{"nodeType":"YulAssignment","src":"14940:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14975:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"14986:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14971:3:28"},"nodeType":"YulFunctionCall","src":"14971:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14995:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14950:20:28"},"nodeType":"YulFunctionCall","src":"14950:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14940:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14591:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14602:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14614:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14622:6:28","type":""}],"src":"14546:474:28"},{"body":{"nodeType":"YulBlock","src":"15100:66:28","statements":[{"nodeType":"YulAssignment","src":"15110:50:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15154:5:28"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"15123:30:28"},"nodeType":"YulFunctionCall","src":"15123:37:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"15110:9:28"}]}]},"name":"convert_t_contract$_IERC20_$909_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15080:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"15090:9:28","type":""}],"src":"15026:140:28"},{"body":{"nodeType":"YulBlock","src":"15251:80:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15268:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15318:5:28"}],"functionName":{"name":"convert_t_contract$_IERC20_$909_to_t_address","nodeType":"YulIdentifier","src":"15273:44:28"},"nodeType":"YulFunctionCall","src":"15273:51:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15261:6:28"},"nodeType":"YulFunctionCall","src":"15261:64:28"},"nodeType":"YulExpressionStatement","src":"15261:64:28"}]},"name":"abi_encode_t_contract$_IERC20_$909_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15239:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15246:3:28","type":""}],"src":"15172:159:28"},{"body":{"nodeType":"YulBlock","src":"15449:138:28","statements":[{"nodeType":"YulAssignment","src":"15459:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15471:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15482:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15467:3:28"},"nodeType":"YulFunctionCall","src":"15467:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15459:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15553:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15566:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15577:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15562:3:28"},"nodeType":"YulFunctionCall","src":"15562:17:28"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$909_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15495:57:28"},"nodeType":"YulFunctionCall","src":"15495:85:28"},"nodeType":"YulExpressionStatement","src":"15495:85:28"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$909__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15421:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15433:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15444:4:28","type":""}],"src":"15337:250:28"},{"body":{"nodeType":"YulBlock","src":"15621:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15638:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15641:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15631:6:28"},"nodeType":"YulFunctionCall","src":"15631:88:28"},"nodeType":"YulExpressionStatement","src":"15631:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15735:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15738:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15728:6:28"},"nodeType":"YulFunctionCall","src":"15728:15:28"},"nodeType":"YulExpressionStatement","src":"15728:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15759:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15762:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15752:6:28"},"nodeType":"YulFunctionCall","src":"15752:15:28"},"nodeType":"YulExpressionStatement","src":"15752:15:28"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15593:180:28"},{"body":{"nodeType":"YulBlock","src":"15830:269:28","statements":[{"nodeType":"YulAssignment","src":"15840:22:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15854:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"15860:1:28","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15850:3:28"},"nodeType":"YulFunctionCall","src":"15850:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15840:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"15871:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15901:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"15907:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15897:3:28"},"nodeType":"YulFunctionCall","src":"15897:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15875:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"15948:51:28","statements":[{"nodeType":"YulAssignment","src":"15962:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15976:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15972:3:28"},"nodeType":"YulFunctionCall","src":"15972:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15962:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15928:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15921:6:28"},"nodeType":"YulFunctionCall","src":"15921:26:28"},"nodeType":"YulIf","src":"15918:81:28"},{"body":{"nodeType":"YulBlock","src":"16051:42:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16065:16:28"},"nodeType":"YulFunctionCall","src":"16065:18:28"},"nodeType":"YulExpressionStatement","src":"16065:18:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16015:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16038:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"16046:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16035:2:28"},"nodeType":"YulFunctionCall","src":"16035:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16012:2:28"},"nodeType":"YulFunctionCall","src":"16012:38:28"},"nodeType":"YulIf","src":"16009:84:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15814:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15823:6:28","type":""}],"src":"15779:320:28"},{"body":{"nodeType":"YulBlock","src":"16211:118:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16233:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"16241:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16229:3:28"},"nodeType":"YulFunctionCall","src":"16229:14:28"},{"hexValue":"537472696b653120646f6974206574726520696e666572696575722061205374","kind":"string","nodeType":"YulLiteral","src":"16245:34:28","type":"","value":"Strike1 doit etre inferieur a St"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16222:6:28"},"nodeType":"YulFunctionCall","src":"16222:58:28"},"nodeType":"YulExpressionStatement","src":"16222:58:28"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16301:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"16309:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16297:3:28"},"nodeType":"YulFunctionCall","src":"16297:15:28"},{"hexValue":"72696b6532","kind":"string","nodeType":"YulLiteral","src":"16314:7:28","type":"","value":"rike2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16290:6:28"},"nodeType":"YulFunctionCall","src":"16290:32:28"},"nodeType":"YulExpressionStatement","src":"16290:32:28"}]},"name":"store_literal_in_memory_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16203:6:28","type":""}],"src":"16105:224:28"},{"body":{"nodeType":"YulBlock","src":"16481:220:28","statements":[{"nodeType":"YulAssignment","src":"16491:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16557:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"16562:2:28","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16498:58:28"},"nodeType":"YulFunctionCall","src":"16498:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16491:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16663:3:28"}],"functionName":{"name":"store_literal_in_memory_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616","nodeType":"YulIdentifier","src":"16574:88:28"},"nodeType":"YulFunctionCall","src":"16574:93:28"},"nodeType":"YulExpressionStatement","src":"16574:93:28"},{"nodeType":"YulAssignment","src":"16676:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16687:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"16692:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16683:3:28"},"nodeType":"YulFunctionCall","src":"16683:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16676:3:28"}]}]},"name":"abi_encode_t_stringliteral_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16469:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16477:3:28","type":""}],"src":"16335:366:28"},{"body":{"nodeType":"YulBlock","src":"16878:248:28","statements":[{"nodeType":"YulAssignment","src":"16888:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16900:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16911:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16896:3:28"},"nodeType":"YulFunctionCall","src":"16896:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16888:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16935:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16946:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16931:3:28"},"nodeType":"YulFunctionCall","src":"16931:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16954:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"16960:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16950:3:28"},"nodeType":"YulFunctionCall","src":"16950:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16924:6:28"},"nodeType":"YulFunctionCall","src":"16924:47:28"},"nodeType":"YulExpressionStatement","src":"16924:47:28"},{"nodeType":"YulAssignment","src":"16980:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17114:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16988:124:28"},"nodeType":"YulFunctionCall","src":"16988:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16980:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16858:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16873:4:28","type":""}],"src":"16707:419:28"},{"body":{"nodeType":"YulBlock","src":"17238:117:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17260:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"17268:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17256:3:28"},"nodeType":"YulFunctionCall","src":"17256:14:28"},{"hexValue":"4c2765787069726174696f6e20646f697420657472652064616e73206c652066","kind":"string","nodeType":"YulLiteral","src":"17272:34:28","type":"","value":"L'expiration doit etre dans le f"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17249:6:28"},"nodeType":"YulFunctionCall","src":"17249:58:28"},"nodeType":"YulExpressionStatement","src":"17249:58:28"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17328:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"17336:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17324:3:28"},"nodeType":"YulFunctionCall","src":"17324:15:28"},{"hexValue":"75747572","kind":"string","nodeType":"YulLiteral","src":"17341:6:28","type":"","value":"utur"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17317:6:28"},"nodeType":"YulFunctionCall","src":"17317:31:28"},"nodeType":"YulExpressionStatement","src":"17317:31:28"}]},"name":"store_literal_in_memory_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17230:6:28","type":""}],"src":"17132:223:28"},{"body":{"nodeType":"YulBlock","src":"17507:220:28","statements":[{"nodeType":"YulAssignment","src":"17517:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17583:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"17588:2:28","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17524:58:28"},"nodeType":"YulFunctionCall","src":"17524:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17517:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17689:3:28"}],"functionName":{"name":"store_literal_in_memory_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd","nodeType":"YulIdentifier","src":"17600:88:28"},"nodeType":"YulFunctionCall","src":"17600:93:28"},"nodeType":"YulExpressionStatement","src":"17600:93:28"},{"nodeType":"YulAssignment","src":"17702:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17713:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"17718:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17709:3:28"},"nodeType":"YulFunctionCall","src":"17709:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17702:3:28"}]}]},"name":"abi_encode_t_stringliteral_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17495:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17503:3:28","type":""}],"src":"17361:366:28"},{"body":{"nodeType":"YulBlock","src":"17904:248:28","statements":[{"nodeType":"YulAssignment","src":"17914:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17926:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17937:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17922:3:28"},"nodeType":"YulFunctionCall","src":"17922:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17914:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17961:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17972:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17957:3:28"},"nodeType":"YulFunctionCall","src":"17957:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17980:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"17986:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17976:3:28"},"nodeType":"YulFunctionCall","src":"17976:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17950:6:28"},"nodeType":"YulFunctionCall","src":"17950:47:28"},"nodeType":"YulExpressionStatement","src":"17950:47:28"},{"nodeType":"YulAssignment","src":"18006:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18140:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18014:124:28"},"nodeType":"YulFunctionCall","src":"18014:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18006:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17884:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17899:4:28","type":""}],"src":"17733:419:28"},{"body":{"nodeType":"YulBlock","src":"18264:75:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18286:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"18294:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18282:3:28"},"nodeType":"YulFunctionCall","src":"18282:14:28"},{"hexValue":"4c6520636f6c6c61746572616c20646f6974206574726520706f7369746966","kind":"string","nodeType":"YulLiteral","src":"18298:33:28","type":"","value":"Le collateral doit etre positif"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18275:6:28"},"nodeType":"YulFunctionCall","src":"18275:57:28"},"nodeType":"YulExpressionStatement","src":"18275:57:28"}]},"name":"store_literal_in_memory_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18256:6:28","type":""}],"src":"18158:181:28"},{"body":{"nodeType":"YulBlock","src":"18491:220:28","statements":[{"nodeType":"YulAssignment","src":"18501:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18567:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"18572:2:28","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18508:58:28"},"nodeType":"YulFunctionCall","src":"18508:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18501:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18673:3:28"}],"functionName":{"name":"store_literal_in_memory_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc","nodeType":"YulIdentifier","src":"18584:88:28"},"nodeType":"YulFunctionCall","src":"18584:93:28"},"nodeType":"YulExpressionStatement","src":"18584:93:28"},{"nodeType":"YulAssignment","src":"18686:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18697:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"18702:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18693:3:28"},"nodeType":"YulFunctionCall","src":"18693:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18686:3:28"}]}]},"name":"abi_encode_t_stringliteral_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18479:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18487:3:28","type":""}],"src":"18345:366:28"},{"body":{"nodeType":"YulBlock","src":"18888:248:28","statements":[{"nodeType":"YulAssignment","src":"18898:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18910:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18921:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18906:3:28"},"nodeType":"YulFunctionCall","src":"18906:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18898:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18945:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18956:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18941:3:28"},"nodeType":"YulFunctionCall","src":"18941:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18964:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"18970:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18960:3:28"},"nodeType":"YulFunctionCall","src":"18960:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18934:6:28"},"nodeType":"YulFunctionCall","src":"18934:47:28"},"nodeType":"YulExpressionStatement","src":"18934:47:28"},{"nodeType":"YulAssignment","src":"18990:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19124:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18998:124:28"},"nodeType":"YulFunctionCall","src":"18998:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18990:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18868:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18883:4:28","type":""}],"src":"18717:419:28"},{"body":{"nodeType":"YulBlock","src":"19296:288:28","statements":[{"nodeType":"YulAssignment","src":"19306:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19318:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19329:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19314:3:28"},"nodeType":"YulFunctionCall","src":"19314:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19306:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19386:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19399:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19410:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19395:3:28"},"nodeType":"YulFunctionCall","src":"19395:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19342:43:28"},"nodeType":"YulFunctionCall","src":"19342:71:28"},"nodeType":"YulExpressionStatement","src":"19342:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19467:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19480:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19491:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19476:3:28"},"nodeType":"YulFunctionCall","src":"19476:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19423:43:28"},"nodeType":"YulFunctionCall","src":"19423:72:28"},"nodeType":"YulExpressionStatement","src":"19423:72:28"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19549:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19562:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19573:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19558:3:28"},"nodeType":"YulFunctionCall","src":"19558:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19505:43:28"},"nodeType":"YulFunctionCall","src":"19505:72:28"},"nodeType":"YulExpressionStatement","src":"19505:72:28"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19252:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19264:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19272:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19280:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19291:4:28","type":""}],"src":"19142:442:28"},{"body":{"nodeType":"YulBlock","src":"19650:77:28","statements":[{"nodeType":"YulAssignment","src":"19660:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19675:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19669:5:28"},"nodeType":"YulFunctionCall","src":"19669:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19660:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19715:5:28"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"19691:23:28"},"nodeType":"YulFunctionCall","src":"19691:30:28"},"nodeType":"YulExpressionStatement","src":"19691:30:28"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19628:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"19636:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"19644:5:28","type":""}],"src":"19590:137:28"},{"body":{"nodeType":"YulBlock","src":"19807:271:28","statements":[{"body":{"nodeType":"YulBlock","src":"19853:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19855:77:28"},"nodeType":"YulFunctionCall","src":"19855:79:28"},"nodeType":"YulExpressionStatement","src":"19855:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19828:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"19837:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19824:3:28"},"nodeType":"YulFunctionCall","src":"19824:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"19849:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19820:3:28"},"nodeType":"YulFunctionCall","src":"19820:32:28"},"nodeType":"YulIf","src":"19817:119:28"},{"nodeType":"YulBlock","src":"19946:125:28","statements":[{"nodeType":"YulVariableDeclaration","src":"19961:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"19975:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19965:6:28","type":""}]},{"nodeType":"YulAssignment","src":"19990:71:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20033:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"20044:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20029:3:28"},"nodeType":"YulFunctionCall","src":"20029:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20053:7:28"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"20000:28:28"},"nodeType":"YulFunctionCall","src":"20000:61:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19990:6:28"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19777:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19788:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19800:6:28","type":""}],"src":"19733:345:28"},{"body":{"nodeType":"YulBlock","src":"20190:74:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20212:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"20220:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20208:3:28"},"nodeType":"YulFunctionCall","src":"20208:14:28"},{"hexValue":"5472616e736665727420646520636f6c6c61746572616c206563686f7565","kind":"string","nodeType":"YulLiteral","src":"20224:32:28","type":"","value":"Transfert de collateral echoue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20201:6:28"},"nodeType":"YulFunctionCall","src":"20201:56:28"},"nodeType":"YulExpressionStatement","src":"20201:56:28"}]},"name":"store_literal_in_memory_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20182:6:28","type":""}],"src":"20084:180:28"},{"body":{"nodeType":"YulBlock","src":"20416:220:28","statements":[{"nodeType":"YulAssignment","src":"20426:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20492:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"20497:2:28","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20433:58:28"},"nodeType":"YulFunctionCall","src":"20433:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20426:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20598:3:28"}],"functionName":{"name":"store_literal_in_memory_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f","nodeType":"YulIdentifier","src":"20509:88:28"},"nodeType":"YulFunctionCall","src":"20509:93:28"},"nodeType":"YulExpressionStatement","src":"20509:93:28"},{"nodeType":"YulAssignment","src":"20611:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20622:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"20627:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20618:3:28"},"nodeType":"YulFunctionCall","src":"20618:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20611:3:28"}]}]},"name":"abi_encode_t_stringliteral_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20404:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20412:3:28","type":""}],"src":"20270:366:28"},{"body":{"nodeType":"YulBlock","src":"20813:248:28","statements":[{"nodeType":"YulAssignment","src":"20823:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20835:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20846:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20831:3:28"},"nodeType":"YulFunctionCall","src":"20831:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20823:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20870:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20881:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20866:3:28"},"nodeType":"YulFunctionCall","src":"20866:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20889:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"20895:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20885:3:28"},"nodeType":"YulFunctionCall","src":"20885:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20859:6:28"},"nodeType":"YulFunctionCall","src":"20859:47:28"},"nodeType":"YulExpressionStatement","src":"20859:47:28"},{"nodeType":"YulAssignment","src":"20915:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21049:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20923:124:28"},"nodeType":"YulFunctionCall","src":"20923:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20915:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20793:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20808:4:28","type":""}],"src":"20642:419:28"},{"body":{"nodeType":"YulBlock","src":"21095:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21112:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21115:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21105:6:28"},"nodeType":"YulFunctionCall","src":"21105:88:28"},"nodeType":"YulExpressionStatement","src":"21105:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21209:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21212:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21202:6:28"},"nodeType":"YulFunctionCall","src":"21202:15:28"},"nodeType":"YulExpressionStatement","src":"21202:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21233:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21236:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21226:6:28"},"nodeType":"YulFunctionCall","src":"21226:15:28"},"nodeType":"YulExpressionStatement","src":"21226:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21067:180:28"},{"body":{"nodeType":"YulBlock","src":"21296:190:28","statements":[{"nodeType":"YulAssignment","src":"21306:33:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21333:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21315:17:28"},"nodeType":"YulFunctionCall","src":"21315:24:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21306:5:28"}]},{"body":{"nodeType":"YulBlock","src":"21429:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21431:16:28"},"nodeType":"YulFunctionCall","src":"21431:18:28"},"nodeType":"YulExpressionStatement","src":"21431:18:28"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21354:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"21361:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21351:2:28"},"nodeType":"YulFunctionCall","src":"21351:77:28"},"nodeType":"YulIf","src":"21348:103:28"},{"nodeType":"YulAssignment","src":"21460:20:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21471:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"21478:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21467:3:28"},"nodeType":"YulFunctionCall","src":"21467:13:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21460:3:28"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21282:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21292:3:28","type":""}],"src":"21253:233:28"},{"body":{"nodeType":"YulBlock","src":"21674:371:28","statements":[{"nodeType":"YulAssignment","src":"21684:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21696:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21707:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21692:3:28"},"nodeType":"YulFunctionCall","src":"21692:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21684:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21765:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21778:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21789:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21774:3:28"},"nodeType":"YulFunctionCall","src":"21774:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21721:43:28"},"nodeType":"YulFunctionCall","src":"21721:71:28"},"nodeType":"YulExpressionStatement","src":"21721:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21846:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21859:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21870:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21855:3:28"},"nodeType":"YulFunctionCall","src":"21855:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21802:43:28"},"nodeType":"YulFunctionCall","src":"21802:72:28"},"nodeType":"YulExpressionStatement","src":"21802:72:28"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21928:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21941:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"21952:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21937:3:28"},"nodeType":"YulFunctionCall","src":"21937:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21884:43:28"},"nodeType":"YulFunctionCall","src":"21884:72:28"},"nodeType":"YulExpressionStatement","src":"21884:72:28"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22010:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22023:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"22034:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22019:3:28"},"nodeType":"YulFunctionCall","src":"22019:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21966:43:28"},"nodeType":"YulFunctionCall","src":"21966:72:28"},"nodeType":"YulExpressionStatement","src":"21966:72:28"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21622:9:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21634:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21642:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21650:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21658:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21669:4:28","type":""}],"src":"21492:553:28"},{"body":{"nodeType":"YulBlock","src":"22205:288:28","statements":[{"nodeType":"YulAssignment","src":"22215:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22227:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"22238:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22223:3:28"},"nodeType":"YulFunctionCall","src":"22223:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22215:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22295:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22308:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"22319:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22304:3:28"},"nodeType":"YulFunctionCall","src":"22304:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22251:43:28"},"nodeType":"YulFunctionCall","src":"22251:71:28"},"nodeType":"YulExpressionStatement","src":"22251:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22376:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22389:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"22400:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22385:3:28"},"nodeType":"YulFunctionCall","src":"22385:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22332:43:28"},"nodeType":"YulFunctionCall","src":"22332:72:28"},"nodeType":"YulExpressionStatement","src":"22332:72:28"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22458:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22471:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"22482:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22467:3:28"},"nodeType":"YulFunctionCall","src":"22467:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22414:43:28"},"nodeType":"YulFunctionCall","src":"22414:72:28"},"nodeType":"YulExpressionStatement","src":"22414:72:28"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22161:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22173:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22181:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22189:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22200:4:28","type":""}],"src":"22051:442:28"},{"body":{"nodeType":"YulBlock","src":"22544:149:28","statements":[{"nodeType":"YulAssignment","src":"22554:25:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22577:1:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22559:17:28"},"nodeType":"YulFunctionCall","src":"22559:20:28"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22554:1:28"}]},{"nodeType":"YulAssignment","src":"22588:25:28","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22611:1:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22593:17:28"},"nodeType":"YulFunctionCall","src":"22593:20:28"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22588:1:28"}]},{"nodeType":"YulAssignment","src":"22622:17:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22634:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"22637:1:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22630:3:28"},"nodeType":"YulFunctionCall","src":"22630:9:28"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"22622:4:28"}]},{"body":{"nodeType":"YulBlock","src":"22664:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22666:16:28"},"nodeType":"YulFunctionCall","src":"22666:18:28"},"nodeType":"YulExpressionStatement","src":"22666:18:28"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"22655:4:28"},{"name":"x","nodeType":"YulIdentifier","src":"22661:1:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22652:2:28"},"nodeType":"YulFunctionCall","src":"22652:11:28"},"nodeType":"YulIf","src":"22649:37:28"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22530:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"22533:1:28","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"22539:4:28","type":""}],"src":"22499:194:28"},{"body":{"nodeType":"YulBlock","src":"22805:71:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22827:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"22835:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22823:3:28"},"nodeType":"YulFunctionCall","src":"22823:14:28"},{"hexValue":"4c276f7074696f6e20612064656a61206574652065786572636565","kind":"string","nodeType":"YulLiteral","src":"22839:29:28","type":"","value":"L'option a deja ete exercee"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22816:6:28"},"nodeType":"YulFunctionCall","src":"22816:53:28"},"nodeType":"YulExpressionStatement","src":"22816:53:28"}]},"name":"store_literal_in_memory_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22797:6:28","type":""}],"src":"22699:177:28"},{"body":{"nodeType":"YulBlock","src":"23028:220:28","statements":[{"nodeType":"YulAssignment","src":"23038:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23104:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"23109:2:28","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23045:58:28"},"nodeType":"YulFunctionCall","src":"23045:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23038:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23210:3:28"}],"functionName":{"name":"store_literal_in_memory_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0","nodeType":"YulIdentifier","src":"23121:88:28"},"nodeType":"YulFunctionCall","src":"23121:93:28"},"nodeType":"YulExpressionStatement","src":"23121:93:28"},{"nodeType":"YulAssignment","src":"23223:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23234:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"23239:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23230:3:28"},"nodeType":"YulFunctionCall","src":"23230:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23223:3:28"}]}]},"name":"abi_encode_t_stringliteral_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23016:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23024:3:28","type":""}],"src":"22882:366:28"},{"body":{"nodeType":"YulBlock","src":"23425:248:28","statements":[{"nodeType":"YulAssignment","src":"23435:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23447:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23458:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23443:3:28"},"nodeType":"YulFunctionCall","src":"23443:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23435:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23482:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23493:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23478:3:28"},"nodeType":"YulFunctionCall","src":"23478:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23501:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"23507:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23497:3:28"},"nodeType":"YulFunctionCall","src":"23497:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23471:6:28"},"nodeType":"YulFunctionCall","src":"23471:47:28"},"nodeType":"YulExpressionStatement","src":"23471:47:28"},{"nodeType":"YulAssignment","src":"23527:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23661:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23535:124:28"},"nodeType":"YulFunctionCall","src":"23535:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23527:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23405:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23420:4:28","type":""}],"src":"23254:419:28"},{"body":{"nodeType":"YulBlock","src":"23785:74:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23807:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"23815:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23803:3:28"},"nodeType":"YulFunctionCall","src":"23803:14:28"},{"hexValue":"4c276f7074696f6e206e27612070617320656e636f726520657870697265","kind":"string","nodeType":"YulLiteral","src":"23819:32:28","type":"","value":"L'option n'a pas encore expire"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23796:6:28"},"nodeType":"YulFunctionCall","src":"23796:56:28"},"nodeType":"YulExpressionStatement","src":"23796:56:28"}]},"name":"store_literal_in_memory_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23777:6:28","type":""}],"src":"23679:180:28"},{"body":{"nodeType":"YulBlock","src":"24011:220:28","statements":[{"nodeType":"YulAssignment","src":"24021:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24087:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"24092:2:28","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24028:58:28"},"nodeType":"YulFunctionCall","src":"24028:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24021:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24193:3:28"}],"functionName":{"name":"store_literal_in_memory_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3","nodeType":"YulIdentifier","src":"24104:88:28"},"nodeType":"YulFunctionCall","src":"24104:93:28"},"nodeType":"YulExpressionStatement","src":"24104:93:28"},{"nodeType":"YulAssignment","src":"24206:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24217:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"24222:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24213:3:28"},"nodeType":"YulFunctionCall","src":"24213:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24206:3:28"}]}]},"name":"abi_encode_t_stringliteral_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23999:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24007:3:28","type":""}],"src":"23865:366:28"},{"body":{"nodeType":"YulBlock","src":"24408:248:28","statements":[{"nodeType":"YulAssignment","src":"24418:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24430:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24441:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24426:3:28"},"nodeType":"YulFunctionCall","src":"24426:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24418:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24465:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24476:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24461:3:28"},"nodeType":"YulFunctionCall","src":"24461:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24484:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"24490:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24480:3:28"},"nodeType":"YulFunctionCall","src":"24480:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24454:6:28"},"nodeType":"YulFunctionCall","src":"24454:47:28"},"nodeType":"YulExpressionStatement","src":"24454:47:28"},{"nodeType":"YulAssignment","src":"24510:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24644:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24518:124:28"},"nodeType":"YulFunctionCall","src":"24518:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24510:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24388:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24403:4:28","type":""}],"src":"24237:419:28"},{"body":{"nodeType":"YulBlock","src":"24788:206:28","statements":[{"nodeType":"YulAssignment","src":"24798:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24810:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24821:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24806:3:28"},"nodeType":"YulFunctionCall","src":"24806:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24798:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24878:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24891:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24902:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24887:3:28"},"nodeType":"YulFunctionCall","src":"24887:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24834:43:28"},"nodeType":"YulFunctionCall","src":"24834:71:28"},"nodeType":"YulExpressionStatement","src":"24834:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24959:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24972:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24983:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24968:3:28"},"nodeType":"YulFunctionCall","src":"24968:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24915:43:28"},"nodeType":"YulFunctionCall","src":"24915:72:28"},"nodeType":"YulExpressionStatement","src":"24915:72:28"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24752:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24764:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24772:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24783:4:28","type":""}],"src":"24662:332:28"},{"body":{"nodeType":"YulBlock","src":"25106:70:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25128:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"25136:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25124:3:28"},"nodeType":"YulFunctionCall","src":"25124:14:28"},{"hexValue":"5472616e7366657274206465207061796f6666206563686f7565","kind":"string","nodeType":"YulLiteral","src":"25140:28:28","type":"","value":"Transfert de payoff echoue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25117:6:28"},"nodeType":"YulFunctionCall","src":"25117:52:28"},"nodeType":"YulExpressionStatement","src":"25117:52:28"}]},"name":"store_literal_in_memory_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25098:6:28","type":""}],"src":"25000:176:28"},{"body":{"nodeType":"YulBlock","src":"25328:220:28","statements":[{"nodeType":"YulAssignment","src":"25338:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25404:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"25409:2:28","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25345:58:28"},"nodeType":"YulFunctionCall","src":"25345:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25338:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25510:3:28"}],"functionName":{"name":"store_literal_in_memory_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d","nodeType":"YulIdentifier","src":"25421:88:28"},"nodeType":"YulFunctionCall","src":"25421:93:28"},"nodeType":"YulExpressionStatement","src":"25421:93:28"},{"nodeType":"YulAssignment","src":"25523:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25534:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"25539:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25530:3:28"},"nodeType":"YulFunctionCall","src":"25530:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25523:3:28"}]}]},"name":"abi_encode_t_stringliteral_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25316:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25324:3:28","type":""}],"src":"25182:366:28"},{"body":{"nodeType":"YulBlock","src":"25725:248:28","statements":[{"nodeType":"YulAssignment","src":"25735:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25747:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"25758:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25743:3:28"},"nodeType":"YulFunctionCall","src":"25743:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25735:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25782:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"25793:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25778:3:28"},"nodeType":"YulFunctionCall","src":"25778:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25801:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"25807:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25797:3:28"},"nodeType":"YulFunctionCall","src":"25797:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25771:6:28"},"nodeType":"YulFunctionCall","src":"25771:47:28"},"nodeType":"YulExpressionStatement","src":"25771:47:28"},{"nodeType":"YulAssignment","src":"25827:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25961:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25835:124:28"},"nodeType":"YulFunctionCall","src":"25835:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25827:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25705:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25720:4:28","type":""}],"src":"25554:419:28"},{"body":{"nodeType":"YulBlock","src":"26085:119:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26107:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"26115:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26103:3:28"},"nodeType":"YulFunctionCall","src":"26103:14:28"},{"hexValue":"5472616e736665727420646520636f6c6c61746572616c2072657374616e7420","kind":"string","nodeType":"YulLiteral","src":"26119:34:28","type":"","value":"Transfert de collateral restant "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26096:6:28"},"nodeType":"YulFunctionCall","src":"26096:58:28"},"nodeType":"YulExpressionStatement","src":"26096:58:28"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26175:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"26183:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26171:3:28"},"nodeType":"YulFunctionCall","src":"26171:15:28"},{"hexValue":"6563686f7565","kind":"string","nodeType":"YulLiteral","src":"26188:8:28","type":"","value":"echoue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26164:6:28"},"nodeType":"YulFunctionCall","src":"26164:33:28"},"nodeType":"YulExpressionStatement","src":"26164:33:28"}]},"name":"store_literal_in_memory_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26077:6:28","type":""}],"src":"25979:225:28"},{"body":{"nodeType":"YulBlock","src":"26356:220:28","statements":[{"nodeType":"YulAssignment","src":"26366:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26432:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"26437:2:28","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26373:58:28"},"nodeType":"YulFunctionCall","src":"26373:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26366:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26538:3:28"}],"functionName":{"name":"store_literal_in_memory_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5","nodeType":"YulIdentifier","src":"26449:88:28"},"nodeType":"YulFunctionCall","src":"26449:93:28"},"nodeType":"YulExpressionStatement","src":"26449:93:28"},{"nodeType":"YulAssignment","src":"26551:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26562:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"26567:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26558:3:28"},"nodeType":"YulFunctionCall","src":"26558:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26551:3:28"}]}]},"name":"abi_encode_t_stringliteral_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26344:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26352:3:28","type":""}],"src":"26210:366:28"},{"body":{"nodeType":"YulBlock","src":"26753:248:28","statements":[{"nodeType":"YulAssignment","src":"26763:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26775:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"26786:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26771:3:28"},"nodeType":"YulFunctionCall","src":"26771:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26763:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26810:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"26821:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26806:3:28"},"nodeType":"YulFunctionCall","src":"26806:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26829:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"26835:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26825:3:28"},"nodeType":"YulFunctionCall","src":"26825:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26799:6:28"},"nodeType":"YulFunctionCall","src":"26799:47:28"},"nodeType":"YulExpressionStatement","src":"26799:47:28"},{"nodeType":"YulAssignment","src":"26855:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26989:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26863:124:28"},"nodeType":"YulFunctionCall","src":"26863:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26855:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26733:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26748:4:28","type":""}],"src":"26582:419:28"},{"body":{"nodeType":"YulBlock","src":"27133:206:28","statements":[{"nodeType":"YulAssignment","src":"27143:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27155:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"27166:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27151:3:28"},"nodeType":"YulFunctionCall","src":"27151:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27143:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27223:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27236:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"27247:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27232:3:28"},"nodeType":"YulFunctionCall","src":"27232:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27179:43:28"},"nodeType":"YulFunctionCall","src":"27179:71:28"},"nodeType":"YulExpressionStatement","src":"27179:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27304:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27317:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"27328:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27313:3:28"},"nodeType":"YulFunctionCall","src":"27313:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27260:43:28"},"nodeType":"YulFunctionCall","src":"27260:72:28"},"nodeType":"YulExpressionStatement","src":"27260:72:28"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27097:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27109:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27117:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27128:4:28","type":""}],"src":"27007:332:28"},{"body":{"nodeType":"YulBlock","src":"27389:61:28","statements":[{"nodeType":"YulAssignment","src":"27399:45:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27414:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"27421:22:28","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27410:3:28"},"nodeType":"YulFunctionCall","src":"27410:34:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"27399:7:28"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27371:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"27381:7:28","type":""}],"src":"27345:105:28"},{"body":{"nodeType":"YulBlock","src":"27498:78:28","statements":[{"body":{"nodeType":"YulBlock","src":"27554:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27563:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27566:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27556:6:28"},"nodeType":"YulFunctionCall","src":"27556:12:28"},"nodeType":"YulExpressionStatement","src":"27556:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27521:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27545:5:28"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"27528:16:28"},"nodeType":"YulFunctionCall","src":"27528:23:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27518:2:28"},"nodeType":"YulFunctionCall","src":"27518:34:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27511:6:28"},"nodeType":"YulFunctionCall","src":"27511:42:28"},"nodeType":"YulIf","src":"27508:62:28"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27491:5:28","type":""}],"src":"27456:120:28"},{"body":{"nodeType":"YulBlock","src":"27644:79:28","statements":[{"nodeType":"YulAssignment","src":"27654:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27669:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27663:5:28"},"nodeType":"YulFunctionCall","src":"27663:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27654:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27711:5:28"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"27685:25:28"},"nodeType":"YulFunctionCall","src":"27685:32:28"},"nodeType":"YulExpressionStatement","src":"27685:32:28"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"27622:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"27630:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"27638:5:28","type":""}],"src":"27582:141:28"},{"body":{"nodeType":"YulBlock","src":"27773:32:28","statements":[{"nodeType":"YulAssignment","src":"27783:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"27794:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"27783:7:28"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27755:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"27765:7:28","type":""}],"src":"27729:76:28"},{"body":{"nodeType":"YulBlock","src":"27853:78:28","statements":[{"body":{"nodeType":"YulBlock","src":"27909:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27918:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27921:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27911:6:28"},"nodeType":"YulFunctionCall","src":"27911:12:28"},"nodeType":"YulExpressionStatement","src":"27911:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27876:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27900:5:28"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"27883:16:28"},"nodeType":"YulFunctionCall","src":"27883:23:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27873:2:28"},"nodeType":"YulFunctionCall","src":"27873:34:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27866:6:28"},"nodeType":"YulFunctionCall","src":"27866:42:28"},"nodeType":"YulIf","src":"27863:62:28"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27846:5:28","type":""}],"src":"27811:120:28"},{"body":{"nodeType":"YulBlock","src":"27999:79:28","statements":[{"nodeType":"YulAssignment","src":"28009:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28024:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28018:5:28"},"nodeType":"YulFunctionCall","src":"28018:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"28009:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28066:5:28"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"28040:25:28"},"nodeType":"YulFunctionCall","src":"28040:32:28"},"nodeType":"YulExpressionStatement","src":"28040:32:28"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"27977:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"27985:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"27993:5:28","type":""}],"src":"27937:141:28"},{"body":{"nodeType":"YulBlock","src":"28147:80:28","statements":[{"nodeType":"YulAssignment","src":"28157:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28172:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28166:5:28"},"nodeType":"YulFunctionCall","src":"28166:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"28157:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28215:5:28"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"28188:26:28"},"nodeType":"YulFunctionCall","src":"28188:33:28"},"nodeType":"YulExpressionStatement","src":"28188:33:28"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"28125:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"28133:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"28141:5:28","type":""}],"src":"28084:143:28"},{"body":{"nodeType":"YulBlock","src":"28375:829:28","statements":[{"body":{"nodeType":"YulBlock","src":"28422:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28424:77:28"},"nodeType":"YulFunctionCall","src":"28424:79:28"},"nodeType":"YulExpressionStatement","src":"28424:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28396:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"28405:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28392:3:28"},"nodeType":"YulFunctionCall","src":"28392:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"28417:3:28","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28388:3:28"},"nodeType":"YulFunctionCall","src":"28388:33:28"},"nodeType":"YulIf","src":"28385:120:28"},{"nodeType":"YulBlock","src":"28515:127:28","statements":[{"nodeType":"YulVariableDeclaration","src":"28530:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"28544:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28534:6:28","type":""}]},{"nodeType":"YulAssignment","src":"28559:73:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28604:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"28615:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28600:3:28"},"nodeType":"YulFunctionCall","src":"28600:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28624:7:28"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"28569:30:28"},"nodeType":"YulFunctionCall","src":"28569:63:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28559:6:28"}]}]},{"nodeType":"YulBlock","src":"28652:128:28","statements":[{"nodeType":"YulVariableDeclaration","src":"28667:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"28681:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28671:6:28","type":""}]},{"nodeType":"YulAssignment","src":"28697:73:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28742:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"28753:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28738:3:28"},"nodeType":"YulFunctionCall","src":"28738:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28762:7:28"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"28707:30:28"},"nodeType":"YulFunctionCall","src":"28707:63:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"28697:6:28"}]}]},{"nodeType":"YulBlock","src":"28790:129:28","statements":[{"nodeType":"YulVariableDeclaration","src":"28805:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"28819:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28809:6:28","type":""}]},{"nodeType":"YulAssignment","src":"28835:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28881:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"28892:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28877:3:28"},"nodeType":"YulFunctionCall","src":"28877:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28901:7:28"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"28845:31:28"},"nodeType":"YulFunctionCall","src":"28845:64:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"28835:6:28"}]}]},{"nodeType":"YulBlock","src":"28929:129:28","statements":[{"nodeType":"YulVariableDeclaration","src":"28944:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"28958:2:28","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28948:6:28","type":""}]},{"nodeType":"YulAssignment","src":"28974:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29020:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"29031:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29016:3:28"},"nodeType":"YulFunctionCall","src":"29016:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29040:7:28"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"28984:31:28"},"nodeType":"YulFunctionCall","src":"28984:64:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"28974:6:28"}]}]},{"nodeType":"YulBlock","src":"29068:129:28","statements":[{"nodeType":"YulVariableDeclaration","src":"29083:17:28","value":{"kind":"number","nodeType":"YulLiteral","src":"29097:3:28","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"29087:6:28","type":""}]},{"nodeType":"YulAssignment","src":"29114:73:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29159:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"29170:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29155:3:28"},"nodeType":"YulFunctionCall","src":"29155:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"29179:7:28"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"29124:30:28"},"nodeType":"YulFunctionCall","src":"29124:63:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"29114:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28313:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28324:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28336:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28344:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"28352:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"28360:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"28368:6:28","type":""}],"src":"28233:971:28"},{"body":{"nodeType":"YulBlock","src":"29316:61:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29338:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"29346:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29334:3:28"},"nodeType":"YulFunctionCall","src":"29334:14:28"},{"hexValue":"507269782042544320696e76616c696465","kind":"string","nodeType":"YulLiteral","src":"29350:19:28","type":"","value":"Prix BTC invalide"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29327:6:28"},"nodeType":"YulFunctionCall","src":"29327:43:28"},"nodeType":"YulExpressionStatement","src":"29327:43:28"}]},"name":"store_literal_in_memory_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29308:6:28","type":""}],"src":"29210:167:28"},{"body":{"nodeType":"YulBlock","src":"29529:220:28","statements":[{"nodeType":"YulAssignment","src":"29539:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29605:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"29610:2:28","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29546:58:28"},"nodeType":"YulFunctionCall","src":"29546:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29539:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29711:3:28"}],"functionName":{"name":"store_literal_in_memory_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204","nodeType":"YulIdentifier","src":"29622:88:28"},"nodeType":"YulFunctionCall","src":"29622:93:28"},"nodeType":"YulExpressionStatement","src":"29622:93:28"},{"nodeType":"YulAssignment","src":"29724:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29735:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"29740:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29731:3:28"},"nodeType":"YulFunctionCall","src":"29731:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29724:3:28"}]}]},"name":"abi_encode_t_stringliteral_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29517:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29525:3:28","type":""}],"src":"29383:366:28"},{"body":{"nodeType":"YulBlock","src":"29926:248:28","statements":[{"nodeType":"YulAssignment","src":"29936:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29948:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"29959:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29944:3:28"},"nodeType":"YulFunctionCall","src":"29944:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29936:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29983:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"29994:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29979:3:28"},"nodeType":"YulFunctionCall","src":"29979:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30002:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"30008:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29998:3:28"},"nodeType":"YulFunctionCall","src":"29998:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29972:6:28"},"nodeType":"YulFunctionCall","src":"29972:47:28"},"nodeType":"YulExpressionStatement","src":"29972:47:28"},{"nodeType":"YulAssignment","src":"30028:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30162:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30036:124:28"},"nodeType":"YulFunctionCall","src":"30036:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30028:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29906:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29921:4:28","type":""}],"src":"29755:419:28"},{"body":{"nodeType":"YulBlock","src":"30286:61:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30308:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"30316:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30304:3:28"},"nodeType":"YulFunctionCall","src":"30304:14:28"},{"hexValue":"4c276f7074696f6e206120657870697265","kind":"string","nodeType":"YulLiteral","src":"30320:19:28","type":"","value":"L'option a expire"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30297:6:28"},"nodeType":"YulFunctionCall","src":"30297:43:28"},"nodeType":"YulExpressionStatement","src":"30297:43:28"}]},"name":"store_literal_in_memory_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30278:6:28","type":""}],"src":"30180:167:28"},{"body":{"nodeType":"YulBlock","src":"30499:220:28","statements":[{"nodeType":"YulAssignment","src":"30509:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30575:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"30580:2:28","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30516:58:28"},"nodeType":"YulFunctionCall","src":"30516:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30509:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30681:3:28"}],"functionName":{"name":"store_literal_in_memory_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3","nodeType":"YulIdentifier","src":"30592:88:28"},"nodeType":"YulFunctionCall","src":"30592:93:28"},"nodeType":"YulExpressionStatement","src":"30592:93:28"},{"nodeType":"YulAssignment","src":"30694:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30705:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"30710:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30701:3:28"},"nodeType":"YulFunctionCall","src":"30701:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30694:3:28"}]}]},"name":"abi_encode_t_stringliteral_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30487:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30495:3:28","type":""}],"src":"30353:366:28"},{"body":{"nodeType":"YulBlock","src":"30896:248:28","statements":[{"nodeType":"YulAssignment","src":"30906:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30918:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"30929:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30914:3:28"},"nodeType":"YulFunctionCall","src":"30914:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30906:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30953:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"30964:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30949:3:28"},"nodeType":"YulFunctionCall","src":"30949:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30972:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"30978:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30968:3:28"},"nodeType":"YulFunctionCall","src":"30968:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30942:6:28"},"nodeType":"YulFunctionCall","src":"30942:47:28"},"nodeType":"YulExpressionStatement","src":"30942:47:28"},{"nodeType":"YulAssignment","src":"30998:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31132:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31006:124:28"},"nodeType":"YulFunctionCall","src":"31006:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30998:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30876:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30891:4:28","type":""}],"src":"30725:419:28"},{"body":{"nodeType":"YulBlock","src":"31256:71:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31278:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"31286:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31274:3:28"},"nodeType":"YulFunctionCall","src":"31274:14:28"},{"hexValue":"4c276f7074696f6e20612064656a61206574652061636865746565","kind":"string","nodeType":"YulLiteral","src":"31290:29:28","type":"","value":"L'option a deja ete achetee"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31267:6:28"},"nodeType":"YulFunctionCall","src":"31267:53:28"},"nodeType":"YulExpressionStatement","src":"31267:53:28"}]},"name":"store_literal_in_memory_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31248:6:28","type":""}],"src":"31150:177:28"},{"body":{"nodeType":"YulBlock","src":"31479:220:28","statements":[{"nodeType":"YulAssignment","src":"31489:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31555:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"31560:2:28","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31496:58:28"},"nodeType":"YulFunctionCall","src":"31496:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31489:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31661:3:28"}],"functionName":{"name":"store_literal_in_memory_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2","nodeType":"YulIdentifier","src":"31572:88:28"},"nodeType":"YulFunctionCall","src":"31572:93:28"},"nodeType":"YulExpressionStatement","src":"31572:93:28"},{"nodeType":"YulAssignment","src":"31674:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31685:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"31690:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31681:3:28"},"nodeType":"YulFunctionCall","src":"31681:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31674:3:28"}]}]},"name":"abi_encode_t_stringliteral_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31467:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31475:3:28","type":""}],"src":"31333:366:28"},{"body":{"nodeType":"YulBlock","src":"31876:248:28","statements":[{"nodeType":"YulAssignment","src":"31886:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31898:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"31909:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31894:3:28"},"nodeType":"YulFunctionCall","src":"31894:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31886:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31933:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"31944:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31929:3:28"},"nodeType":"YulFunctionCall","src":"31929:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31952:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"31958:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31948:3:28"},"nodeType":"YulFunctionCall","src":"31948:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31922:6:28"},"nodeType":"YulFunctionCall","src":"31922:47:28"},"nodeType":"YulExpressionStatement","src":"31922:47:28"},{"nodeType":"YulAssignment","src":"31978:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32112:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31986:124:28"},"nodeType":"YulFunctionCall","src":"31986:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31978:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31856:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31871:4:28","type":""}],"src":"31705:419:28"},{"body":{"nodeType":"YulBlock","src":"32236:127:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32258:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"32266:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32254:3:28"},"nodeType":"YulFunctionCall","src":"32254:14:28"},{"hexValue":"566f7573206e6520706f7576657a20706173206163686574657220766f747265","kind":"string","nodeType":"YulLiteral","src":"32270:34:28","type":"","value":"Vous ne pouvez pas acheter votre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32247:6:28"},"nodeType":"YulFunctionCall","src":"32247:58:28"},"nodeType":"YulExpressionStatement","src":"32247:58:28"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32326:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"32334:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32322:3:28"},"nodeType":"YulFunctionCall","src":"32322:15:28"},{"hexValue":"2070726f707265206f7074696f6e","kind":"string","nodeType":"YulLiteral","src":"32339:16:28","type":"","value":" propre option"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32315:6:28"},"nodeType":"YulFunctionCall","src":"32315:41:28"},"nodeType":"YulExpressionStatement","src":"32315:41:28"}]},"name":"store_literal_in_memory_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32228:6:28","type":""}],"src":"32130:233:28"},{"body":{"nodeType":"YulBlock","src":"32515:220:28","statements":[{"nodeType":"YulAssignment","src":"32525:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32591:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"32596:2:28","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32532:58:28"},"nodeType":"YulFunctionCall","src":"32532:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32525:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32697:3:28"}],"functionName":{"name":"store_literal_in_memory_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac","nodeType":"YulIdentifier","src":"32608:88:28"},"nodeType":"YulFunctionCall","src":"32608:93:28"},"nodeType":"YulExpressionStatement","src":"32608:93:28"},{"nodeType":"YulAssignment","src":"32710:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32721:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"32726:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32717:3:28"},"nodeType":"YulFunctionCall","src":"32717:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32710:3:28"}]}]},"name":"abi_encode_t_stringliteral_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32503:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32511:3:28","type":""}],"src":"32369:366:28"},{"body":{"nodeType":"YulBlock","src":"32912:248:28","statements":[{"nodeType":"YulAssignment","src":"32922:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32934:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"32945:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32930:3:28"},"nodeType":"YulFunctionCall","src":"32930:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32922:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32969:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"32980:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32965:3:28"},"nodeType":"YulFunctionCall","src":"32965:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32988:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"32994:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32984:3:28"},"nodeType":"YulFunctionCall","src":"32984:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32958:6:28"},"nodeType":"YulFunctionCall","src":"32958:47:28"},"nodeType":"YulExpressionStatement","src":"32958:47:28"},{"nodeType":"YulAssignment","src":"33014:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33148:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33022:124:28"},"nodeType":"YulFunctionCall","src":"33022:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33014:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32892:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32907:4:28","type":""}],"src":"32741:419:28"},{"body":{"nodeType":"YulBlock","src":"33220:87:28","statements":[{"nodeType":"YulAssignment","src":"33230:11:28","value":{"name":"ptr","nodeType":"YulIdentifier","src":"33238:3:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"33230:4:28"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33258:1:28","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"33261:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33251:6:28"},"nodeType":"YulFunctionCall","src":"33251:14:28"},"nodeType":"YulExpressionStatement","src":"33251:14:28"},{"nodeType":"YulAssignment","src":"33274:26:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33292:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33295:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"33282:9:28"},"nodeType":"YulFunctionCall","src":"33282:18:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"33274:4:28"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"33207:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"33215:4:28","type":""}],"src":"33166:141:28"},{"body":{"nodeType":"YulBlock","src":"33357:49:28","statements":[{"nodeType":"YulAssignment","src":"33367:33:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33385:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"33392:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33381:3:28"},"nodeType":"YulFunctionCall","src":"33381:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"33397:2:28","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"33377:3:28"},"nodeType":"YulFunctionCall","src":"33377:23:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"33367:6:28"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33340:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"33350:6:28","type":""}],"src":"33313:93:28"},{"body":{"nodeType":"YulBlock","src":"33465:54:28","statements":[{"nodeType":"YulAssignment","src":"33475:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"33500:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"33506:5:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"33496:3:28"},"nodeType":"YulFunctionCall","src":"33496:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"33475:8:28"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"33440:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"33446:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"33456:8:28","type":""}],"src":"33412:107:28"},{"body":{"nodeType":"YulBlock","src":"33601:317:28","statements":[{"nodeType":"YulVariableDeclaration","src":"33611:35:28","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"33632:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"33644:1:28","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"33628:3:28"},"nodeType":"YulFunctionCall","src":"33628:18:28"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"33615:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33655:109:28","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"33686:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"33697:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"33667:18:28"},"nodeType":"YulFunctionCall","src":"33667:97:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"33659:4:28","type":""}]},{"nodeType":"YulAssignment","src":"33773:51:28","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"33804:9:28"},{"name":"toInsert","nodeType":"YulIdentifier","src":"33815:8:28"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"33785:18:28"},"nodeType":"YulFunctionCall","src":"33785:39:28"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"33773:8:28"}]},{"nodeType":"YulAssignment","src":"33833:30:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33846:5:28"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"33857:4:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"33853:3:28"},"nodeType":"YulFunctionCall","src":"33853:9:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33842:3:28"},"nodeType":"YulFunctionCall","src":"33842:21:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33833:5:28"}]},{"nodeType":"YulAssignment","src":"33872:40:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33885:5:28"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"33896:8:28"},{"name":"mask","nodeType":"YulIdentifier","src":"33906:4:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33892:3:28"},"nodeType":"YulFunctionCall","src":"33892:19:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"33882:2:28"},"nodeType":"YulFunctionCall","src":"33882:30:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"33872:6:28"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33562:5:28","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"33569:10:28","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"33581:8:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"33594:6:28","type":""}],"src":"33525:393:28"},{"body":{"nodeType":"YulBlock","src":"33984:82:28","statements":[{"nodeType":"YulAssignment","src":"33994:66:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34052:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34034:17:28"},"nodeType":"YulFunctionCall","src":"34034:24:28"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"34025:8:28"},"nodeType":"YulFunctionCall","src":"34025:34:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34007:17:28"},"nodeType":"YulFunctionCall","src":"34007:53:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"33994:9:28"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33964:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"33974:9:28","type":""}],"src":"33924:142:28"},{"body":{"nodeType":"YulBlock","src":"34119:28:28","statements":[{"nodeType":"YulAssignment","src":"34129:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"34136:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"34129:3:28"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34105:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"34115:3:28","type":""}],"src":"34072:75:28"},{"body":{"nodeType":"YulBlock","src":"34229:193:28","statements":[{"nodeType":"YulVariableDeclaration","src":"34239:63:28","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"34294:7:28"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"34263:30:28"},"nodeType":"YulFunctionCall","src":"34263:39:28"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"34243:16:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34318:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34358:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"34352:5:28"},"nodeType":"YulFunctionCall","src":"34352:11:28"},{"name":"offset","nodeType":"YulIdentifier","src":"34365:6:28"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"34397:16:28"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"34373:23:28"},"nodeType":"YulFunctionCall","src":"34373:41:28"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"34324:27:28"},"nodeType":"YulFunctionCall","src":"34324:91:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"34311:6:28"},"nodeType":"YulFunctionCall","src":"34311:105:28"},"nodeType":"YulExpressionStatement","src":"34311:105:28"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"34206:4:28","type":""},{"name":"offset","nodeType":"YulTypedName","src":"34212:6:28","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"34220:7:28","type":""}],"src":"34153:269:28"},{"body":{"nodeType":"YulBlock","src":"34477:24:28","statements":[{"nodeType":"YulAssignment","src":"34487:8:28","value":{"kind":"number","nodeType":"YulLiteral","src":"34494:1:28","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"34487:3:28"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"34473:3:28","type":""}],"src":"34428:73:28"},{"body":{"nodeType":"YulBlock","src":"34560:136:28","statements":[{"nodeType":"YulVariableDeclaration","src":"34570:46:28","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"34584:30:28"},"nodeType":"YulFunctionCall","src":"34584:32:28"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"34574:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"34669:4:28"},{"name":"offset","nodeType":"YulIdentifier","src":"34675:6:28"},{"name":"zero_0","nodeType":"YulIdentifier","src":"34683:6:28"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"34625:43:28"},"nodeType":"YulFunctionCall","src":"34625:65:28"},"nodeType":"YulExpressionStatement","src":"34625:65:28"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"34546:4:28","type":""},{"name":"offset","nodeType":"YulTypedName","src":"34552:6:28","type":""}],"src":"34507:189:28"},{"body":{"nodeType":"YulBlock","src":"34752:136:28","statements":[{"body":{"nodeType":"YulBlock","src":"34819:63:28","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"34863:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"34870:1:28","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"34833:29:28"},"nodeType":"YulFunctionCall","src":"34833:39:28"},"nodeType":"YulExpressionStatement","src":"34833:39:28"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"34772:5:28"},{"name":"end","nodeType":"YulIdentifier","src":"34779:3:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34769:2:28"},"nodeType":"YulFunctionCall","src":"34769:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"34784:26:28","statements":[{"nodeType":"YulAssignment","src":"34786:22:28","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"34799:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"34806:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34795:3:28"},"nodeType":"YulFunctionCall","src":"34795:13:28"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"34786:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"34766:2:28","statements":[]},"src":"34762:120:28"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"34740:5:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"34747:3:28","type":""}],"src":"34702:186:28"},{"body":{"nodeType":"YulBlock","src":"34973:464:28","statements":[{"body":{"nodeType":"YulBlock","src":"34999:431:28","statements":[{"nodeType":"YulVariableDeclaration","src":"35013:54:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"35061:5:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"35029:31:28"},"nodeType":"YulFunctionCall","src":"35029:38:28"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"35017:8:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35080:63:28","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"35103:8:28"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"35131:10:28"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"35113:17:28"},"nodeType":"YulFunctionCall","src":"35113:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35099:3:28"},"nodeType":"YulFunctionCall","src":"35099:44:28"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"35084:11:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"35300:27:28","statements":[{"nodeType":"YulAssignment","src":"35302:23:28","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"35317:8:28"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"35302:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"35284:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"35296:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35281:2:28"},"nodeType":"YulFunctionCall","src":"35281:18:28"},"nodeType":"YulIf","src":"35278:49:28"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"35369:11:28"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"35386:8:28"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"35414:3:28"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"35396:17:28"},"nodeType":"YulFunctionCall","src":"35396:22:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35382:3:28"},"nodeType":"YulFunctionCall","src":"35382:37:28"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"35340:28:28"},"nodeType":"YulFunctionCall","src":"35340:80:28"},"nodeType":"YulExpressionStatement","src":"35340:80:28"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"34990:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"34995:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34987:2:28"},"nodeType":"YulFunctionCall","src":"34987:11:28"},"nodeType":"YulIf","src":"34984:446:28"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"34949:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"34956:3:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"34961:10:28","type":""}],"src":"34894:543:28"},{"body":{"nodeType":"YulBlock","src":"35506:54:28","statements":[{"nodeType":"YulAssignment","src":"35516:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"35541:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"35547:5:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"35537:3:28"},"nodeType":"YulFunctionCall","src":"35537:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"35516:8:28"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"35481:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"35487:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"35497:8:28","type":""}],"src":"35443:117:28"},{"body":{"nodeType":"YulBlock","src":"35617:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"35627:68:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35676:1:28","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"35679:5:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35672:3:28"},"nodeType":"YulFunctionCall","src":"35672:13:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35691:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"35687:3:28"},"nodeType":"YulFunctionCall","src":"35687:6:28"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"35643:28:28"},"nodeType":"YulFunctionCall","src":"35643:51:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"35639:3:28"},"nodeType":"YulFunctionCall","src":"35639:56:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"35631:4:28","type":""}]},{"nodeType":"YulAssignment","src":"35704:25:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"35718:4:28"},{"name":"mask","nodeType":"YulIdentifier","src":"35724:4:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35714:3:28"},"nodeType":"YulFunctionCall","src":"35714:15:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"35704:6:28"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"35594:4:28","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"35600:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"35610:6:28","type":""}],"src":"35566:169:28"},{"body":{"nodeType":"YulBlock","src":"35821:214:28","statements":[{"nodeType":"YulAssignment","src":"35954:37:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"35981:4:28"},{"name":"len","nodeType":"YulIdentifier","src":"35987:3:28"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"35962:18:28"},"nodeType":"YulFunctionCall","src":"35962:29:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"35954:4:28"}]},{"nodeType":"YulAssignment","src":"36000:29:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"36011:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36021:1:28","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"36024:3:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"36017:3:28"},"nodeType":"YulFunctionCall","src":"36017:11:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"36008:2:28"},"nodeType":"YulFunctionCall","src":"36008:21:28"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"36000:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"35802:4:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"35808:3:28","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"35816:4:28","type":""}],"src":"35740:295:28"},{"body":{"nodeType":"YulBlock","src":"36132:1303:28","statements":[{"nodeType":"YulVariableDeclaration","src":"36143:51:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"36190:3:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"36157:32:28"},"nodeType":"YulFunctionCall","src":"36157:37:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"36147:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"36279:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"36281:16:28"},"nodeType":"YulFunctionCall","src":"36281:18:28"},"nodeType":"YulExpressionStatement","src":"36281:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36251:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"36259:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36248:2:28"},"nodeType":"YulFunctionCall","src":"36248:30:28"},"nodeType":"YulIf","src":"36245:56:28"},{"nodeType":"YulVariableDeclaration","src":"36311:52:28","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36357:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"36351:5:28"},"nodeType":"YulFunctionCall","src":"36351:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"36325:25:28"},"nodeType":"YulFunctionCall","src":"36325:38:28"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"36315:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36456:4:28"},{"name":"oldLen","nodeType":"YulIdentifier","src":"36462:6:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"36470:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"36410:45:28"},"nodeType":"YulFunctionCall","src":"36410:67:28"},"nodeType":"YulExpressionStatement","src":"36410:67:28"},{"nodeType":"YulVariableDeclaration","src":"36487:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"36504:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"36491:9:28","type":""}]},{"nodeType":"YulAssignment","src":"36515:17:28","value":{"kind":"number","nodeType":"YulLiteral","src":"36528:4:28","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"36515:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"36579:611:28","statements":[{"nodeType":"YulVariableDeclaration","src":"36593:37:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36612:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36624:4:28","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"36620:3:28"},"nodeType":"YulFunctionCall","src":"36620:9:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"36608:3:28"},"nodeType":"YulFunctionCall","src":"36608:22:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"36597:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36644:51:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36690:4:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"36658:31:28"},"nodeType":"YulFunctionCall","src":"36658:37:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"36648:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"36708:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"36717:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"36712:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"36776:163:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"36801:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"36819:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"36824:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36815:3:28"},"nodeType":"YulFunctionCall","src":"36815:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36809:5:28"},"nodeType":"YulFunctionCall","src":"36809:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"36794:6:28"},"nodeType":"YulFunctionCall","src":"36794:42:28"},"nodeType":"YulExpressionStatement","src":"36794:42:28"},{"nodeType":"YulAssignment","src":"36853:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"36867:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"36875:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36863:3:28"},"nodeType":"YulFunctionCall","src":"36863:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"36853:6:28"}]},{"nodeType":"YulAssignment","src":"36894:31:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"36911:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"36922:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36907:3:28"},"nodeType":"YulFunctionCall","src":"36907:18:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"36894:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"36742:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"36745:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36739:2:28"},"nodeType":"YulFunctionCall","src":"36739:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"36754:21:28","statements":[{"nodeType":"YulAssignment","src":"36756:17:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"36765:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"36768:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36761:3:28"},"nodeType":"YulFunctionCall","src":"36761:12:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"36756:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"36735:3:28","statements":[]},"src":"36731:208:28"},{"body":{"nodeType":"YulBlock","src":"36975:156:28","statements":[{"nodeType":"YulVariableDeclaration","src":"36993:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"37020:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"37025:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37016:3:28"},"nodeType":"YulFunctionCall","src":"37016:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37010:5:28"},"nodeType":"YulFunctionCall","src":"37010:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"36997:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"37060:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"37087:9:28"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"37102:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"37110:4:28","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37098:3:28"},"nodeType":"YulFunctionCall","src":"37098:17:28"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"37068:18:28"},"nodeType":"YulFunctionCall","src":"37068:48:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"37053:6:28"},"nodeType":"YulFunctionCall","src":"37053:64:28"},"nodeType":"YulExpressionStatement","src":"37053:64:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"36958:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"36967:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"36955:2:28"},"nodeType":"YulFunctionCall","src":"36955:19:28"},"nodeType":"YulIf","src":"36952:179:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37151:4:28"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"37165:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"37173:1:28","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37161:3:28"},"nodeType":"YulFunctionCall","src":"37161:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"37177:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37157:3:28"},"nodeType":"YulFunctionCall","src":"37157:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"37144:6:28"},"nodeType":"YulFunctionCall","src":"37144:36:28"},"nodeType":"YulExpressionStatement","src":"37144:36:28"}]},"nodeType":"YulCase","src":"36572:618:28","value":{"kind":"number","nodeType":"YulLiteral","src":"36577:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"37207:222:28","statements":[{"nodeType":"YulVariableDeclaration","src":"37221:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"37234:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"37225:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"37258:67:28","statements":[{"nodeType":"YulAssignment","src":"37276:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"37295:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"37300:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37291:3:28"},"nodeType":"YulFunctionCall","src":"37291:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37285:5:28"},"nodeType":"YulFunctionCall","src":"37285:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37276:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"37251:6:28"},"nodeType":"YulIf","src":"37248:77:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"37345:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37404:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"37411:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"37351:52:28"},"nodeType":"YulFunctionCall","src":"37351:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"37338:6:28"},"nodeType":"YulFunctionCall","src":"37338:81:28"},"nodeType":"YulExpressionStatement","src":"37338:81:28"}]},"nodeType":"YulCase","src":"37199:230:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36552:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"36560:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"36549:2:28"},"nodeType":"YulFunctionCall","src":"36549:14:28"},"nodeType":"YulSwitch","src":"36542:887:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"36121:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"36127:3:28","type":""}],"src":"36040:1395:28"},{"body":{"nodeType":"YulBlock","src":"37499:40:28","statements":[{"nodeType":"YulAssignment","src":"37510:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37526:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37520:5:28"},"nodeType":"YulFunctionCall","src":"37520:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"37510:6:28"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37482:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"37492:6:28","type":""}],"src":"37441:98:28"},{"body":{"nodeType":"YulBlock","src":"37640:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37657:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"37662:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37650:6:28"},"nodeType":"YulFunctionCall","src":"37650:19:28"},"nodeType":"YulExpressionStatement","src":"37650:19:28"},{"nodeType":"YulAssignment","src":"37678:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37697:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"37702:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37693:3:28"},"nodeType":"YulFunctionCall","src":"37693:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"37678:11:28"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37612:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"37617:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"37628:11:28","type":""}],"src":"37545:168:28"},{"body":{"nodeType":"YulBlock","src":"37809:283:28","statements":[{"nodeType":"YulVariableDeclaration","src":"37819:52:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37865:5:28"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"37833:31:28"},"nodeType":"YulFunctionCall","src":"37833:38:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"37823:6:28","type":""}]},{"nodeType":"YulAssignment","src":"37880:77:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37945:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"37950:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37887:57:28"},"nodeType":"YulFunctionCall","src":"37887:70:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37880:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38005:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"38012:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38001:3:28"},"nodeType":"YulFunctionCall","src":"38001:16:28"},{"name":"pos","nodeType":"YulIdentifier","src":"38019:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"38024:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"37966:34:28"},"nodeType":"YulFunctionCall","src":"37966:65:28"},"nodeType":"YulExpressionStatement","src":"37966:65:28"},{"nodeType":"YulAssignment","src":"38040:46:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38051:3:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"38078:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"38056:21:28"},"nodeType":"YulFunctionCall","src":"38056:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38047:3:28"},"nodeType":"YulFunctionCall","src":"38047:39:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38040:3:28"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37790:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"37797:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37805:3:28","type":""}],"src":"37719:373:28"},{"body":{"nodeType":"YulBlock","src":"38298:440:28","statements":[{"nodeType":"YulAssignment","src":"38308:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38320:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"38331:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38316:3:28"},"nodeType":"YulFunctionCall","src":"38316:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38308:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38389:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38402:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"38413:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38398:3:28"},"nodeType":"YulFunctionCall","src":"38398:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"38345:43:28"},"nodeType":"YulFunctionCall","src":"38345:71:28"},"nodeType":"YulExpressionStatement","src":"38345:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38470:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38483:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"38494:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38479:3:28"},"nodeType":"YulFunctionCall","src":"38479:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"38426:43:28"},"nodeType":"YulFunctionCall","src":"38426:72:28"},"nodeType":"YulExpressionStatement","src":"38426:72:28"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"38552:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38565:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"38576:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38561:3:28"},"nodeType":"YulFunctionCall","src":"38561:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"38508:43:28"},"nodeType":"YulFunctionCall","src":"38508:72:28"},"nodeType":"YulExpressionStatement","src":"38508:72:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38601:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"38612:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38597:3:28"},"nodeType":"YulFunctionCall","src":"38597:18:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38621:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"38627:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38617:3:28"},"nodeType":"YulFunctionCall","src":"38617:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38590:6:28"},"nodeType":"YulFunctionCall","src":"38590:48:28"},"nodeType":"YulExpressionStatement","src":"38590:48:28"},{"nodeType":"YulAssignment","src":"38647:84:28","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"38717:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"38726:4:28"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38655:61:28"},"nodeType":"YulFunctionCall","src":"38655:76:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38647:4:28"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38246:9:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"38258:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"38266:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38274:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38282:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38293:4:28","type":""}],"src":"38098:640:28"},{"body":{"nodeType":"YulBlock","src":"38806:79:28","statements":[{"nodeType":"YulAssignment","src":"38816:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"38831:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"38825:5:28"},"nodeType":"YulFunctionCall","src":"38825:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"38816:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38873:5:28"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"38847:25:28"},"nodeType":"YulFunctionCall","src":"38847:32:28"},"nodeType":"YulExpressionStatement","src":"38847:32:28"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"38784:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"38792:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"38800:5:28","type":""}],"src":"38744:141:28"},{"body":{"nodeType":"YulBlock","src":"38967:273:28","statements":[{"body":{"nodeType":"YulBlock","src":"39013:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"39015:77:28"},"nodeType":"YulFunctionCall","src":"39015:79:28"},"nodeType":"YulExpressionStatement","src":"39015:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"38988:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"38997:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38984:3:28"},"nodeType":"YulFunctionCall","src":"38984:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"39009:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"38980:3:28"},"nodeType":"YulFunctionCall","src":"38980:32:28"},"nodeType":"YulIf","src":"38977:119:28"},{"nodeType":"YulBlock","src":"39106:127:28","statements":[{"nodeType":"YulVariableDeclaration","src":"39121:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"39135:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"39125:6:28","type":""}]},{"nodeType":"YulAssignment","src":"39150:73:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39195:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"39206:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39191:3:28"},"nodeType":"YulFunctionCall","src":"39191:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"39215:7:28"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"39160:30:28"},"nodeType":"YulFunctionCall","src":"39160:63:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"39150:6:28"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38937:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"38948:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"38960:6:28","type":""}],"src":"38891:349:28"},{"body":{"nodeType":"YulBlock","src":"39360:34:28","statements":[{"nodeType":"YulAssignment","src":"39370:18:28","value":{"name":"pos","nodeType":"YulIdentifier","src":"39385:3:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"39370:11:28"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39332:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"39337:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"39348:11:28","type":""}],"src":"39246:148:28"},{"body":{"nodeType":"YulBlock","src":"39510:280:28","statements":[{"nodeType":"YulVariableDeclaration","src":"39520:53:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39567:5:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"39534:32:28"},"nodeType":"YulFunctionCall","src":"39534:39:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"39524:6:28","type":""}]},{"nodeType":"YulAssignment","src":"39582:96:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39666:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"39671:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39589:76:28"},"nodeType":"YulFunctionCall","src":"39589:89:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39582:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39726:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"39733:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39722:3:28"},"nodeType":"YulFunctionCall","src":"39722:16:28"},{"name":"pos","nodeType":"YulIdentifier","src":"39740:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"39745:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"39687:34:28"},"nodeType":"YulFunctionCall","src":"39687:65:28"},"nodeType":"YulExpressionStatement","src":"39687:65:28"},{"nodeType":"YulAssignment","src":"39761:23:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39772:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"39777:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39768:3:28"},"nodeType":"YulFunctionCall","src":"39768:16:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39761:3:28"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39491:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"39498:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39506:3:28","type":""}],"src":"39400:390:28"},{"body":{"nodeType":"YulBlock","src":"39980:251:28","statements":[{"nodeType":"YulAssignment","src":"39991:102:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40080:6:28"},{"name":"pos","nodeType":"YulIdentifier","src":"40089:3:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39998:81:28"},"nodeType":"YulFunctionCall","src":"39998:95:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39991:3:28"}]},{"nodeType":"YulAssignment","src":"40103:102:28","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40192:6:28"},{"name":"pos","nodeType":"YulIdentifier","src":"40201:3:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"40110:81:28"},"nodeType":"YulFunctionCall","src":"40110:95:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40103:3:28"}]},{"nodeType":"YulAssignment","src":"40215:10:28","value":{"name":"pos","nodeType":"YulIdentifier","src":"40222:3:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40215:3:28"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39951:3:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39957:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39965:6:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39976:3:28","type":""}],"src":"39796:435:28"},{"body":{"nodeType":"YulBlock","src":"40265:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40282:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40285:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40275:6:28"},"nodeType":"YulFunctionCall","src":"40275:88:28"},"nodeType":"YulExpressionStatement","src":"40275:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40379:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"40382:4:28","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40372:6:28"},"nodeType":"YulFunctionCall","src":"40372:15:28"},"nodeType":"YulExpressionStatement","src":"40372:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40403:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40406:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"40396:6:28"},"nodeType":"YulFunctionCall","src":"40396:15:28"},"nodeType":"YulExpressionStatement","src":"40396:15:28"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"40237:180:28"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$7899_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$7899_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$7899_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$7899__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$7899_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_address_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_address_t_bool__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IERC20_$909_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$909_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$909_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$909__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$909_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strike1 doit etre inferieur a St\")\n\n        mstore(add(memPtr, 32), \"rike2\")\n\n    }\n\n    function abi_encode_t_stringliteral_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f79b5a94e44d57b3192872707ef5f5e90c31e3136cb4f843d55da616f183b616_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd(memPtr) {\n\n        mstore(add(memPtr, 0), \"L'expiration doit etre dans le f\")\n\n        mstore(add(memPtr, 32), \"utur\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6b564ee9a42577b553bae6dcc19c0cb49d58bd239bd6d52d4908b39d10d9ccd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Le collateral doit etre positif\")\n\n    }\n\n    function abi_encode_t_stringliteral_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7ac7f4c1befd08cdfd9c5cd88030cd2c805e96f3453e2788407eb75b13c2bfbc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfert de collateral echoue\")\n\n    }\n\n    function abi_encode_t_stringliteral_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cb7f602728b5174790584cbbca8b13ce8cfd387bdc26df878776c703f48cf20f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"L'option a deja ete exercee\")\n\n    }\n\n    function abi_encode_t_stringliteral_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_53dfee389b1987deda160b0b39742a404b85a6f971e90dd4d3c5c5bc2bf444a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3(memPtr) {\n\n        mstore(add(memPtr, 0), \"L'option n'a pas encore expire\")\n\n    }\n\n    function abi_encode_t_stringliteral_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3ce4a9ebdda45c2ab75364c113ef1523426e5ecd4925c242dc49dbc3af27e7c3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfert de payoff echoue\")\n\n    }\n\n    function abi_encode_t_stringliteral_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f0107908af64157049ce637a23edac777dc328283b7d1b406e87586fbed7472d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfert de collateral restant \")\n\n        mstore(add(memPtr, 32), \"echoue\")\n\n    }\n\n    function abi_encode_t_stringliteral_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d1bb170cb3b703f0817733c303d04b46d84348224fc94e2396640b57c8a150f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204(memPtr) {\n\n        mstore(add(memPtr, 0), \"Prix BTC invalide\")\n\n    }\n\n    function abi_encode_t_stringliteral_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3783335db3f8129d0232dbc1c4b35c0ff5f6ca3c837cddbd8e6275da84aca204_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3(memPtr) {\n\n        mstore(add(memPtr, 0), \"L'option a expire\")\n\n    }\n\n    function abi_encode_t_stringliteral_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4049eef9ee3e3ac1a2e6dadde8c0caa1905b06c4c593d70c02c87aa0314f3dd3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"L'option a deja ete achetee\")\n\n    }\n\n    function abi_encode_t_stringliteral_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_401d67a1914a12466202e77024833cd36b781df561d62ec79cea389987d5a4d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vous ne pouvez pas acheter votre\")\n\n        mstore(add(memPtr, 32), \" propre option\")\n\n    }\n\n    function abi_encode_t_stringliteral_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cfe1e7433b2e2a51fb849eff67ea7fd4ff89ed0bbbca28b900d47113f25185ac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063a22cb4651161007c578063a22cb465146103df578063b88d4fde146103fb578063c87b56dd14610417578063e985e9c514610447578063e9cbd82214610477578063f2fde38b1461049557610158565b8063715018a614610329578063741bef1a146103335780638da5cb5b1461035157806395d89b411461036f5780639841ac441461038d5780639abe0d58146103a957610158565b80633420115211610115578063342011521461024357806337b371d91461027357806342842e0e1461028f5780636352211e146102ab578063696c86cd146102db57806370a08231146102f957610158565b806301ffc9a71461015d57806306fdde031461018d578063081812fc146101ab578063095ea7b3146101db578063143e602c146101f757806323b872dd14610227575b600080fd5b610177600480360381019061017291906128e6565b6104b1565b604051610184919061292e565b60405180910390f35b6101956104c3565b6040516101a291906129d9565b60405180910390f35b6101c560048036038101906101c09190612a31565b610555565b6040516101d29190612a9f565b60405180910390f35b6101f560048036038101906101f09190612ae6565b610571565b005b610211600480360381019061020c9190612c5b565b610587565b60405161021e9190612d01565b60405180910390f35b610241600480360381019061023c9190612d1c565b6108fa565b005b61025d60048036038101906102589190612d6f565b6109fc565b60405161026a9190612d01565b60405180910390f35b61028d60048036038101906102889190612a31565b610a6a565b005b6102a960048036038101906102a49190612d1c565b610e48565b005b6102c560048036038101906102c09190612a31565b610e68565b6040516102d29190612a9f565b60405180910390f35b6102e3610e7a565b6040516102f09190612d01565b60405180910390f35b610313600480360381019061030e9190612daf565b610f5e565b6040516103209190612d01565b60405180910390f35b610331611018565b005b61033b61102c565b6040516103489190612e3b565b60405180910390f35b610359611052565b6040516103669190612a9f565b60405180910390f35b61037761107c565b60405161038491906129d9565b60405180910390f35b6103a760048036038101906103a29190612a31565b61110e565b005b6103c360048036038101906103be9190612a31565b61130c565b6040516103d69796959493929190612e56565b60405180910390f35b6103f960048036038101906103f49190612ef1565b61139b565b005b61041560048036038101906104109190612fd2565b6113b1565b005b610431600480360381019061042c9190612a31565b6113d6565b60405161043e91906129d9565b60405180910390f35b610461600480360381019061045c9190613055565b6113e8565b60405161046e919061292e565b60405180910390f35b61047f61147c565b60405161048c91906130b6565b60405180910390f35b6104af60048036038101906104aa9190612daf565b6114a2565b005b60006104bc82611528565b9050919050565b6060600080546104d290613100565b80601f01602080910402602001604051908101604052809291908181526020018280546104fe90613100565b801561054b5780601f106105205761010080835404028352916020019161054b565b820191906000526020600020905b81548152906001019060200180831161052e57829003601f168201915b5050505050905090565b600061056082611589565b5061056a82611611565b9050919050565b610583828261057e61164e565b611656565b5050565b60008486106105cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c2906131a3565b60405180910390fd5b42841161060d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060490613235565b60405180910390fd5b60008311610650576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610647906132a1565b60405180910390fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016106af939291906132c1565b6020604051808303816000875af11580156106ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f2919061330d565b610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890613386565b60405180910390fd5b600060086000815480929190610746906133d5565b9190505590506040518060e001604052808881526020018781526020018681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160001515815250600960008381526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160146101000a81548160ff0219169083151502179055509050506108a53382611668565b6108af8184611686565b807faeccbfaf65ad7aba452b41d0c65100e7f22a90b90d0dfb7439da1b3ef280ff06338989896040516108e5949392919061341d565b60405180910390a28091505095945050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096c5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016109639190612a9f565b60405180910390fd5b6000610980838361097b61164e565b6116e2565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146109f6578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016109ed93929190613462565b60405180910390fd5b50505050565b60008060096000858152602001908152602001600020905080600001548311610a29576000915050610a64565b80600101548310610a505780600001548160010154610a489190613499565b915050610a64565b806000015483610a609190613499565b9150505b92915050565b60006009600083815260200190815260200160002090508060050160149054906101000a900460ff1615610ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aca90613519565b60405180910390fd5b8060020154421015610b1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1190613585565b60405180910390fd5b60018160050160146101000a81548160ff0219169083151502179055506000610b41610e7a565b90506000610b4f84836109fc565b905060008073ffffffffffffffffffffffffffffffffffffffff168460050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bd4578360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610bfa565b8360050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b90506000821115610ce557600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b8152600401610c629291906135a5565b6020604051808303816000875af1158015610c81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca5919061330d565b610ce4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdb9061361a565b60405180910390fd5b5b6000828560030154610cf79190613499565b90506000811115610e0657600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8660040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610d839291906135a5565b6020604051808303816000875af1158015610da2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc6919061330d565b610e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfc906136ac565b60405180910390fd5b5b857fb3229cca4d7dce5064bbe840844410c87eb491cb8de1adba5386238aeb50439a8486604051610e389291906136cc565b60405180910390a2505050505050565b610e63838383604051806020016040528060008152506113b1565b505050565b6000610e7382611589565b9050919050565b600080600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610eea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0e9190613782565b50505091505060008113610f57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4e90613849565b60405180910390fd5b8091505090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fd15760006040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610fc89190612a9f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6110206118fc565b61102a6000611983565b565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461108b90613100565b80601f01602080910402602001604051908101604052809291908181526020018280546110b790613100565b80156111045780601f106110d957610100808354040283529160200191611104565b820191906000526020600020905b8154815290600101906020018083116110e757829003601f168201915b5050505050905090565b60006009600083815260200190815260200160002090504281600201541161116b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611162906138b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f590613921565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1661121e83610e68565b73ffffffffffffffffffffffffffffffffffffffff1603611274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126b906139b3565b60405180910390fd5b338160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006112c283610e68565b90506112cf813385611a49565b827f6c35fe455375b6647f82e638fc154f286bcc5a02f6ace0290d36aa7ea5aa5413336040516112ff9190612a9f565b60405180910390a2505050565b60096020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160149054906101000a900460ff16905087565b6113ad6113a661164e565b8383611bb6565b5050565b6113bc8484846108fa565b6113d06113c761164e565b85858585611d25565b50505050565b60606113e182611ed6565b9050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6114aa6118fc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361151c5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016115139190612a9f565b60405180910390fd5b61152581611983565b50565b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611582575061158182611fe9565b5b9050919050565b600080611595836120cb565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361160857826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016115ff9190612d01565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6116638383836001612108565b505050565b6116828282604051806020016040528060008152506122cd565b5050565b806006600084815260200190815260200160002090816116a69190613b75565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516116d69190612d01565b60405180910390a15050565b6000806116ee846120cb565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146117305761172f8184866122f1565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117c157611772600085600080612108565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611844576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b61190461164e565b73ffffffffffffffffffffffffffffffffffffffff16611922611052565b73ffffffffffffffffffffffffffffffffffffffff16146119815761194561164e565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016119789190612a9f565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611abb5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ab29190612a9f565b60405180910390fd5b6000611ac9838360006116e2565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611b3c57816040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611b339190612d01565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611bb0578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401611ba793929190613462565b60405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c2757816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401611c1e9190612a9f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611d18919061292e565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611ecf578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401611d849493929190613c9c565b6020604051808303816000875af1925050508015611dc057506040513d601f19601f82011682018060405250810190611dbd9190613cfd565b60015b611e44573d8060008114611df0576040519150601f19603f3d011682016040523d82523d6000602084013e611df5565b606091505b506000815103611e3c57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611e339190612a9f565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611ecd57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ec49190612a9f565b60405180910390fd5b505b5050505050565b6060611ee182611589565b506000600660008481526020019081526020016000208054611f0290613100565b80601f0160208091040260200160405190810160405280929190818152602001828054611f2e90613100565b8015611f7b5780601f10611f5057610100808354040283529160200191611f7b565b820191906000526020600020905b815481529060010190602001808311611f5e57829003601f168201915b505050505090506000611f8c6123b5565b90506000815103611fa1578192505050611fe4565b600082511115611fd6578082604051602001611fbe929190613d66565b60405160208183030381529060405292505050611fe4565b611fdf846123cc565b925050505b919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806120b457507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806120c457506120c382612435565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806121415750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561227557600061215184611589565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156121bc57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156121cf57506121cd81846113e8565b155b1561221157826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016122089190612a9f565b60405180910390fd5b811561227357838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6122d7838361249f565b6122ec6122e261164e565b6000858585611d25565b505050565b6122fc838383612598565b6123b057600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361237157806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016123689190612d01565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016123a79291906135a5565b60405180910390fd5b505050565b606060405180602001604052806000815250905090565b60606123d782611589565b5060006123e26123b5565b90506000815111612402576040518060200160405280600081525061242d565b8061240c84612659565b60405160200161241d929190613d66565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036125115760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016125089190612a9f565b60405180910390fd5b600061251f838360006116e2565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146125935760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161258a9190612a9f565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561265057508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612611575061261084846113e8565b5b8061264f57508273ffffffffffffffffffffffffffffffffffffffff1661263783611611565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b60606000600161266884612727565b01905060008167ffffffffffffffff81111561268757612686612b30565b5b6040519080825280601f01601f1916602001820160405280156126b95781602001600182028036833780820191505090505b509050600082602001820190505b60011561271c578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816127105761270f613d8a565b5b049450600085036126c7575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612785577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161277b5761277a613d8a565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106127c2576d04ee2d6d415b85acef810000000083816127b8576127b7613d8a565b5b0492506020810190505b662386f26fc1000083106127f157662386f26fc1000083816127e7576127e6613d8a565b5b0492506010810190505b6305f5e100831061281a576305f5e10083816128105761280f613d8a565b5b0492506008810190505b612710831061283f57612710838161283557612834613d8a565b5b0492506004810190505b60648310612862576064838161285857612857613d8a565b5b0492506002810190505b600a8310612871576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6128c38161288e565b81146128ce57600080fd5b50565b6000813590506128e0816128ba565b92915050565b6000602082840312156128fc576128fb612884565b5b600061290a848285016128d1565b91505092915050565b60008115159050919050565b61292881612913565b82525050565b6000602082019050612943600083018461291f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612983578082015181840152602081019050612968565b60008484015250505050565b6000601f19601f8301169050919050565b60006129ab82612949565b6129b58185612954565b93506129c5818560208601612965565b6129ce8161298f565b840191505092915050565b600060208201905081810360008301526129f381846129a0565b905092915050565b6000819050919050565b612a0e816129fb565b8114612a1957600080fd5b50565b600081359050612a2b81612a05565b92915050565b600060208284031215612a4757612a46612884565b5b6000612a5584828501612a1c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612a8982612a5e565b9050919050565b612a9981612a7e565b82525050565b6000602082019050612ab46000830184612a90565b92915050565b612ac381612a7e565b8114612ace57600080fd5b50565b600081359050612ae081612aba565b92915050565b60008060408385031215612afd57612afc612884565b5b6000612b0b85828601612ad1565b9250506020612b1c85828601612a1c565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612b688261298f565b810181811067ffffffffffffffff82111715612b8757612b86612b30565b5b80604052505050565b6000612b9a61287a565b9050612ba68282612b5f565b919050565b600067ffffffffffffffff821115612bc657612bc5612b30565b5b612bcf8261298f565b9050602081019050919050565b82818337600083830152505050565b6000612bfe612bf984612bab565b612b90565b905082815260208101848484011115612c1a57612c19612b2b565b5b612c25848285612bdc565b509392505050565b600082601f830112612c4257612c41612b26565b5b8135612c52848260208601612beb565b91505092915050565b600080600080600060a08688031215612c7757612c76612884565b5b6000612c8588828901612a1c565b9550506020612c9688828901612a1c565b9450506040612ca788828901612a1c565b9350506060612cb888828901612a1c565b925050608086013567ffffffffffffffff811115612cd957612cd8612889565b5b612ce588828901612c2d565b9150509295509295909350565b612cfb816129fb565b82525050565b6000602082019050612d166000830184612cf2565b92915050565b600080600060608486031215612d3557612d34612884565b5b6000612d4386828701612ad1565b9350506020612d5486828701612ad1565b9250506040612d6586828701612a1c565b9150509250925092565b60008060408385031215612d8657612d85612884565b5b6000612d9485828601612a1c565b9250506020612da585828601612a1c565b9150509250929050565b600060208284031215612dc557612dc4612884565b5b6000612dd384828501612ad1565b91505092915050565b6000819050919050565b6000612e01612dfc612df784612a5e565b612ddc565b612a5e565b9050919050565b6000612e1382612de6565b9050919050565b6000612e2582612e08565b9050919050565b612e3581612e1a565b82525050565b6000602082019050612e506000830184612e2c565b92915050565b600060e082019050612e6b600083018a612cf2565b612e786020830189612cf2565b612e856040830188612cf2565b612e926060830187612cf2565b612e9f6080830186612a90565b612eac60a0830185612a90565b612eb960c083018461291f565b98975050505050505050565b612ece81612913565b8114612ed957600080fd5b50565b600081359050612eeb81612ec5565b92915050565b60008060408385031215612f0857612f07612884565b5b6000612f1685828601612ad1565b9250506020612f2785828601612edc565b9150509250929050565b600067ffffffffffffffff821115612f4c57612f4b612b30565b5b612f558261298f565b9050602081019050919050565b6000612f75612f7084612f31565b612b90565b905082815260208101848484011115612f9157612f90612b2b565b5b612f9c848285612bdc565b509392505050565b600082601f830112612fb957612fb8612b26565b5b8135612fc9848260208601612f62565b91505092915050565b60008060008060808587031215612fec57612feb612884565b5b6000612ffa87828801612ad1565b945050602061300b87828801612ad1565b935050604061301c87828801612a1c565b925050606085013567ffffffffffffffff81111561303d5761303c612889565b5b61304987828801612fa4565b91505092959194509250565b6000806040838503121561306c5761306b612884565b5b600061307a85828601612ad1565b925050602061308b85828601612ad1565b9150509250929050565b60006130a082612e08565b9050919050565b6130b081613095565b82525050565b60006020820190506130cb60008301846130a7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061311857607f821691505b60208210810361312b5761312a6130d1565b5b50919050565b7f537472696b653120646f6974206574726520696e66657269657572206120537460008201527f72696b6532000000000000000000000000000000000000000000000000000000602082015250565b600061318d602583612954565b915061319882613131565b604082019050919050565b600060208201905081810360008301526131bc81613180565b9050919050565b7f4c2765787069726174696f6e20646f697420657472652064616e73206c65206660008201527f7574757200000000000000000000000000000000000000000000000000000000602082015250565b600061321f602483612954565b915061322a826131c3565b604082019050919050565b6000602082019050818103600083015261324e81613212565b9050919050565b7f4c6520636f6c6c61746572616c20646f6974206574726520706f736974696600600082015250565b600061328b601f83612954565b915061329682613255565b602082019050919050565b600060208201905081810360008301526132ba8161327e565b9050919050565b60006060820190506132d66000830186612a90565b6132e36020830185612a90565b6132f06040830184612cf2565b949350505050565b60008151905061330781612ec5565b92915050565b60006020828403121561332357613322612884565b5b6000613331848285016132f8565b91505092915050565b7f5472616e736665727420646520636f6c6c61746572616c206563686f75650000600082015250565b6000613370601e83612954565b915061337b8261333a565b602082019050919050565b6000602082019050818103600083015261339f81613363565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006133e0826129fb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613412576134116133a6565b5b600182019050919050565b60006080820190506134326000830187612a90565b61343f6020830186612cf2565b61344c6040830185612cf2565b6134596060830184612cf2565b95945050505050565b60006060820190506134776000830186612a90565b6134846020830185612cf2565b6134916040830184612a90565b949350505050565b60006134a4826129fb565b91506134af836129fb565b92508282039050818111156134c7576134c66133a6565b5b92915050565b7f4c276f7074696f6e20612064656a612065746520657865726365650000000000600082015250565b6000613503601b83612954565b915061350e826134cd565b602082019050919050565b60006020820190508181036000830152613532816134f6565b9050919050565b7f4c276f7074696f6e206e27612070617320656e636f7265206578706972650000600082015250565b600061356f601e83612954565b915061357a82613539565b602082019050919050565b6000602082019050818103600083015261359e81613562565b9050919050565b60006040820190506135ba6000830185612a90565b6135c76020830184612cf2565b9392505050565b7f5472616e7366657274206465207061796f6666206563686f7565000000000000600082015250565b6000613604601a83612954565b915061360f826135ce565b602082019050919050565b60006020820190508181036000830152613633816135f7565b9050919050565b7f5472616e736665727420646520636f6c6c61746572616c2072657374616e742060008201527f6563686f75650000000000000000000000000000000000000000000000000000602082015250565b6000613696602683612954565b91506136a18261363a565b604082019050919050565b600060208201905081810360008301526136c581613689565b9050919050565b60006040820190506136e16000830185612cf2565b6136ee6020830184612cf2565b9392505050565b600069ffffffffffffffffffff82169050919050565b613714816136f5565b811461371f57600080fd5b50565b6000815190506137318161370b565b92915050565b6000819050919050565b61374a81613737565b811461375557600080fd5b50565b60008151905061376781613741565b92915050565b60008151905061377c81612a05565b92915050565b600080600080600060a0868803121561379e5761379d612884565b5b60006137ac88828901613722565b95505060206137bd88828901613758565b94505060406137ce8882890161376d565b93505060606137df8882890161376d565b92505060806137f088828901613722565b9150509295509295909350565b7f507269782042544320696e76616c696465000000000000000000000000000000600082015250565b6000613833601183612954565b915061383e826137fd565b602082019050919050565b6000602082019050818103600083015261386281613826565b9050919050565b7f4c276f7074696f6e206120657870697265000000000000000000000000000000600082015250565b600061389f601183612954565b91506138aa82613869565b602082019050919050565b600060208201905081810360008301526138ce81613892565b9050919050565b7f4c276f7074696f6e20612064656a612065746520616368657465650000000000600082015250565b600061390b601b83612954565b9150613916826138d5565b602082019050919050565b6000602082019050818103600083015261393a816138fe565b9050919050565b7f566f7573206e6520706f7576657a20706173206163686574657220766f74726560008201527f2070726f707265206f7074696f6e000000000000000000000000000000000000602082015250565b600061399d602e83612954565b91506139a882613941565b604082019050919050565b600060208201905081810360008301526139cc81613990565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613a357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826139f8565b613a3f86836139f8565b95508019841693508086168417925050509392505050565b6000613a72613a6d613a68846129fb565b612ddc565b6129fb565b9050919050565b6000819050919050565b613a8c83613a57565b613aa0613a9882613a79565b848454613a05565b825550505050565b600090565b613ab5613aa8565b613ac0818484613a83565b505050565b5b81811015613ae457613ad9600082613aad565b600181019050613ac6565b5050565b601f821115613b2957613afa816139d3565b613b03846139e8565b81016020851015613b12578190505b613b26613b1e856139e8565b830182613ac5565b50505b505050565b600082821c905092915050565b6000613b4c60001984600802613b2e565b1980831691505092915050565b6000613b658383613b3b565b9150826002028217905092915050565b613b7e82612949565b67ffffffffffffffff811115613b9757613b96612b30565b5b613ba18254613100565b613bac828285613ae8565b600060209050601f831160018114613bdf5760008415613bcd578287015190505b613bd78582613b59565b865550613c3f565b601f198416613bed866139d3565b60005b82811015613c1557848901518255600182019150602085019450602081019050613bf0565b86831015613c325784890151613c2e601f891682613b3b565b8355505b6001600288020188555050505b505050505050565b600081519050919050565b600082825260208201905092915050565b6000613c6e82613c47565b613c788185613c52565b9350613c88818560208601612965565b613c918161298f565b840191505092915050565b6000608082019050613cb16000830187612a90565b613cbe6020830186612a90565b613ccb6040830185612cf2565b8181036060830152613cdd8184613c63565b905095945050505050565b600081519050613cf7816128ba565b92915050565b600060208284031215613d1357613d12612884565b5b6000613d2184828501613ce8565b91505092915050565b600081905092915050565b6000613d4082612949565b613d4a8185613d2a565b9350613d5a818560208601612965565b80840191505092915050565b6000613d728285613d35565b9150613d7e8284613d35565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220cddb372110bd4b6444dde837de85e5a772650ed2efa4df7aa16070c4979498da64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xE9CBD822 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x495 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x9841AC44 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x9ABE0D58 EQ PUSH2 0x3A9 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x34201152 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x34201152 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x37B371D9 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x696C86CD EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2F9 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x143E602C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x227 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x28E6 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x29D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x2AE6 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x2C5B JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x2D1C JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x2D6F JUMP JUMPDEST PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x2D1C JUMP JUMPDEST PUSH2 0xE48 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH2 0x1018 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x2E3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH2 0x107C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x29D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x110E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x130C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D6 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2EF1 JUMP JUMPDEST PUSH2 0x139B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x415 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x2FD2 JUMP JUMPDEST PUSH2 0x13B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x431 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x29D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x461 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x3055 JUMP JUMPDEST PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH2 0x147C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x30B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x2DAF JUMP JUMPDEST PUSH2 0x14A2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x4BC DUP3 PUSH2 0x1528 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4D2 SWAP1 PUSH2 0x3100 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FE SWAP1 PUSH2 0x3100 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x520 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x560 DUP3 PUSH2 0x1589 JUMP JUMPDEST POP PUSH2 0x56A DUP3 PUSH2 0x1611 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x583 DUP3 DUP3 PUSH2 0x57E PUSH2 0x164E JUMP JUMPDEST PUSH2 0x1656 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 LT PUSH2 0x5CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C2 SWAP1 PUSH2 0x31A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP5 GT PUSH2 0x60D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP1 PUSH2 0x3235 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x647 SWAP1 PUSH2 0x32A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0x330D JUMP JUMPDEST PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x3386 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x746 SWAP1 PUSH2 0x33D5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x8A5 CALLER DUP3 PUSH2 0x1668 JUMP JUMPDEST PUSH2 0x8AF DUP2 DUP5 PUSH2 0x1686 JUMP JUMPDEST DUP1 PUSH32 0xAECCBFAF65AD7ABA452B41D0C65100E7F22A90B90D0DFB7439DA1B3EF280FF06 CALLER DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x8E5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x341D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x96C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x963 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x980 DUP4 DUP4 PUSH2 0x97B PUSH2 0x164E JUMP JUMPDEST PUSH2 0x16E2 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9F6 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP4 GT PUSH2 0xA29 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xA64 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP4 LT PUSH2 0xA50 JUMPI DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x3499 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA64 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD SLOAD DUP4 PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0x3499 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACA SWAP1 PUSH2 0x3519 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB11 SWAP1 PUSH2 0x3585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xB41 PUSH2 0xE7A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB4F DUP5 DUP4 PUSH2 0x9FC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD4 JUMPI DUP4 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBFA JUMP JUMPDEST DUP4 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT ISZERO PUSH2 0xCE5 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP3 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC62 SWAP3 SWAP2 SWAP1 PUSH2 0x35A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA5 SWAP2 SWAP1 PUSH2 0x330D JUMP JUMPDEST PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP1 PUSH2 0x361A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP3 DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0xCF7 SWAP2 SWAP1 PUSH2 0x3499 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xE06 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP7 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD83 SWAP3 SWAP2 SWAP1 PUSH2 0x35A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDA2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x330D JUMP JUMPDEST PUSH2 0xE05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFC SWAP1 PUSH2 0x36AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP6 PUSH32 0xB3229CCA4D7DCE5064BBE840844410C87EB491CB8DE1ADBA5386238AEB50439A DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xE38 SWAP3 SWAP2 SWAP1 PUSH2 0x36CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE63 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x13B1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE73 DUP3 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF0E SWAP2 SWAP1 PUSH2 0x3782 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 SGT PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4E SWAP1 PUSH2 0x3849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFD1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC8 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1020 PUSH2 0x18FC JUMP JUMPDEST PUSH2 0x102A PUSH1 0x0 PUSH2 0x1983 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x108B SWAP1 PUSH2 0x3100 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10B7 SWAP1 PUSH2 0x3100 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1104 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1104 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP TIMESTAMP DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x116B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1162 SWAP1 PUSH2 0x38B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F5 SWAP1 PUSH2 0x3921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x121E DUP4 PUSH2 0xE68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1274 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126B SWAP1 PUSH2 0x39B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x12C2 DUP4 PUSH2 0xE68 JUMP JUMPDEST SWAP1 POP PUSH2 0x12CF DUP2 CALLER DUP6 PUSH2 0x1A49 JUMP JUMPDEST DUP3 PUSH32 0x6C35FE455375B6647F82E638FC154F286BCC5A02F6ACE0290D36AA7EA5AA5413 CALLER PUSH1 0x40 MLOAD PUSH2 0x12FF SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0x13AD PUSH2 0x13A6 PUSH2 0x164E JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1BB6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x13BC DUP5 DUP5 DUP5 PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x13D0 PUSH2 0x13C7 PUSH2 0x164E JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1D25 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13E1 DUP3 PUSH2 0x1ED6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x14AA PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x151C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1513 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1525 DUP2 PUSH2 0x1983 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1582 JUMPI POP PUSH2 0x1581 DUP3 PUSH2 0x1FE9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1595 DUP4 PUSH2 0x20CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1608 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FF SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1663 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2108 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1682 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x22CD JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x16A6 SWAP2 SWAP1 PUSH2 0x3B75 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x16D6 SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16EE DUP5 PUSH2 0x20CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1730 JUMPI PUSH2 0x172F DUP2 DUP5 DUP7 PUSH2 0x22F1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17C1 JUMPI PUSH2 0x1772 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1844 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1904 PUSH2 0x164E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1922 PUSH2 0x1052 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1981 JUMPI PUSH2 0x1945 PUSH2 0x164E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1978 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ABB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB2 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AC9 DUP4 DUP4 PUSH1 0x0 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B3C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B33 SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BB0 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C27 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1E SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D18 SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1ECF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D84 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C9C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1DC0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DBD SWAP2 SWAP1 PUSH2 0x3CFD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1E44 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DF0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DF5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1E3C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E33 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1ECD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC4 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1EE1 DUP3 PUSH2 0x1589 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1F02 SWAP1 PUSH2 0x3100 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F2E SWAP1 PUSH2 0x3100 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F7B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F50 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F7B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F5E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1F8C PUSH2 0x23B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1FA1 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1FD6 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FBE SWAP3 SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1FE4 JUMP JUMPDEST PUSH2 0x1FDF DUP5 PUSH2 0x23CC JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x20B4 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x20C4 JUMPI POP PUSH2 0x20C3 DUP3 PUSH2 0x2435 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2141 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2275 JUMPI PUSH1 0x0 PUSH2 0x2151 DUP5 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x21BC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x21CF JUMPI POP PUSH2 0x21CD DUP2 DUP5 PUSH2 0x13E8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2211 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2208 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2273 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x22D7 DUP4 DUP4 PUSH2 0x249F JUMP JUMPDEST PUSH2 0x22EC PUSH2 0x22E2 PUSH2 0x164E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x1D25 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x22FC DUP4 DUP4 DUP4 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x23B0 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2371 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2368 SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23A7 SWAP3 SWAP2 SWAP1 PUSH2 0x35A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x23D7 DUP3 PUSH2 0x1589 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x23E2 PUSH2 0x23B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2402 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x242D JUMP JUMPDEST DUP1 PUSH2 0x240C DUP5 PUSH2 0x2659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x241D SWAP3 SWAP2 SWAP1 PUSH2 0x3D66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2511 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2508 SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x251F DUP4 DUP4 PUSH1 0x0 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2593 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x258A SWAP2 SWAP1 PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2650 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2611 JUMPI POP PUSH2 0x2610 DUP5 DUP5 PUSH2 0x13E8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x264F JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2637 DUP4 PUSH2 0x1611 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2668 DUP5 PUSH2 0x2727 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2687 JUMPI PUSH2 0x2686 PUSH2 0x2B30 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x26B9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x271C JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2710 JUMPI PUSH2 0x270F PUSH2 0x3D8A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x26C7 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x2785 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x277B JUMPI PUSH2 0x277A PUSH2 0x3D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x27C2 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x27B8 JUMPI PUSH2 0x27B7 PUSH2 0x3D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x27F1 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x27E7 JUMPI PUSH2 0x27E6 PUSH2 0x3D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x281A JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2810 JUMPI PUSH2 0x280F PUSH2 0x3D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x283F JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x2835 JUMPI PUSH2 0x2834 PUSH2 0x3D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2862 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x2858 JUMPI PUSH2 0x2857 PUSH2 0x3D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2871 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28C3 DUP2 PUSH2 0x288E JUMP JUMPDEST DUP2 EQ PUSH2 0x28CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28E0 DUP2 PUSH2 0x28BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28FC JUMPI PUSH2 0x28FB PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x290A DUP5 DUP3 DUP6 ADD PUSH2 0x28D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2928 DUP2 PUSH2 0x2913 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2943 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x291F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2983 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2968 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29AB DUP3 PUSH2 0x2949 JUMP JUMPDEST PUSH2 0x29B5 DUP2 DUP6 PUSH2 0x2954 JUMP JUMPDEST SWAP4 POP PUSH2 0x29C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2965 JUMP JUMPDEST PUSH2 0x29CE DUP2 PUSH2 0x298F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29F3 DUP2 DUP5 PUSH2 0x29A0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A0E DUP2 PUSH2 0x29FB JUMP JUMPDEST DUP2 EQ PUSH2 0x2A19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A2B DUP2 PUSH2 0x2A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A47 JUMPI PUSH2 0x2A46 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A55 DUP5 DUP3 DUP6 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A89 DUP3 PUSH2 0x2A5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A99 DUP2 PUSH2 0x2A7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AB4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AC3 DUP2 PUSH2 0x2A7E JUMP JUMPDEST DUP2 EQ PUSH2 0x2ACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AE0 DUP2 PUSH2 0x2ABA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AFD JUMPI PUSH2 0x2AFC PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B0B DUP6 DUP3 DUP7 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B1C DUP6 DUP3 DUP7 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2B68 DUP3 PUSH2 0x298F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B87 JUMPI PUSH2 0x2B86 PUSH2 0x2B30 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B9A PUSH2 0x287A JUMP JUMPDEST SWAP1 POP PUSH2 0x2BA6 DUP3 DUP3 PUSH2 0x2B5F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BC6 JUMPI PUSH2 0x2BC5 PUSH2 0x2B30 JUMP JUMPDEST JUMPDEST PUSH2 0x2BCF DUP3 PUSH2 0x298F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BFE PUSH2 0x2BF9 DUP5 PUSH2 0x2BAB JUMP JUMPDEST PUSH2 0x2B90 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C1A JUMPI PUSH2 0x2C19 PUSH2 0x2B2B JUMP JUMPDEST JUMPDEST PUSH2 0x2C25 DUP5 DUP3 DUP6 PUSH2 0x2BDC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C42 JUMPI PUSH2 0x2C41 PUSH2 0x2B26 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C52 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2C77 JUMPI PUSH2 0x2C76 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C85 DUP9 DUP3 DUP10 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2C96 DUP9 DUP3 DUP10 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2CA7 DUP9 DUP3 DUP10 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2CB8 DUP9 DUP3 DUP10 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD9 JUMPI PUSH2 0x2CD8 PUSH2 0x2889 JUMP JUMPDEST JUMPDEST PUSH2 0x2CE5 DUP9 DUP3 DUP10 ADD PUSH2 0x2C2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x2CFB DUP2 PUSH2 0x29FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D16 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D35 JUMPI PUSH2 0x2D34 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D43 DUP7 DUP3 DUP8 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2D54 DUP7 DUP3 DUP8 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2D65 DUP7 DUP3 DUP8 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D86 JUMPI PUSH2 0x2D85 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D94 DUP6 DUP3 DUP7 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DA5 DUP6 DUP3 DUP7 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DC5 JUMPI PUSH2 0x2DC4 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DD3 DUP5 DUP3 DUP6 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E01 PUSH2 0x2DFC PUSH2 0x2DF7 DUP5 PUSH2 0x2A5E JUMP JUMPDEST PUSH2 0x2DDC JUMP JUMPDEST PUSH2 0x2A5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E13 DUP3 PUSH2 0x2DE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E25 DUP3 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E35 DUP2 PUSH2 0x2E1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E50 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2E6B PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x2E78 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x2E85 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x2E92 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x2E9F PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x2EAC PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x2EB9 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x291F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2ECE DUP2 PUSH2 0x2913 JUMP JUMPDEST DUP2 EQ PUSH2 0x2ED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EEB DUP2 PUSH2 0x2EC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F08 JUMPI PUSH2 0x2F07 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F16 DUP6 DUP3 DUP7 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F27 DUP6 DUP3 DUP7 ADD PUSH2 0x2EDC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2F4C JUMPI PUSH2 0x2F4B PUSH2 0x2B30 JUMP JUMPDEST JUMPDEST PUSH2 0x2F55 DUP3 PUSH2 0x298F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F75 PUSH2 0x2F70 DUP5 PUSH2 0x2F31 JUMP JUMPDEST PUSH2 0x2B90 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2F91 JUMPI PUSH2 0x2F90 PUSH2 0x2B2B JUMP JUMPDEST JUMPDEST PUSH2 0x2F9C DUP5 DUP3 DUP6 PUSH2 0x2BDC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2FB9 JUMPI PUSH2 0x2FB8 PUSH2 0x2B26 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2FC9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2F62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2FEC JUMPI PUSH2 0x2FEB PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FFA DUP8 DUP3 DUP9 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x300B DUP8 DUP3 DUP9 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x301C DUP8 DUP3 DUP9 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x303D JUMPI PUSH2 0x303C PUSH2 0x2889 JUMP JUMPDEST JUMPDEST PUSH2 0x3049 DUP8 DUP3 DUP9 ADD PUSH2 0x2FA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x306C JUMPI PUSH2 0x306B PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x307A DUP6 DUP3 DUP7 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x308B DUP6 DUP3 DUP7 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A0 DUP3 PUSH2 0x2E08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30B0 DUP2 PUSH2 0x3095 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3118 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x312B JUMPI PUSH2 0x312A PUSH2 0x30D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696B653120646F6974206574726520696E666572696575722061205374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72696B6532000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x318D PUSH1 0x25 DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x3198 DUP3 PUSH2 0x3131 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31BC DUP2 PUSH2 0x3180 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C2765787069726174696F6E20646F697420657472652064616E73206C652066 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7574757200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x321F PUSH1 0x24 DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x322A DUP3 PUSH2 0x31C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x324E DUP2 PUSH2 0x3212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C6520636F6C6C61746572616C20646F6974206574726520706F736974696600 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328B PUSH1 0x1F DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x3296 DUP3 PUSH2 0x3255 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32BA DUP2 PUSH2 0x327E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x32D6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x32E3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x32F0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2CF2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3307 DUP2 PUSH2 0x2EC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3323 JUMPI PUSH2 0x3322 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3331 DUP5 DUP3 DUP6 ADD PUSH2 0x32F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E736665727420646520636F6C6C61746572616C206563686F75650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3370 PUSH1 0x1E DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x337B DUP3 PUSH2 0x333A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x339F DUP2 PUSH2 0x3363 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33E0 DUP3 PUSH2 0x29FB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3412 JUMPI PUSH2 0x3411 PUSH2 0x33A6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3432 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x343F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x344C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x3459 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2CF2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3477 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x3484 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x3491 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A90 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A4 DUP3 PUSH2 0x29FB JUMP JUMPDEST SWAP2 POP PUSH2 0x34AF DUP4 PUSH2 0x29FB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x34C7 JUMPI PUSH2 0x34C6 PUSH2 0x33A6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C276F7074696F6E20612064656A612065746520657865726365650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3503 PUSH1 0x1B DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x350E DUP3 PUSH2 0x34CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3532 DUP2 PUSH2 0x34F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C276F7074696F6E206E27612070617320656E636F7265206578706972650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x356F PUSH1 0x1E DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x357A DUP3 PUSH2 0x3539 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x359E DUP2 PUSH2 0x3562 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35BA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x35C7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2CF2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657274206465207061796F6666206563686F7565000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3604 PUSH1 0x1A DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x360F DUP3 PUSH2 0x35CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3633 DUP2 PUSH2 0x35F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E736665727420646520636F6C6C61746572616C2072657374616E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6563686F75650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3696 PUSH1 0x26 DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x36A1 DUP3 PUSH2 0x363A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36C5 DUP2 PUSH2 0x3689 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x36E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2CF2 JUMP JUMPDEST PUSH2 0x36EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2CF2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3714 DUP2 PUSH2 0x36F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x371F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3731 DUP2 PUSH2 0x370B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x374A DUP2 PUSH2 0x3737 JUMP JUMPDEST DUP2 EQ PUSH2 0x3755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3767 DUP2 PUSH2 0x3741 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x377C DUP2 PUSH2 0x2A05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x379E JUMPI PUSH2 0x379D PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37AC DUP9 DUP3 DUP10 ADD PUSH2 0x3722 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x37BD DUP9 DUP3 DUP10 ADD PUSH2 0x3758 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x37CE DUP9 DUP3 DUP10 ADD PUSH2 0x376D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x37DF DUP9 DUP3 DUP10 ADD PUSH2 0x376D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x37F0 DUP9 DUP3 DUP10 ADD PUSH2 0x3722 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x507269782042544320696E76616C696465000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3833 PUSH1 0x11 DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x383E DUP3 PUSH2 0x37FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3862 DUP2 PUSH2 0x3826 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C276F7074696F6E206120657870697265000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x389F PUSH1 0x11 DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x38AA DUP3 PUSH2 0x3869 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38CE DUP2 PUSH2 0x3892 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C276F7074696F6E20612064656A612065746520616368657465650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390B PUSH1 0x1B DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x3916 DUP3 PUSH2 0x38D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x393A DUP2 PUSH2 0x38FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x566F7573206E6520706F7576657A20706173206163686574657220766F747265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2070726F707265206F7074696F6E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399D PUSH1 0x2E DUP4 PUSH2 0x2954 JUMP JUMPDEST SWAP2 POP PUSH2 0x39A8 DUP3 PUSH2 0x3941 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39CC DUP2 PUSH2 0x3990 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3A35 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x39F8 JUMP JUMPDEST PUSH2 0x3A3F DUP7 DUP4 PUSH2 0x39F8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A72 PUSH2 0x3A6D PUSH2 0x3A68 DUP5 PUSH2 0x29FB JUMP JUMPDEST PUSH2 0x2DDC JUMP JUMPDEST PUSH2 0x29FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A8C DUP4 PUSH2 0x3A57 JUMP JUMPDEST PUSH2 0x3AA0 PUSH2 0x3A98 DUP3 PUSH2 0x3A79 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3A05 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3AB5 PUSH2 0x3AA8 JUMP JUMPDEST PUSH2 0x3AC0 DUP2 DUP5 DUP5 PUSH2 0x3A83 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3AE4 JUMPI PUSH2 0x3AD9 PUSH1 0x0 DUP3 PUSH2 0x3AAD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3AC6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3B29 JUMPI PUSH2 0x3AFA DUP2 PUSH2 0x39D3 JUMP JUMPDEST PUSH2 0x3B03 DUP5 PUSH2 0x39E8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3B12 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3B26 PUSH2 0x3B1E DUP6 PUSH2 0x39E8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3AC5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B4C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3B2E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B65 DUP4 DUP4 PUSH2 0x3B3B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B7E DUP3 PUSH2 0x2949 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3B97 JUMPI PUSH2 0x3B96 PUSH2 0x2B30 JUMP JUMPDEST JUMPDEST PUSH2 0x3BA1 DUP3 SLOAD PUSH2 0x3100 JUMP JUMPDEST PUSH2 0x3BAC DUP3 DUP3 DUP6 PUSH2 0x3AE8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3BDF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3BCD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3BD7 DUP6 DUP3 PUSH2 0x3B59 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3C3F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3BED DUP7 PUSH2 0x39D3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3C15 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3BF0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3C32 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3C2E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3B3B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C6E DUP3 PUSH2 0x3C47 JUMP JUMPDEST PUSH2 0x3C78 DUP2 DUP6 PUSH2 0x3C52 JUMP JUMPDEST SWAP4 POP PUSH2 0x3C88 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2965 JUMP JUMPDEST PUSH2 0x3C91 DUP2 PUSH2 0x298F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3CB1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x3CBE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x3CCB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2CF2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3CDD DUP2 DUP5 PUSH2 0x3C63 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3CF7 DUP2 PUSH2 0x28BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D13 JUMPI PUSH2 0x3D12 PUSH2 0x2884 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D21 DUP5 DUP3 DUP6 ADD PUSH2 0x3CE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D40 DUP3 PUSH2 0x2949 JUMP JUMPDEST PUSH2 0x3D4A DUP2 DUP6 PUSH2 0x3D2A JUMP JUMPDEST SWAP4 POP PUSH2 0x3D5A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2965 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D72 DUP3 DUP6 PUSH2 0x3D35 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D7E DUP3 DUP5 PUSH2 0x3D35 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xDB CALLDATACOPY 0x21 LT 0xBD 0x4B PUSH5 0x44DDE837DE DUP6 0xE5 0xA7 PUSH19 0x650ED2EFA4DF7AA16070C4979498DA64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"480:7126:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7435:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2364:89:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2534:1347:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4142:578:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6197:653:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4784:1201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4786:132:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6996:209:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1919:208:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1399:38:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:93:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4011:636:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1203:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;3717:144:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4984:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7276:153:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3927::8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1319:24:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7435:169:22;7538:4;7561:36;7585:11;7561:23;:36::i;:::-;7554:43;;7435:169;;;:::o;2364:89:8:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;2534:1347:22:-;2735:7;2777:12;2762;:27;2754:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2858:15;2849:6;:24;2841:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2951:1;2932:16;:20;2924:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3075:10;;;;;;;;;;;:23;;;3099:10;3119:4;3126:16;3075:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3067:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;3244:15;3262:12;;:14;;;;;;;;;:::i;:::-;;;;;3244:32;;3351:265;;;;;;;;3390:12;3351:265;;;;3430:12;3351:265;;;;3464:6;3351:265;;;;3496:16;3351:265;;;;3534:10;3351:265;;;;;;3573:1;3351:265;;;;;;3600:5;3351:265;;;;;3328:11;:20;3340:7;3328:20;;;;;;;;;;;:288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3671:30;3681:10;3693:7;3671:9;:30::i;:::-;3711:32;3724:7;3733:9;3711:12;:32::i;:::-;3785:7;3767:74;3794:10;3806:12;3820;3834:6;3767:74;;;;;;;;;:::i;:::-;;;;;;;;3867:7;3860:14;;;2534:1347;;;;;;;:::o;4142:578:8:-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;6197:653:22:-;6282:7;6301:21;6325:11;:20;6337:7;6325:20;;;;;;;;;;;6301:44;;6384:2;:15;;;6368:12;:31;6364:480;;6486:1;6479:8;;;;;6364:480;6524:2;:15;;;6508:12;:31;6504:340;;6669:2;:15;;;6651:2;:15;;;:33;;;;:::i;:::-;6644:40;;;;;6504:340;6818:2;:15;;;6803:12;:30;;;;:::i;:::-;6796:37;;;6197:653;;;;;:::o;4784:1201::-;4848:21;4872:11;:20;4884:7;4872:20;;;;;;;;;;;4848:44;;4911:2;:12;;;;;;;;;;;;4910:13;4902:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4992:2;:9;;;4973:15;:28;;4965:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5103:4;5088:2;:12;;;:19;;;;;;;;;;;;;;;;;;5168:16;5187:20;:18;:20::i;:::-;5168:39;;5256:14;5273:34;5289:7;5298:8;5273:15;:34::i;:::-;5256:51;;5377:13;5413:1;5393:22;;:2;:8;;;;;;;;;;;;:22;;;:45;;5429:2;:9;;;;;;;;;;;;5393:45;;;5418:2;:8;;;;;;;;;;;;5393:45;5377:61;;5517:1;5508:6;:10;5504:114;;;5542:10;;;;;;;;;;;:19;;;5562:5;5569:6;5542:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5534:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;5504:114;5691:27;5737:6;5721:2;:13;;;:22;;;;:::i;:::-;5691:52;;5779:1;5757:19;:23;5753:156;;;5804:10;;;;;;;;;;;:19;;;5824:2;:9;;;;;;;;;;;;5835:19;5804:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5796:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;5753:156;5952:7;5932:46;5961:6;5969:8;5932:46;;;;;;;:::i;:::-;;;;;;;;4838:1147;;;;;4784:1201;:::o;4786:132:8:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2184:118::-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;6996:209:22:-;7047:7;7069:12;7091:9;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7066:52;;;;;;7144:1;7136:5;:9;7128:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;7192:5;7177:21;;;6996:209;:::o;1919:208:8:-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1399:38:22:-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2517:93:8:-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;4011:636:22:-;4070:21;4094:11;:20;4106:7;4094:20;;;;;;;;;;;4070:44;;4144:15;4132:2;:9;;;:27;4124:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4219:1;4199:22;;:2;:8;;;;;;;;;;;;:22;;;4191:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4291:10;4271:30;;:16;4279:7;4271;:16::i;:::-;:30;;;4263:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;4419:10;4408:2;:8;;;:21;;;;;;;;;;;;;;;;;;4497:13;4513:16;4521:7;4513;:16::i;:::-;4497:32;;4539:37;4549:5;4556:10;4568:7;4539:9;:37::i;:::-;4620:7;4600:40;4629:10;4600:40;;;;;;:::i;:::-;;;;;;;;4060:587;;4011:636;:::o;1203:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3717:144:8:-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;:::-;4984:233;;;;:::o;7276:153:22:-;7367:13;7399:23;7414:7;7399:14;:23::i;:::-;7392:30;;7276:153;;;:::o;3927::8:-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;1319:24:22:-;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;938:207:11:-;1040:4;761:10;754:18;;1063:35;;;:11;:35;;;;:75;;;;1102:36;1126:11;1102:23;:36::i;:::-;1063:75;1056:82;;938:207;;;:::o;16212:241:8:-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:14:-;709:7;735:10;728:17;;656:96;:::o;14492:120:8:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;10656:100::-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;:26::i;:::-;10656:100;;:::o;1923:167:11:-;2036:9;2014:10;:19;2025:7;2014:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2060:23;2075:7;2060:23;;;;;;:::i;:::-;;;;;;;;1923:167;;:::o;8861:795:8:-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;12061:460:8:-;12160:1;12146:16;;:2;:16;;;12142:87;;12215:1;12185:33;;;;;;;;;;;:::i;:::-;;;;;;;;12142:87;12238:21;12262:32;12270:2;12274:7;12291:1;12262:7;:32::i;:::-;12238:56;;12333:1;12308:27;;:13;:27;;;12304:211;;12381:7;12358:31;;;;;;;;;;;:::i;:::-;;;;;;;;12304:211;12427:4;12410:21;;:13;:21;;;12406:109;;12475:4;12481:7;12490:13;12454:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;12406:109;12132:389;12061:460;;;:::o;15665:312::-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;985:924:13:-;1182:1;1165:2;:14;;;:18;1161:742;;;1219:2;1203:36;;;1240:8;1250:4;1256:7;1265:4;1203:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:1;1560:6;:13;:18;1556:323;;1700:2;1664:39;;;;;;;;;;;:::i;:::-;;;;;;;;1556:323;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;1327:41;;;1317:51;;;:6;:51;;;;1313:182;;1473:2;1437:39;;;;;;;;;;;:::i;:::-;;;;;;;;1313:182;1271:238;1161:742;985:924;;;;;:::o;1211:593:11:-;1284:13;1309:22;1323:7;1309:13;:22::i;:::-;;1342:23;1368:10;:19;1379:7;1368:19;;;;;;;;;;;1342:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:18;1418:10;:8;:10::i;:::-;1397:31;;1523:1;1507:4;1501:18;:23;1497:70;;1547:9;1540:16;;;;;;1497:70;1692:1;1672:9;1666:23;:27;1662:95;;;1730:4;1736:9;1716:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1709:37;;;;;;1662:95;1774:23;1789:7;1774:14;:23::i;:::-;1767:30;;;;1211:593;;;;:::o;1560:300:8:-;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;5732:115::-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;10977:207::-;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;11133:12;:10;:12::i;:::-;11155:1;11159:2;11163:7;11172:4;11099:33;:78::i;:::-;10977:207;;;:::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;7292:1;7275:19;;:5;:19;;;7271:186;;7344:7;7321:31;;;;;;;;;;;:::i;:::-;;;;;;;;7271:186;7425:7;7434;7398:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7212:255;7105:368;;;:::o;3173:92::-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;763:146:17:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;9978:327:8:-;10059:1;10045:16;;:2;:16;;;10041:87;;10114:1;10084:33;;;;;;;;;;;:::i;:::-;;;;;;;;10041:87;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;;10232:1;10207:27;;:13;:27;;;10203:96;;10285:1;10257:31;;;;;;;;;;;:::i;:::-;;;;;;;;10203:96;10031:274;9978:327;;:::o;6401:272::-;6504:4;6558:1;6539:21;;:7;:21;;;;:127;;;;;6586:7;6577:16;;:5;:16;;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:52;:88;;;;6658:7;6633:32;;:21;6646:7;6633:12;:21::i;:::-;:32;;;6577:88;6539:127;6520:146;;6401:272;;;;;:::o;987:632:16:-;1043:13;1092:14;1129:1;1109:17;1120:5;1109:10;:17::i;:::-;:21;1092:38;;1144:20;1178:6;1167:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:41;;1199:11;1294:6;1290:2;1286:15;1278:6;1274:28;1267:35;;1329:247;1336:4;1329:247;;;1360:5;;;;;;;;1464:10;1459:2;1452:5;1448:14;1443:32;1438:3;1430:46;1520:2;1511:11;;;;;;:::i;:::-;;;;;1553:1;1544:5;:10;1329:247;1540:21;1329:247;1596:6;1589:13;;;;;987:632;;;:::o;25316:916:19:-;25369:7;25388:14;25405:1;25388:18;;25453:8;25444:5;:17;25440:103;;25490:8;25481:17;;;;;;:::i;:::-;;;;;25526:2;25516:12;;;;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;;;;:::i;:::-;;;;;25642:2;25632:12;;;;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;;;;:::i;:::-;;;;;25758:2;25748:12;;;;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;;;;:::i;:::-;;;;;25872:1;25862:11;;;;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;;;;:::i;:::-;;;;;25985:1;25975:11;;;;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;;;;:::i;:::-;;;;;26098:1;26088:11;;;;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;;;;26127:66;26219:6;26212:13;;;25316:916;;;:::o;7:75:28:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:117;5122:1;5119;5112:12;5136:180;5184:77;5181:1;5174:88;5281:4;5278:1;5271:15;5305:4;5302:1;5295:15;5322:281;5405:27;5427:4;5405:27;:::i;:::-;5397:6;5393:40;5535:6;5523:10;5520:22;5499:18;5487:10;5484:34;5481:62;5478:88;;;5546:18;;:::i;:::-;5478:88;5586:10;5582:2;5575:22;5365:238;5322:281;;:::o;5609:129::-;5643:6;5670:20;;:::i;:::-;5660:30;;5699:33;5727:4;5719:6;5699:33;:::i;:::-;5609:129;;;:::o;5744:308::-;5806:4;5896:18;5888:6;5885:30;5882:56;;;5918:18;;:::i;:::-;5882:56;5956:29;5978:6;5956:29;:::i;:::-;5948:37;;6040:4;6034;6030:15;6022:23;;5744:308;;;:::o;6058:146::-;6155:6;6150:3;6145;6132:30;6196:1;6187:6;6182:3;6178:16;6171:27;6058:146;;;:::o;6210:425::-;6288:5;6313:66;6329:49;6371:6;6329:49;:::i;:::-;6313:66;:::i;:::-;6304:75;;6402:6;6395:5;6388:21;6440:4;6433:5;6429:16;6478:3;6469:6;6464:3;6460:16;6457:25;6454:112;;;6485:79;;:::i;:::-;6454:112;6575:54;6622:6;6617:3;6612;6575:54;:::i;:::-;6294:341;6210:425;;;;;:::o;6655:340::-;6711:5;6760:3;6753:4;6745:6;6741:17;6737:27;6727:122;;6768:79;;:::i;:::-;6727:122;6885:6;6872:20;6910:79;6985:3;6977:6;6970:4;6962:6;6958:17;6910:79;:::i;:::-;6901:88;;6717:278;6655:340;;;;:::o;7001:1091::-;7106:6;7114;7122;7130;7138;7187:3;7175:9;7166:7;7162:23;7158:33;7155:120;;;7194:79;;:::i;:::-;7155:120;7314:1;7339:53;7384:7;7375:6;7364:9;7360:22;7339:53;:::i;:::-;7329:63;;7285:117;7441:2;7467:53;7512:7;7503:6;7492:9;7488:22;7467:53;:::i;:::-;7457:63;;7412:118;7569:2;7595:53;7640:7;7631:6;7620:9;7616:22;7595:53;:::i;:::-;7585:63;;7540:118;7697:2;7723:53;7768:7;7759:6;7748:9;7744:22;7723:53;:::i;:::-;7713:63;;7668:118;7853:3;7842:9;7838:19;7825:33;7885:18;7877:6;7874:30;7871:117;;;7907:79;;:::i;:::-;7871:117;8012:63;8067:7;8058:6;8047:9;8043:22;8012:63;:::i;:::-;8002:73;;7796:289;7001:1091;;;;;;;;:::o;8098:118::-;8185:24;8203:5;8185:24;:::i;:::-;8180:3;8173:37;8098:118;;:::o;8222:222::-;8315:4;8353:2;8342:9;8338:18;8330:26;;8366:71;8434:1;8423:9;8419:17;8410:6;8366:71;:::i;:::-;8222:222;;;;:::o;8450:619::-;8527:6;8535;8543;8592:2;8580:9;8571:7;8567:23;8563:32;8560:119;;;8598:79;;:::i;:::-;8560:119;8718:1;8743:53;8788:7;8779:6;8768:9;8764:22;8743:53;:::i;:::-;8733:63;;8689:117;8845:2;8871:53;8916:7;8907:6;8896:9;8892:22;8871:53;:::i;:::-;8861:63;;8816:118;8973:2;8999:53;9044:7;9035:6;9024:9;9020:22;8999:53;:::i;:::-;8989:63;;8944:118;8450:619;;;;;:::o;9075:474::-;9143:6;9151;9200:2;9188:9;9179:7;9175:23;9171:32;9168:119;;;9206:79;;:::i;:::-;9168:119;9326:1;9351:53;9396:7;9387:6;9376:9;9372:22;9351:53;:::i;:::-;9341:63;;9297:117;9453:2;9479:53;9524:7;9515:6;9504:9;9500:22;9479:53;:::i;:::-;9469:63;;9424:118;9075:474;;;;;:::o;9555:329::-;9614:6;9663:2;9651:9;9642:7;9638:23;9634:32;9631:119;;;9669:79;;:::i;:::-;9631:119;9789:1;9814:53;9859:7;9850:6;9839:9;9835:22;9814:53;:::i;:::-;9804:63;;9760:117;9555:329;;;;:::o;9890:60::-;9918:3;9939:5;9932:12;;9890:60;;;:::o;9956:142::-;10006:9;10039:53;10057:34;10066:24;10084:5;10066:24;:::i;:::-;10057:34;:::i;:::-;10039:53;:::i;:::-;10026:66;;9956:142;;;:::o;10104:126::-;10154:9;10187:37;10218:5;10187:37;:::i;:::-;10174:50;;10104:126;;;:::o;10236:156::-;10316:9;10349:37;10380:5;10349:37;:::i;:::-;10336:50;;10236:156;;;:::o;10398:191::-;10515:67;10576:5;10515:67;:::i;:::-;10510:3;10503:80;10398:191;;:::o;10595:282::-;10718:4;10756:2;10745:9;10741:18;10733:26;;10769:101;10867:1;10856:9;10852:17;10843:6;10769:101;:::i;:::-;10595:282;;;;:::o;10883:874::-;11138:4;11176:3;11165:9;11161:19;11153:27;;11190:71;11258:1;11247:9;11243:17;11234:6;11190:71;:::i;:::-;11271:72;11339:2;11328:9;11324:18;11315:6;11271:72;:::i;:::-;11353;11421:2;11410:9;11406:18;11397:6;11353:72;:::i;:::-;11435;11503:2;11492:9;11488:18;11479:6;11435:72;:::i;:::-;11517:73;11585:3;11574:9;11570:19;11561:6;11517:73;:::i;:::-;11600;11668:3;11657:9;11653:19;11644:6;11600:73;:::i;:::-;11683:67;11745:3;11734:9;11730:19;11721:6;11683:67;:::i;:::-;10883:874;;;;;;;;;;:::o;11763:116::-;11833:21;11848:5;11833:21;:::i;:::-;11826:5;11823:32;11813:60;;11869:1;11866;11859:12;11813:60;11763:116;:::o;11885:133::-;11928:5;11966:6;11953:20;11944:29;;11982:30;12006:5;11982:30;:::i;:::-;11885:133;;;;:::o;12024:468::-;12089:6;12097;12146:2;12134:9;12125:7;12121:23;12117:32;12114:119;;;12152:79;;:::i;:::-;12114:119;12272:1;12297:53;12342:7;12333:6;12322:9;12318:22;12297:53;:::i;:::-;12287:63;;12243:117;12399:2;12425:50;12467:7;12458:6;12447:9;12443:22;12425:50;:::i;:::-;12415:60;;12370:115;12024:468;;;;;:::o;12498:307::-;12559:4;12649:18;12641:6;12638:30;12635:56;;;12671:18;;:::i;:::-;12635:56;12709:29;12731:6;12709:29;:::i;:::-;12701:37;;12793:4;12787;12783:15;12775:23;;12498:307;;;:::o;12811:423::-;12888:5;12913:65;12929:48;12970:6;12929:48;:::i;:::-;12913:65;:::i;:::-;12904:74;;13001:6;12994:5;12987:21;13039:4;13032:5;13028:16;13077:3;13068:6;13063:3;13059:16;13056:25;13053:112;;;13084:79;;:::i;:::-;13053:112;13174:54;13221:6;13216:3;13211;13174:54;:::i;:::-;12894:340;12811:423;;;;;:::o;13253:338::-;13308:5;13357:3;13350:4;13342:6;13338:17;13334:27;13324:122;;13365:79;;:::i;:::-;13324:122;13482:6;13469:20;13507:78;13581:3;13573:6;13566:4;13558:6;13554:17;13507:78;:::i;:::-;13498:87;;13314:277;13253:338;;;;:::o;13597:943::-;13692:6;13700;13708;13716;13765:3;13753:9;13744:7;13740:23;13736:33;13733:120;;;13772:79;;:::i;:::-;13733:120;13892:1;13917:53;13962:7;13953:6;13942:9;13938:22;13917:53;:::i;:::-;13907:63;;13863:117;14019:2;14045:53;14090:7;14081:6;14070:9;14066:22;14045:53;:::i;:::-;14035:63;;13990:118;14147:2;14173:53;14218:7;14209:6;14198:9;14194:22;14173:53;:::i;:::-;14163:63;;14118:118;14303:2;14292:9;14288:18;14275:32;14334:18;14326:6;14323:30;14320:117;;;14356:79;;:::i;:::-;14320:117;14461:62;14515:7;14506:6;14495:9;14491:22;14461:62;:::i;:::-;14451:72;;14246:287;13597:943;;;;;;;:::o;14546:474::-;14614:6;14622;14671:2;14659:9;14650:7;14646:23;14642:32;14639:119;;;14677:79;;:::i;:::-;14639:119;14797:1;14822:53;14867:7;14858:6;14847:9;14843:22;14822:53;:::i;:::-;14812:63;;14768:117;14924:2;14950:53;14995:7;14986:6;14975:9;14971:22;14950:53;:::i;:::-;14940:63;;14895:118;14546:474;;;;;:::o;15026:140::-;15090:9;15123:37;15154:5;15123:37;:::i;:::-;15110:50;;15026:140;;;:::o;15172:159::-;15273:51;15318:5;15273:51;:::i;:::-;15268:3;15261:64;15172:159;;:::o;15337:250::-;15444:4;15482:2;15471:9;15467:18;15459:26;;15495:85;15577:1;15566:9;15562:17;15553:6;15495:85;:::i;:::-;15337:250;;;;:::o;15593:180::-;15641:77;15638:1;15631:88;15738:4;15735:1;15728:15;15762:4;15759:1;15752:15;15779:320;15823:6;15860:1;15854:4;15850:12;15840:22;;15907:1;15901:4;15897:12;15928:18;15918:81;;15984:4;15976:6;15972:17;15962:27;;15918:81;16046:2;16038:6;16035:14;16015:18;16012:38;16009:84;;16065:18;;:::i;:::-;16009:84;15830:269;15779:320;;;:::o;16105:224::-;16245:34;16241:1;16233:6;16229:14;16222:58;16314:7;16309:2;16301:6;16297:15;16290:32;16105:224;:::o;16335:366::-;16477:3;16498:67;16562:2;16557:3;16498:67;:::i;:::-;16491:74;;16574:93;16663:3;16574:93;:::i;:::-;16692:2;16687:3;16683:12;16676:19;;16335:366;;;:::o;16707:419::-;16873:4;16911:2;16900:9;16896:18;16888:26;;16960:9;16954:4;16950:20;16946:1;16935:9;16931:17;16924:47;16988:131;17114:4;16988:131;:::i;:::-;16980:139;;16707:419;;;:::o;17132:223::-;17272:34;17268:1;17260:6;17256:14;17249:58;17341:6;17336:2;17328:6;17324:15;17317:31;17132:223;:::o;17361:366::-;17503:3;17524:67;17588:2;17583:3;17524:67;:::i;:::-;17517:74;;17600:93;17689:3;17600:93;:::i;:::-;17718:2;17713:3;17709:12;17702:19;;17361:366;;;:::o;17733:419::-;17899:4;17937:2;17926:9;17922:18;17914:26;;17986:9;17980:4;17976:20;17972:1;17961:9;17957:17;17950:47;18014:131;18140:4;18014:131;:::i;:::-;18006:139;;17733:419;;;:::o;18158:181::-;18298:33;18294:1;18286:6;18282:14;18275:57;18158:181;:::o;18345:366::-;18487:3;18508:67;18572:2;18567:3;18508:67;:::i;:::-;18501:74;;18584:93;18673:3;18584:93;:::i;:::-;18702:2;18697:3;18693:12;18686:19;;18345:366;;;:::o;18717:419::-;18883:4;18921:2;18910:9;18906:18;18898:26;;18970:9;18964:4;18960:20;18956:1;18945:9;18941:17;18934:47;18998:131;19124:4;18998:131;:::i;:::-;18990:139;;18717:419;;;:::o;19142:442::-;19291:4;19329:2;19318:9;19314:18;19306:26;;19342:71;19410:1;19399:9;19395:17;19386:6;19342:71;:::i;:::-;19423:72;19491:2;19480:9;19476:18;19467:6;19423:72;:::i;:::-;19505;19573:2;19562:9;19558:18;19549:6;19505:72;:::i;:::-;19142:442;;;;;;:::o;19590:137::-;19644:5;19675:6;19669:13;19660:22;;19691:30;19715:5;19691:30;:::i;:::-;19590:137;;;;:::o;19733:345::-;19800:6;19849:2;19837:9;19828:7;19824:23;19820:32;19817:119;;;19855:79;;:::i;:::-;19817:119;19975:1;20000:61;20053:7;20044:6;20033:9;20029:22;20000:61;:::i;:::-;19990:71;;19946:125;19733:345;;;;:::o;20084:180::-;20224:32;20220:1;20212:6;20208:14;20201:56;20084:180;:::o;20270:366::-;20412:3;20433:67;20497:2;20492:3;20433:67;:::i;:::-;20426:74;;20509:93;20598:3;20509:93;:::i;:::-;20627:2;20622:3;20618:12;20611:19;;20270:366;;;:::o;20642:419::-;20808:4;20846:2;20835:9;20831:18;20823:26;;20895:9;20889:4;20885:20;20881:1;20870:9;20866:17;20859:47;20923:131;21049:4;20923:131;:::i;:::-;20915:139;;20642:419;;;:::o;21067:180::-;21115:77;21112:1;21105:88;21212:4;21209:1;21202:15;21236:4;21233:1;21226:15;21253:233;21292:3;21315:24;21333:5;21315:24;:::i;:::-;21306:33;;21361:66;21354:5;21351:77;21348:103;;21431:18;;:::i;:::-;21348:103;21478:1;21471:5;21467:13;21460:20;;21253:233;;;:::o;21492:553::-;21669:4;21707:3;21696:9;21692:19;21684:27;;21721:71;21789:1;21778:9;21774:17;21765:6;21721:71;:::i;:::-;21802:72;21870:2;21859:9;21855:18;21846:6;21802:72;:::i;:::-;21884;21952:2;21941:9;21937:18;21928:6;21884:72;:::i;:::-;21966;22034:2;22023:9;22019:18;22010:6;21966:72;:::i;:::-;21492:553;;;;;;;:::o;22051:442::-;22200:4;22238:2;22227:9;22223:18;22215:26;;22251:71;22319:1;22308:9;22304:17;22295:6;22251:71;:::i;:::-;22332:72;22400:2;22389:9;22385:18;22376:6;22332:72;:::i;:::-;22414;22482:2;22471:9;22467:18;22458:6;22414:72;:::i;:::-;22051:442;;;;;;:::o;22499:194::-;22539:4;22559:20;22577:1;22559:20;:::i;:::-;22554:25;;22593:20;22611:1;22593:20;:::i;:::-;22588:25;;22637:1;22634;22630:9;22622:17;;22661:1;22655:4;22652:11;22649:37;;;22666:18;;:::i;:::-;22649:37;22499:194;;;;:::o;22699:177::-;22839:29;22835:1;22827:6;22823:14;22816:53;22699:177;:::o;22882:366::-;23024:3;23045:67;23109:2;23104:3;23045:67;:::i;:::-;23038:74;;23121:93;23210:3;23121:93;:::i;:::-;23239:2;23234:3;23230:12;23223:19;;22882:366;;;:::o;23254:419::-;23420:4;23458:2;23447:9;23443:18;23435:26;;23507:9;23501:4;23497:20;23493:1;23482:9;23478:17;23471:47;23535:131;23661:4;23535:131;:::i;:::-;23527:139;;23254:419;;;:::o;23679:180::-;23819:32;23815:1;23807:6;23803:14;23796:56;23679:180;:::o;23865:366::-;24007:3;24028:67;24092:2;24087:3;24028:67;:::i;:::-;24021:74;;24104:93;24193:3;24104:93;:::i;:::-;24222:2;24217:3;24213:12;24206:19;;23865:366;;;:::o;24237:419::-;24403:4;24441:2;24430:9;24426:18;24418:26;;24490:9;24484:4;24480:20;24476:1;24465:9;24461:17;24454:47;24518:131;24644:4;24518:131;:::i;:::-;24510:139;;24237:419;;;:::o;24662:332::-;24783:4;24821:2;24810:9;24806:18;24798:26;;24834:71;24902:1;24891:9;24887:17;24878:6;24834:71;:::i;:::-;24915:72;24983:2;24972:9;24968:18;24959:6;24915:72;:::i;:::-;24662:332;;;;;:::o;25000:176::-;25140:28;25136:1;25128:6;25124:14;25117:52;25000:176;:::o;25182:366::-;25324:3;25345:67;25409:2;25404:3;25345:67;:::i;:::-;25338:74;;25421:93;25510:3;25421:93;:::i;:::-;25539:2;25534:3;25530:12;25523:19;;25182:366;;;:::o;25554:419::-;25720:4;25758:2;25747:9;25743:18;25735:26;;25807:9;25801:4;25797:20;25793:1;25782:9;25778:17;25771:47;25835:131;25961:4;25835:131;:::i;:::-;25827:139;;25554:419;;;:::o;25979:225::-;26119:34;26115:1;26107:6;26103:14;26096:58;26188:8;26183:2;26175:6;26171:15;26164:33;25979:225;:::o;26210:366::-;26352:3;26373:67;26437:2;26432:3;26373:67;:::i;:::-;26366:74;;26449:93;26538:3;26449:93;:::i;:::-;26567:2;26562:3;26558:12;26551:19;;26210:366;;;:::o;26582:419::-;26748:4;26786:2;26775:9;26771:18;26763:26;;26835:9;26829:4;26825:20;26821:1;26810:9;26806:17;26799:47;26863:131;26989:4;26863:131;:::i;:::-;26855:139;;26582:419;;;:::o;27007:332::-;27128:4;27166:2;27155:9;27151:18;27143:26;;27179:71;27247:1;27236:9;27232:17;27223:6;27179:71;:::i;:::-;27260:72;27328:2;27317:9;27313:18;27304:6;27260:72;:::i;:::-;27007:332;;;;;:::o;27345:105::-;27381:7;27421:22;27414:5;27410:34;27399:45;;27345:105;;;:::o;27456:120::-;27528:23;27545:5;27528:23;:::i;:::-;27521:5;27518:34;27508:62;;27566:1;27563;27556:12;27508:62;27456:120;:::o;27582:141::-;27638:5;27669:6;27663:13;27654:22;;27685:32;27711:5;27685:32;:::i;:::-;27582:141;;;;:::o;27729:76::-;27765:7;27794:5;27783:16;;27729:76;;;:::o;27811:120::-;27883:23;27900:5;27883:23;:::i;:::-;27876:5;27873:34;27863:62;;27921:1;27918;27911:12;27863:62;27811:120;:::o;27937:141::-;27993:5;28024:6;28018:13;28009:22;;28040:32;28066:5;28040:32;:::i;:::-;27937:141;;;;:::o;28084:143::-;28141:5;28172:6;28166:13;28157:22;;28188:33;28215:5;28188:33;:::i;:::-;28084:143;;;;:::o;28233:971::-;28336:6;28344;28352;28360;28368;28417:3;28405:9;28396:7;28392:23;28388:33;28385:120;;;28424:79;;:::i;:::-;28385:120;28544:1;28569:63;28624:7;28615:6;28604:9;28600:22;28569:63;:::i;:::-;28559:73;;28515:127;28681:2;28707:63;28762:7;28753:6;28742:9;28738:22;28707:63;:::i;:::-;28697:73;;28652:128;28819:2;28845:64;28901:7;28892:6;28881:9;28877:22;28845:64;:::i;:::-;28835:74;;28790:129;28958:2;28984:64;29040:7;29031:6;29020:9;29016:22;28984:64;:::i;:::-;28974:74;;28929:129;29097:3;29124:63;29179:7;29170:6;29159:9;29155:22;29124:63;:::i;:::-;29114:73;;29068:129;28233:971;;;;;;;;:::o;29210:167::-;29350:19;29346:1;29338:6;29334:14;29327:43;29210:167;:::o;29383:366::-;29525:3;29546:67;29610:2;29605:3;29546:67;:::i;:::-;29539:74;;29622:93;29711:3;29622:93;:::i;:::-;29740:2;29735:3;29731:12;29724:19;;29383:366;;;:::o;29755:419::-;29921:4;29959:2;29948:9;29944:18;29936:26;;30008:9;30002:4;29998:20;29994:1;29983:9;29979:17;29972:47;30036:131;30162:4;30036:131;:::i;:::-;30028:139;;29755:419;;;:::o;30180:167::-;30320:19;30316:1;30308:6;30304:14;30297:43;30180:167;:::o;30353:366::-;30495:3;30516:67;30580:2;30575:3;30516:67;:::i;:::-;30509:74;;30592:93;30681:3;30592:93;:::i;:::-;30710:2;30705:3;30701:12;30694:19;;30353:366;;;:::o;30725:419::-;30891:4;30929:2;30918:9;30914:18;30906:26;;30978:9;30972:4;30968:20;30964:1;30953:9;30949:17;30942:47;31006:131;31132:4;31006:131;:::i;:::-;30998:139;;30725:419;;;:::o;31150:177::-;31290:29;31286:1;31278:6;31274:14;31267:53;31150:177;:::o;31333:366::-;31475:3;31496:67;31560:2;31555:3;31496:67;:::i;:::-;31489:74;;31572:93;31661:3;31572:93;:::i;:::-;31690:2;31685:3;31681:12;31674:19;;31333:366;;;:::o;31705:419::-;31871:4;31909:2;31898:9;31894:18;31886:26;;31958:9;31952:4;31948:20;31944:1;31933:9;31929:17;31922:47;31986:131;32112:4;31986:131;:::i;:::-;31978:139;;31705:419;;;:::o;32130:233::-;32270:34;32266:1;32258:6;32254:14;32247:58;32339:16;32334:2;32326:6;32322:15;32315:41;32130:233;:::o;32369:366::-;32511:3;32532:67;32596:2;32591:3;32532:67;:::i;:::-;32525:74;;32608:93;32697:3;32608:93;:::i;:::-;32726:2;32721:3;32717:12;32710:19;;32369:366;;;:::o;32741:419::-;32907:4;32945:2;32934:9;32930:18;32922:26;;32994:9;32988:4;32984:20;32980:1;32969:9;32965:17;32958:47;33022:131;33148:4;33022:131;:::i;:::-;33014:139;;32741:419;;;:::o;33166:141::-;33215:4;33238:3;33230:11;;33261:3;33258:1;33251:14;33295:4;33292:1;33282:18;33274:26;;33166:141;;;:::o;33313:93::-;33350:6;33397:2;33392;33385:5;33381:14;33377:23;33367:33;;33313:93;;;:::o;33412:107::-;33456:8;33506:5;33500:4;33496:16;33475:37;;33412:107;;;;:::o;33525:393::-;33594:6;33644:1;33632:10;33628:18;33667:97;33697:66;33686:9;33667:97;:::i;:::-;33785:39;33815:8;33804:9;33785:39;:::i;:::-;33773:51;;33857:4;33853:9;33846:5;33842:21;33833:30;;33906:4;33896:8;33892:19;33885:5;33882:30;33872:40;;33601:317;;33525:393;;;;;:::o;33924:142::-;33974:9;34007:53;34025:34;34034:24;34052:5;34034:24;:::i;:::-;34025:34;:::i;:::-;34007:53;:::i;:::-;33994:66;;33924:142;;;:::o;34072:75::-;34115:3;34136:5;34129:12;;34072:75;;;:::o;34153:269::-;34263:39;34294:7;34263:39;:::i;:::-;34324:91;34373:41;34397:16;34373:41;:::i;:::-;34365:6;34358:4;34352:11;34324:91;:::i;:::-;34318:4;34311:105;34229:193;34153:269;;;:::o;34428:73::-;34473:3;34428:73;:::o;34507:189::-;34584:32;;:::i;:::-;34625:65;34683:6;34675;34669:4;34625:65;:::i;:::-;34560:136;34507:189;;:::o;34702:186::-;34762:120;34779:3;34772:5;34769:14;34762:120;;;34833:39;34870:1;34863:5;34833:39;:::i;:::-;34806:1;34799:5;34795:13;34786:22;;34762:120;;;34702:186;;:::o;34894:543::-;34995:2;34990:3;34987:11;34984:446;;;35029:38;35061:5;35029:38;:::i;:::-;35113:29;35131:10;35113:29;:::i;:::-;35103:8;35099:44;35296:2;35284:10;35281:18;35278:49;;;35317:8;35302:23;;35278:49;35340:80;35396:22;35414:3;35396:22;:::i;:::-;35386:8;35382:37;35369:11;35340:80;:::i;:::-;34999:431;;34984:446;34894:543;;;:::o;35443:117::-;35497:8;35547:5;35541:4;35537:16;35516:37;;35443:117;;;;:::o;35566:169::-;35610:6;35643:51;35691:1;35687:6;35679:5;35676:1;35672:13;35643:51;:::i;:::-;35639:56;35724:4;35718;35714:15;35704:25;;35617:118;35566:169;;;;:::o;35740:295::-;35816:4;35962:29;35987:3;35981:4;35962:29;:::i;:::-;35954:37;;36024:3;36021:1;36017:11;36011:4;36008:21;36000:29;;35740:295;;;;:::o;36040:1395::-;36157:37;36190:3;36157:37;:::i;:::-;36259:18;36251:6;36248:30;36245:56;;;36281:18;;:::i;:::-;36245:56;36325:38;36357:4;36351:11;36325:38;:::i;:::-;36410:67;36470:6;36462;36456:4;36410:67;:::i;:::-;36504:1;36528:4;36515:17;;36560:2;36552:6;36549:14;36577:1;36572:618;;;;37234:1;37251:6;37248:77;;;37300:9;37295:3;37291:19;37285:26;37276:35;;37248:77;37351:67;37411:6;37404:5;37351:67;:::i;:::-;37345:4;37338:81;37207:222;36542:887;;36572:618;36624:4;36620:9;36612:6;36608:22;36658:37;36690:4;36658:37;:::i;:::-;36717:1;36731:208;36745:7;36742:1;36739:14;36731:208;;;36824:9;36819:3;36815:19;36809:26;36801:6;36794:42;36875:1;36867:6;36863:14;36853:24;;36922:2;36911:9;36907:18;36894:31;;36768:4;36765:1;36761:12;36756:17;;36731:208;;;36967:6;36958:7;36955:19;36952:179;;;37025:9;37020:3;37016:19;37010:26;37068:48;37110:4;37102:6;37098:17;37087:9;37068:48;:::i;:::-;37060:6;37053:64;36975:156;36952:179;37177:1;37173;37165:6;37161:14;37157:22;37151:4;37144:36;36579:611;;;36542:887;;36132:1303;;;36040:1395;;:::o;37441:98::-;37492:6;37526:5;37520:12;37510:22;;37441:98;;;:::o;37545:168::-;37628:11;37662:6;37657:3;37650:19;37702:4;37697:3;37693:14;37678:29;;37545:168;;;;:::o;37719:373::-;37805:3;37833:38;37865:5;37833:38;:::i;:::-;37887:70;37950:6;37945:3;37887:70;:::i;:::-;37880:77;;37966:65;38024:6;38019:3;38012:4;38005:5;38001:16;37966:65;:::i;:::-;38056:29;38078:6;38056:29;:::i;:::-;38051:3;38047:39;38040:46;;37809:283;37719:373;;;;:::o;38098:640::-;38293:4;38331:3;38320:9;38316:19;38308:27;;38345:71;38413:1;38402:9;38398:17;38389:6;38345:71;:::i;:::-;38426:72;38494:2;38483:9;38479:18;38470:6;38426:72;:::i;:::-;38508;38576:2;38565:9;38561:18;38552:6;38508:72;:::i;:::-;38627:9;38621:4;38617:20;38612:2;38601:9;38597:18;38590:48;38655:76;38726:4;38717:6;38655:76;:::i;:::-;38647:84;;38098:640;;;;;;;:::o;38744:141::-;38800:5;38831:6;38825:13;38816:22;;38847:32;38873:5;38847:32;:::i;:::-;38744:141;;;;:::o;38891:349::-;38960:6;39009:2;38997:9;38988:7;38984:23;38980:32;38977:119;;;39015:79;;:::i;:::-;38977:119;39135:1;39160:63;39215:7;39206:6;39195:9;39191:22;39160:63;:::i;:::-;39150:73;;39106:127;38891:349;;;;:::o;39246:148::-;39348:11;39385:3;39370:18;;39246:148;;;;:::o;39400:390::-;39506:3;39534:39;39567:5;39534:39;:::i;:::-;39589:89;39671:6;39666:3;39589:89;:::i;:::-;39582:96;;39687:65;39745:6;39740:3;39733:4;39726:5;39722:16;39687:65;:::i;:::-;39777:6;39772:3;39768:16;39761:23;;39510:280;39400:390;;;;:::o;39796:435::-;39976:3;39998:95;40089:3;40080:6;39998:95;:::i;:::-;39991:102;;40110:95;40201:3;40192:6;40110:95;:::i;:::-;40103:102;;40222:3;40215:10;;39796:435;;;;;:::o;40237:180::-;40285:77;40282:1;40275:88;40382:4;40379:1;40372:15;40406:4;40403:1;40396:15"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","buyCallSpread(uint256)":"9841ac44","calculatePayoff(uint256,uint256)":"34201152","callSpreads(uint256)":"9abe0d58","createCallSpread(uint256,uint256,uint256,uint256,string)":"143e602c","exerciseCallSpread(uint256)":"37b371d9","getApproved(uint256)":"081812fc","getCurrentBTCPrice()":"696c86cd","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","priceFeed()":"741bef1a","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","stablecoin()":"e9cbd822","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stablecoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strikePrice1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strikePrice2\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"CallSpreadCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payoff\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"btcPrice\",\"type\":\"uint256\"}],\"name\":\"CallSpreadExercised\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"CallSpreadPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyCallSpread\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentPrice\",\"type\":\"uint256\"}],\"name\":\"calculatePayoff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"callSpreads\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"strikePrice1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strikePrice2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exercised\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strikePrice1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"strikePrice2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"createCallSpread\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exerciseCallSpread\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBTCPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contrat pour g\\u00e9rer des options financi\\u00e8res call spread repr\\u00e9sent\\u00e9es par des NFTs\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"buyCallSpread(uint256)\":{\"details\":\"Acheter un call spread existant\",\"params\":{\"tokenId\":\"ID du token du call spread \\u00e0 acheter\"}},\"calculatePayoff(uint256,uint256)\":{\"details\":\"Calculer le payoff pour un call spread\",\"params\":{\"currentPrice\":\"Prix actuel de BTC/USD\",\"tokenId\":\"ID du token du call spread\"},\"returns\":{\"_0\":\"Le montant du payoff\"}},\"constructor\":{\"details\":\"Constructeur initialisant le contrat\",\"params\":{\"_priceFeed\":\"Adresse de l'Oracle Chainlink pour BTC/USD\",\"_stablecoin\":\"Adresse du contrat du stablecoin\"}},\"createCallSpread(uint256,uint256,uint256,uint256,string)\":{\"details\":\"Cr\\u00e9er un nouveau call spread\",\"params\":{\"_tokenURI\":\"URI des m\\u00e9tadonn\\u00e9es pour le NFT\",\"collateralAmount\":\"Montant de collat\\u00e9ral \\u00e0 d\\u00e9poser\",\"expiry\":\"Timestamp d'expiration\",\"strikePrice1\":\"Prix d'exercice inf\\u00e9rieur\",\"strikePrice2\":\"Prix d'exercice sup\\u00e9rieur\"}},\"exerciseCallSpread(uint256)\":{\"details\":\"Exercer un call spread \\u00e0 l'expiration\",\"params\":{\"tokenId\":\"ID du token du call spread \\u00e0 exercer\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getCurrentBTCPrice()\":{\"details\":\"Obtenir le prix actuel de BTC/USD depuis l'oracle Chainlink\",\"returns\":{\"_0\":\"Prix BTC/USD multipli\\u00e9 par 10^8\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"NFTCallSpread\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTCallSpread.sol\":\"NFTCallSpread\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/NFTCallSpread.sol\":{\"keccak256\":\"0x0f149c3c68bc88a7acd9108ef73fefba812b58e4b1179d45de504d0735522dcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc107f76fd709331ec6c6d9ed97f13da35fd9bc34342f769d354a725ef6a666\",\"dweb:/ipfs/QmRbjzU9q8v33g4nk7JCjtVysHCcHwnTV1HaYUy6utRp7m\"]},\"contracts/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xb676cf35c3b69893d3ebe72bd77de1f7ea9f902bf77233afc1ee7942f301d509\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59276af9d56de67ccb87d5115ba51799ddea2c5068a8aa7b6a1f1217b59b8b3a\",\"dweb:/ipfs/QmUsRfR4eQhUhttHLETDihxQdMWmQKrEgi4eYdBh3hDTzE\"]}},\"version\":1}"}},"contracts/NFTCallSpreadKeeper.sol":{"NFTCallSpreadKeeper":{"abi":[{"inputs":[{"internalType":"address","name":"_nftCallSpread","type":"address"},{"internalType":"uint256","name":"_checkGasLimit","type":"uint256"},{"internalType":"uint256","name":"_maxBatchSize","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"checkGasLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastProcessedId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxBatchSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nftCallSpread","outputs":[{"internalType":"contract NFTCallSpread","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxBatchSize","type":"uint256"}],"name":"setMaxBatchSize","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_7603":{"entryPoint":null,"id":7603,"parameterSlots":3,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":226,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_uint256_fromMemory":{"entryPoint":308,"id":null,"parameterSlots":2,"returnSlots":3},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":180,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":148,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":249,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":143,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":200,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":259,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1871:28","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:28","statements":[{"nodeType":"YulAssignment","src":"57:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:28"},"nodeType":"YulFunctionCall","src":"67:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:28"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:28","type":""}],"src":"7:75:28"},{"body":{"nodeType":"YulBlock","src":"177:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:28"},"nodeType":"YulFunctionCall","src":"187:12:28"},"nodeType":"YulExpressionStatement","src":"187:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:28"},{"body":{"nodeType":"YulBlock","src":"300:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:28"},"nodeType":"YulFunctionCall","src":"310:12:28"},"nodeType":"YulExpressionStatement","src":"310:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:28"},{"body":{"nodeType":"YulBlock","src":"379:81:28","statements":[{"nodeType":"YulAssignment","src":"389:65:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:28"},"nodeType":"YulFunctionCall","src":"400:54:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:28"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:28","type":""}],"src":"334:126:28"},{"body":{"nodeType":"YulBlock","src":"511:51:28","statements":[{"nodeType":"YulAssignment","src":"521:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:28"},"nodeType":"YulFunctionCall","src":"532:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:28"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:28","type":""}],"src":"466:96:28"},{"body":{"nodeType":"YulBlock","src":"611:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:28"},"nodeType":"YulFunctionCall","src":"670:12:28"},"nodeType":"YulExpressionStatement","src":"670:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:28"},"nodeType":"YulFunctionCall","src":"641:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:28"},"nodeType":"YulFunctionCall","src":"631:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:28"},"nodeType":"YulFunctionCall","src":"624:43:28"},"nodeType":"YulIf","src":"621:63:28"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:28","type":""}],"src":"568:122:28"},{"body":{"nodeType":"YulBlock","src":"759:80:28","statements":[{"nodeType":"YulAssignment","src":"769:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:28"},"nodeType":"YulFunctionCall","src":"778:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:28"},"nodeType":"YulFunctionCall","src":"800:33:28"},"nodeType":"YulExpressionStatement","src":"800:33:28"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:28","type":""}],"src":"696:143:28"},{"body":{"nodeType":"YulBlock","src":"890:32:28","statements":[{"nodeType":"YulAssignment","src":"900:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"911:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"900:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"872:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"882:7:28","type":""}],"src":"845:77:28"},{"body":{"nodeType":"YulBlock","src":"971:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"1028:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1040:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1030:6:28"},"nodeType":"YulFunctionCall","src":"1030:12:28"},"nodeType":"YulExpressionStatement","src":"1030:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"994:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1019:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1001:17:28"},"nodeType":"YulFunctionCall","src":"1001:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"991:2:28"},"nodeType":"YulFunctionCall","src":"991:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"984:6:28"},"nodeType":"YulFunctionCall","src":"984:43:28"},"nodeType":"YulIf","src":"981:63:28"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"964:5:28","type":""}],"src":"928:122:28"},{"body":{"nodeType":"YulBlock","src":"1119:80:28","statements":[{"nodeType":"YulAssignment","src":"1129:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1144:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1138:5:28"},"nodeType":"YulFunctionCall","src":"1138:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1129:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1187:5:28"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1160:26:28"},"nodeType":"YulFunctionCall","src":"1160:33:28"},"nodeType":"YulExpressionStatement","src":"1160:33:28"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"1105:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1113:5:28","type":""}],"src":"1056:143:28"},{"body":{"nodeType":"YulBlock","src":"1316:552:28","statements":[{"body":{"nodeType":"YulBlock","src":"1362:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1364:77:28"},"nodeType":"YulFunctionCall","src":"1364:79:28"},"nodeType":"YulExpressionStatement","src":"1364:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1337:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1346:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1333:3:28"},"nodeType":"YulFunctionCall","src":"1333:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1358:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1329:3:28"},"nodeType":"YulFunctionCall","src":"1329:32:28"},"nodeType":"YulIf","src":"1326:119:28"},{"nodeType":"YulBlock","src":"1455:128:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1470:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1484:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1474:6:28","type":""}]},{"nodeType":"YulAssignment","src":"1499:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1545:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1556:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1541:3:28"},"nodeType":"YulFunctionCall","src":"1541:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1565:7:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1509:31:28"},"nodeType":"YulFunctionCall","src":"1509:64:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1499:6:28"}]}]},{"nodeType":"YulBlock","src":"1593:129:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1608:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1622:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1612:6:28","type":""}]},{"nodeType":"YulAssignment","src":"1638:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1684:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1695:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1680:3:28"},"nodeType":"YulFunctionCall","src":"1680:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1704:7:28"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1648:31:28"},"nodeType":"YulFunctionCall","src":"1648:64:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1638:6:28"}]}]},{"nodeType":"YulBlock","src":"1732:129:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1747:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1761:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1751:6:28","type":""}]},{"nodeType":"YulAssignment","src":"1777:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1823:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1834:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1819:3:28"},"nodeType":"YulFunctionCall","src":"1819:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1843:7:28"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1787:31:28"},"nodeType":"YulFunctionCall","src":"1787:64:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1777:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1270:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1281:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1293:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1301:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1309:6:28","type":""}],"src":"1205:663:28"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b5060405162000f0038038062000f00833981810160405281019062000037919062000134565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081608081815250508060028190555050505062000190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000c18262000094565b9050919050565b620000d381620000b4565b8114620000df57600080fd5b50565b600081519050620000f381620000c8565b92915050565b6000819050919050565b6200010e81620000f9565b81146200011a57600080fd5b50565b6000815190506200012e8162000103565b92915050565b60008060006060848603121562000150576200014f6200008f565b5b60006200016086828701620000e2565b935050602062000173868287016200011d565b925050604062000186868287016200011d565b9150509250925092565b608051610d54620001ac60003960006104eb0152610d546000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636e04ff0d1161005b5780636e04ff0d146100d8578063bf55dfd414610109578063e343dc2d14610127578063ef94720d146101455761007d565b80632913daa0146100825780632b26a6bf146100a05780634585e33b146100bc575b600080fd5b61008a610163565b60405161009791906105f3565b60405180910390f35b6100ba60048036038101906100b5919061064e565b610169565b005b6100d660048036038101906100d191906106e0565b610173565b005b6100f260048036038101906100ed91906106e0565b610255565b6040516101009291906107d8565b60405180910390f35b6101116104bf565b60405161011e9190610887565b60405180910390f35b61012f6104e3565b60405161013c91906105f3565b60405180910390f35b61014d6104e9565b60405161015a91906105f3565b60405180910390f35b60025481565b8060028190555050565b600080838381019061018591906109e0565b9150915060005b82518110156102475760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337b371d98483815181106101e4576101e3610a3c565b5b60200260200101516040518263ffffffff1660e01b815260040161020891906105f3565b600060405180830381600087803b15801561022257600080fd5b505af1925050508015610233575060015b50808061023f90610a9a565b91505061018c565b508060018190555050505050565b600060606000600154905060008060025467ffffffffffffffff81111561027f5761027e6108a2565b5b6040519080825280602002602001820160405280156102ad5781602001602082028036833780820191505090505b5090505b6002548210156103d35760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161031491906105f3565b602060405180830381865afa92505050801561034e57506040513d601f19601f8201168201806040525081019061034b9190610b20565b60015b156103c05760008060008060008060006103678b61050d565b9650965096509650965096509650801580156103835750428511155b156103b7578a898b8151811061039c5761039b610a3c565b5b60200260200101818152505089806103b390610a9a565b9a50505b50505050505050505b82806103cb90610a9a565b9350506102b1565b60008211156104b05760008267ffffffffffffffff8111156103f8576103f76108a2565b5b6040519080825280602002602001820160405280156104265781602001602082028036833780820191505090505b50905060005b838110156104815782818151811061044757610446610a3c565b5b602002602001015182828151811061046257610461610a3c565b5b602002602001018181525050808061047990610a9a565b91505061042c565b508084604051602001610495929190610c0b565b604051602081830303815290604052945060019550506104b5565b600094505b5050509250929050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060008060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639abe0d58896040518263ffffffff1660e01b815260040161057291906105f3565b60e060405180830381865afa15801561058f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b39190610c7c565b809750819850829950839a50849b50859c50869d5050505050505050919395979092949650565b6000819050919050565b6105ed816105da565b82525050565b600060208201905061060860008301846105e4565b92915050565b6000604051905090565b600080fd5b600080fd5b61062b816105da565b811461063657600080fd5b50565b60008135905061064881610622565b92915050565b60006020828403121561066457610663610618565b5b600061067284828501610639565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126106a05761069f61067b565b5b8235905067ffffffffffffffff8111156106bd576106bc610680565b5b6020830191508360018202830111156106d9576106d8610685565b5b9250929050565b600080602083850312156106f7576106f6610618565b5b600083013567ffffffffffffffff8111156107155761071461061d565b5b6107218582860161068a565b92509250509250929050565b60008115159050919050565b6107428161072d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610782578082015181840152602081019050610767565b60008484015250505050565b6000601f19601f8301169050919050565b60006107aa82610748565b6107b48185610753565b93506107c4818560208601610764565b6107cd8161078e565b840191505092915050565b60006040820190506107ed6000830185610739565b81810360208301526107ff818461079f565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061084d61084861084384610808565b610828565b610808565b9050919050565b600061085f82610832565b9050919050565b600061087182610854565b9050919050565b61088181610866565b82525050565b600060208201905061089c6000830184610878565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108da8261078e565b810181811067ffffffffffffffff821117156108f9576108f86108a2565b5b80604052505050565b600061090c61060e565b905061091882826108d1565b919050565b600067ffffffffffffffff821115610938576109376108a2565b5b602082029050602081019050919050565b600061095c6109578461091d565b610902565b9050808382526020820190506020840283018581111561097f5761097e610685565b5b835b818110156109a857806109948882610639565b845260208401935050602081019050610981565b5050509392505050565b600082601f8301126109c7576109c661067b565b5b81356109d7848260208601610949565b91505092915050565b600080604083850312156109f7576109f6610618565b5b600083013567ffffffffffffffff811115610a1557610a1461061d565b5b610a21858286016109b2565b9250506020610a3285828601610639565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa5826105da565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ad757610ad6610a6b565b5b600182019050919050565b6000610aed82610808565b9050919050565b610afd81610ae2565b8114610b0857600080fd5b50565b600081519050610b1a81610af4565b92915050565b600060208284031215610b3657610b35610618565b5b6000610b4484828501610b0b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610b82816105da565b82525050565b6000610b948383610b79565b60208301905092915050565b6000602082019050919050565b6000610bb882610b4d565b610bc28185610b58565b9350610bcd83610b69565b8060005b83811015610bfe578151610be58882610b88565b9750610bf083610ba0565b925050600181019050610bd1565b5085935050505092915050565b60006040820190508181036000830152610c258185610bad565b9050610c3460208301846105e4565b9392505050565b600081519050610c4a81610622565b92915050565b610c598161072d565b8114610c6457600080fd5b50565b600081519050610c7681610c50565b92915050565b600080600080600080600060e0888a031215610c9b57610c9a610618565b5b6000610ca98a828b01610c3b565b9750506020610cba8a828b01610c3b565b9650506040610ccb8a828b01610c3b565b9550506060610cdc8a828b01610c3b565b9450506080610ced8a828b01610b0b565b93505060a0610cfe8a828b01610b0b565b92505060c0610d0f8a828b01610c67565b9150509295989194975092955056fea2646970667358221220fb01f17d8a1f0753cd8608b2d1e0c0465eac5500aa7b2ddc3b3bbb73a12be8bd64736f6c63430008140033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xF00 CODESIZE SUB DUP1 PUSH3 0xF00 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x134 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x190 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC1 DUP3 PUSH3 0x94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xD3 DUP2 PUSH3 0xB4 JUMP JUMPDEST DUP2 EQ PUSH3 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xF3 DUP2 PUSH3 0xC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x10E DUP2 PUSH3 0xF9 JUMP JUMPDEST DUP2 EQ PUSH3 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x12E DUP2 PUSH3 0x103 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x150 JUMPI PUSH3 0x14F PUSH3 0x8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x160 DUP7 DUP3 DUP8 ADD PUSH3 0xE2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x173 DUP7 DUP3 DUP8 ADD PUSH3 0x11D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x186 DUP7 DUP3 DUP8 ADD PUSH3 0x11D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xD54 PUSH3 0x1AC PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x4EB ADD MSTORE PUSH2 0xD54 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E04FF0D GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xBF55DFD4 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xE343DC2D EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xEF94720D EQ PUSH2 0x145 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2913DAA0 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2B26A6BF EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x169 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x173 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x37B371D9 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E4 JUMPI PUSH2 0x1E3 PUSH2 0xA3C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x233 JUMPI POP PUSH1 0x1 JUMPDEST POP DUP1 DUP1 PUSH2 0x23F SWAP1 PUSH2 0xA9A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18C JUMP JUMPDEST POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F JUMPI PUSH2 0x27E PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x34E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x367 DUP12 PUSH2 0x50D JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x383 JUMPI POP TIMESTAMP DUP6 GT ISZERO JUMPDEST ISZERO PUSH2 0x3B7 JUMPI DUP11 DUP10 DUP12 DUP2 MLOAD DUP2 LT PUSH2 0x39C JUMPI PUSH2 0x39B PUSH2 0xA3C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP10 DUP1 PUSH2 0x3B3 SWAP1 PUSH2 0xA9A JUMP JUMPDEST SWAP11 POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMPDEST DUP3 DUP1 PUSH2 0x3CB SWAP1 PUSH2 0xA9A JUMP JUMPDEST SWAP4 POP POP PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F8 JUMPI PUSH2 0x3F7 PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x426 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x481 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x447 JUMPI PUSH2 0x446 PUSH2 0xA3C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0xA3C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x479 SWAP1 PUSH2 0xA9A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x42C JUMP JUMPDEST POP DUP1 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x495 SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP PUSH1 0x1 SWAP6 POP POP PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x0 SWAP5 POP JUMPDEST POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9ABE0D58 DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x572 SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0xC7C JUMP JUMPDEST DUP1 SWAP8 POP DUP2 SWAP9 POP DUP3 SWAP10 POP DUP4 SWAP11 POP DUP5 SWAP12 POP DUP6 SWAP13 POP DUP7 SWAP14 POP POP POP POP POP POP POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5ED DUP2 PUSH2 0x5DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x608 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62B DUP2 PUSH2 0x5DA JUMP JUMPDEST DUP2 EQ PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x648 DUP2 PUSH2 0x622 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x664 JUMPI PUSH2 0x663 PUSH2 0x618 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x672 DUP5 DUP3 DUP6 ADD PUSH2 0x639 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x6A0 JUMPI PUSH2 0x69F PUSH2 0x67B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6BD JUMPI PUSH2 0x6BC PUSH2 0x680 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x6D9 JUMPI PUSH2 0x6D8 PUSH2 0x685 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6F7 JUMPI PUSH2 0x6F6 PUSH2 0x618 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x715 JUMPI PUSH2 0x714 PUSH2 0x61D JUMP JUMPDEST JUMPDEST PUSH2 0x721 DUP6 DUP3 DUP7 ADD PUSH2 0x68A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x742 DUP2 PUSH2 0x72D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x782 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x767 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AA DUP3 PUSH2 0x748 JUMP JUMPDEST PUSH2 0x7B4 DUP2 DUP6 PUSH2 0x753 JUMP JUMPDEST SWAP4 POP PUSH2 0x7C4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x764 JUMP JUMPDEST PUSH2 0x7CD DUP2 PUSH2 0x78E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7ED PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x739 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x7FF DUP2 DUP5 PUSH2 0x79F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84D PUSH2 0x848 PUSH2 0x843 DUP5 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH2 0x808 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85F DUP3 PUSH2 0x832 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x871 DUP3 PUSH2 0x854 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x881 DUP2 PUSH2 0x866 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x89C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x878 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8DA DUP3 PUSH2 0x78E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x8F9 JUMPI PUSH2 0x8F8 PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90C PUSH2 0x60E JUMP JUMPDEST SWAP1 POP PUSH2 0x918 DUP3 DUP3 PUSH2 0x8D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x938 JUMPI PUSH2 0x937 PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95C PUSH2 0x957 DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x97F JUMPI PUSH2 0x97E PUSH2 0x685 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9A8 JUMPI DUP1 PUSH2 0x994 DUP9 DUP3 PUSH2 0x639 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x981 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9C7 JUMPI PUSH2 0x9C6 PUSH2 0x67B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9D7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x949 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F7 JUMPI PUSH2 0x9F6 PUSH2 0x618 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA15 JUMPI PUSH2 0xA14 PUSH2 0x61D JUMP JUMPDEST JUMPDEST PUSH2 0xA21 DUP6 DUP3 DUP7 ADD PUSH2 0x9B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA32 DUP6 DUP3 DUP7 ADD PUSH2 0x639 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAA5 DUP3 PUSH2 0x5DA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xAD7 JUMPI PUSH2 0xAD6 PUSH2 0xA6B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAED DUP3 PUSH2 0x808 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFD DUP2 PUSH2 0xAE2 JUMP JUMPDEST DUP2 EQ PUSH2 0xB08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB1A DUP2 PUSH2 0xAF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB36 JUMPI PUSH2 0xB35 PUSH2 0x618 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB44 DUP5 DUP3 DUP6 ADD PUSH2 0xB0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB82 DUP2 PUSH2 0x5DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB94 DUP4 DUP4 PUSH2 0xB79 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB8 DUP3 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0xBC2 DUP2 DUP6 PUSH2 0xB58 JUMP JUMPDEST SWAP4 POP PUSH2 0xBCD DUP4 PUSH2 0xB69 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBFE JUMPI DUP2 MLOAD PUSH2 0xBE5 DUP9 DUP3 PUSH2 0xB88 JUMP JUMPDEST SWAP8 POP PUSH2 0xBF0 DUP4 PUSH2 0xBA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xBD1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC25 DUP2 DUP6 PUSH2 0xBAD JUMP JUMPDEST SWAP1 POP PUSH2 0xC34 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5E4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC4A DUP2 PUSH2 0x622 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC59 DUP2 PUSH2 0x72D JUMP JUMPDEST DUP2 EQ PUSH2 0xC64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC76 DUP2 PUSH2 0xC50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x618 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA9 DUP11 DUP3 DUP12 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xCBA DUP11 DUP3 DUP12 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xCCB DUP11 DUP3 DUP12 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xCDC DUP11 DUP3 DUP12 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xCED DUP11 DUP3 DUP12 ADD PUSH2 0xB0B JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0xCFE DUP11 DUP3 DUP12 ADD PUSH2 0xB0B JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0xD0F DUP11 DUP3 DUP12 ADD PUSH2 0xC67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB ADD CALL PUSH30 0x8A1F0753CD8608B2D1E0C0465EAC5500AA7B2DDC3B3BBB73A12BE8BD6473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"281:4857:23:-:0;;;605:223;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;728:14;698:13;;:45;;;;;;;;;;;;;;;;;;769:14;753:30;;;;;;808:13;793:12;:28;;;;605:223;;;281:4857;;88:117:28;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;281:4857:23:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@checkGasLimit_7575":{"entryPoint":1257,"id":7575,"parameterSlots":0,"returnSlots":0},"@checkUpkeep_7743":{"entryPoint":597,"id":7743,"parameterSlots":2,"returnSlots":2},"@getNFTCallSpreadDetails_7841":{"entryPoint":1293,"id":7841,"parameterSlots":1,"returnSlots":7},"@lastProcessedId_7577":{"entryPoint":1251,"id":7577,"parameterSlots":0,"returnSlots":0},"@maxBatchSize_7579":{"entryPoint":355,"id":7579,"parameterSlots":0,"returnSlots":0},"@nftCallSpread_7573":{"entryPoint":1215,"id":7573,"parameterSlots":0,"returnSlots":0},"@performUpkeep_7797":{"entryPoint":371,"id":7797,"parameterSlots":2,"returnSlots":0},"@setMaxBatchSize_7852":{"entryPoint":361,"id":7852,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2377,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":2827,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2482,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":1674,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":1593,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":3131,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":2848,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_uint256":{"entryPoint":2528,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":1760,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":1614,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_addresst_addresst_bool_fromMemory":{"entryPoint":3196,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":2952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":2989,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":1849,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":1951,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_NFTCallSpread_$7563_to_t_address_fromStack":{"entryPoint":2168,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":2937,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1508,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":3083,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2008,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_NFTCallSpread_$7563__to_t_address__fromStack_reversed":{"entryPoint":2183,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1523,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":2306,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1550,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2333,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2921,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2893,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1864,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2976,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":2904,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":1875,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2786,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1837,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2056,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1498,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_NFTCallSpread_$7563_to_t_address":{"entryPoint":2150,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":2132,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":2098,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1892,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":2257,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":2088,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":2714,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2667,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2620,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2210,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":1664,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1659,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":1669,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1565,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1560,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1934,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2804,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":3152,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1570,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13489:28","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:28","statements":[{"nodeType":"YulAssignment","src":"62:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:28","type":""}],"src":"7:77:28"},{"body":{"nodeType":"YulBlock","src":"155:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:28"},"nodeType":"YulFunctionCall","src":"177:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:28"},"nodeType":"YulFunctionCall","src":"165:37:28"},"nodeType":"YulExpressionStatement","src":"165:37:28"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:28","type":""}],"src":"90:118:28"},{"body":{"nodeType":"YulBlock","src":"312:124:28","statements":[{"nodeType":"YulAssignment","src":"322:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:28"},"nodeType":"YulFunctionCall","src":"330:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:28"},"nodeType":"YulFunctionCall","src":"411:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:28"},"nodeType":"YulFunctionCall","src":"358:71:28"},"nodeType":"YulExpressionStatement","src":"358:71:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:28","type":""}],"src":"214:222:28"},{"body":{"nodeType":"YulBlock","src":"482:35:28","statements":[{"nodeType":"YulAssignment","src":"492:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:28"},"nodeType":"YulFunctionCall","src":"502:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:28"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:28","type":""}],"src":"442:75:28"},{"body":{"nodeType":"YulBlock","src":"612:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:28"},"nodeType":"YulFunctionCall","src":"622:12:28"},"nodeType":"YulExpressionStatement","src":"622:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:28"},{"body":{"nodeType":"YulBlock","src":"735:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:28"},"nodeType":"YulFunctionCall","src":"745:12:28"},"nodeType":"YulExpressionStatement","src":"745:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:28"},{"body":{"nodeType":"YulBlock","src":"812:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"869:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"878:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"881:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"871:6:28"},"nodeType":"YulFunctionCall","src":"871:12:28"},"nodeType":"YulExpressionStatement","src":"871:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"835:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"860:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"842:17:28"},"nodeType":"YulFunctionCall","src":"842:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"832:2:28"},"nodeType":"YulFunctionCall","src":"832:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"825:6:28"},"nodeType":"YulFunctionCall","src":"825:43:28"},"nodeType":"YulIf","src":"822:63:28"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"805:5:28","type":""}],"src":"769:122:28"},{"body":{"nodeType":"YulBlock","src":"949:87:28","statements":[{"nodeType":"YulAssignment","src":"959:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"981:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"968:12:28"},"nodeType":"YulFunctionCall","src":"968:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1024:5:28"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"997:26:28"},"nodeType":"YulFunctionCall","src":"997:33:28"},"nodeType":"YulExpressionStatement","src":"997:33:28"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"927:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"935:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"943:5:28","type":""}],"src":"897:139:28"},{"body":{"nodeType":"YulBlock","src":"1108:263:28","statements":[{"body":{"nodeType":"YulBlock","src":"1154:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1156:77:28"},"nodeType":"YulFunctionCall","src":"1156:79:28"},"nodeType":"YulExpressionStatement","src":"1156:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1129:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1125:3:28"},"nodeType":"YulFunctionCall","src":"1125:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1150:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1121:3:28"},"nodeType":"YulFunctionCall","src":"1121:32:28"},"nodeType":"YulIf","src":"1118:119:28"},{"nodeType":"YulBlock","src":"1247:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1262:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1276:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1266:6:28","type":""}]},{"nodeType":"YulAssignment","src":"1291:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1326:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1337:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1322:3:28"},"nodeType":"YulFunctionCall","src":"1322:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1346:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1301:20:28"},"nodeType":"YulFunctionCall","src":"1301:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1291:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1078:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1089:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1101:6:28","type":""}],"src":"1042:329:28"},{"body":{"nodeType":"YulBlock","src":"1466:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1483:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1486:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1476:6:28"},"nodeType":"YulFunctionCall","src":"1476:12:28"},"nodeType":"YulExpressionStatement","src":"1476:12:28"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1377:117:28"},{"body":{"nodeType":"YulBlock","src":"1589:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1606:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1609:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1599:6:28"},"nodeType":"YulFunctionCall","src":"1599:12:28"},"nodeType":"YulExpressionStatement","src":"1599:12:28"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1500:117:28"},{"body":{"nodeType":"YulBlock","src":"1712:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1729:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1732:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1722:6:28"},"nodeType":"YulFunctionCall","src":"1722:12:28"},"nodeType":"YulExpressionStatement","src":"1722:12:28"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1623:117:28"},{"body":{"nodeType":"YulBlock","src":"1833:478:28","statements":[{"body":{"nodeType":"YulBlock","src":"1882:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1884:77:28"},"nodeType":"YulFunctionCall","src":"1884:79:28"},"nodeType":"YulExpressionStatement","src":"1884:79:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1861:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1869:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1857:3:28"},"nodeType":"YulFunctionCall","src":"1857:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"1876:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1853:3:28"},"nodeType":"YulFunctionCall","src":"1853:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1846:6:28"},"nodeType":"YulFunctionCall","src":"1846:35:28"},"nodeType":"YulIf","src":"1843:122:28"},{"nodeType":"YulAssignment","src":"1974:30:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1997:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1984:12:28"},"nodeType":"YulFunctionCall","src":"1984:20:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1974:6:28"}]},{"body":{"nodeType":"YulBlock","src":"2047:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2049:77:28"},"nodeType":"YulFunctionCall","src":"2049:79:28"},"nodeType":"YulExpressionStatement","src":"2049:79:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2019:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2027:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2016:2:28"},"nodeType":"YulFunctionCall","src":"2016:30:28"},"nodeType":"YulIf","src":"2013:117:28"},{"nodeType":"YulAssignment","src":"2139:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2155:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2163:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2151:3:28"},"nodeType":"YulFunctionCall","src":"2151:17:28"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2139:8:28"}]},{"body":{"nodeType":"YulBlock","src":"2222:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2224:77:28"},"nodeType":"YulFunctionCall","src":"2224:79:28"},"nodeType":"YulExpressionStatement","src":"2224:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2187:8:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2201:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2209:4:28","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2197:3:28"},"nodeType":"YulFunctionCall","src":"2197:17:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:28"},"nodeType":"YulFunctionCall","src":"2183:32:28"},{"name":"end","nodeType":"YulIdentifier","src":"2217:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2180:2:28"},"nodeType":"YulFunctionCall","src":"2180:41:28"},"nodeType":"YulIf","src":"2177:128:28"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1800:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"1808:3:28","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1816:8:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"1826:6:28","type":""}],"src":"1759:552:28"},{"body":{"nodeType":"YulBlock","src":"2402:442:28","statements":[{"body":{"nodeType":"YulBlock","src":"2448:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2450:77:28"},"nodeType":"YulFunctionCall","src":"2450:79:28"},"nodeType":"YulExpressionStatement","src":"2450:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2423:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2432:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2419:3:28"},"nodeType":"YulFunctionCall","src":"2419:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2444:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2415:3:28"},"nodeType":"YulFunctionCall","src":"2415:32:28"},"nodeType":"YulIf","src":"2412:119:28"},{"nodeType":"YulBlock","src":"2541:296:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2556:45:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2587:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2598:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2583:3:28"},"nodeType":"YulFunctionCall","src":"2583:17:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2570:12:28"},"nodeType":"YulFunctionCall","src":"2570:31:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2560:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2648:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2650:77:28"},"nodeType":"YulFunctionCall","src":"2650:79:28"},"nodeType":"YulExpressionStatement","src":"2650:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2620:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2628:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2617:2:28"},"nodeType":"YulFunctionCall","src":"2617:30:28"},"nodeType":"YulIf","src":"2614:117:28"},{"nodeType":"YulAssignment","src":"2745:82:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2799:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2810:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2795:3:28"},"nodeType":"YulFunctionCall","src":"2795:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2819:7:28"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"2763:31:28"},"nodeType":"YulFunctionCall","src":"2763:64:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2745:6:28"},{"name":"value1","nodeType":"YulIdentifier","src":"2753:6:28"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2364:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2375:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2387:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2395:6:28","type":""}],"src":"2317:527:28"},{"body":{"nodeType":"YulBlock","src":"2892:48:28","statements":[{"nodeType":"YulAssignment","src":"2902:32:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2927:5:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2920:6:28"},"nodeType":"YulFunctionCall","src":"2920:13:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2913:6:28"},"nodeType":"YulFunctionCall","src":"2913:21:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2902:7:28"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2874:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2884:7:28","type":""}],"src":"2850:90:28"},{"body":{"nodeType":"YulBlock","src":"3005:50:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3022:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3042:5:28"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3027:14:28"},"nodeType":"YulFunctionCall","src":"3027:21:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3015:6:28"},"nodeType":"YulFunctionCall","src":"3015:34:28"},"nodeType":"YulExpressionStatement","src":"3015:34:28"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2993:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3000:3:28","type":""}],"src":"2946:109:28"},{"body":{"nodeType":"YulBlock","src":"3119:40:28","statements":[{"nodeType":"YulAssignment","src":"3130:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3146:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3140:5:28"},"nodeType":"YulFunctionCall","src":"3140:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3130:6:28"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3102:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3112:6:28","type":""}],"src":"3061:98:28"},{"body":{"nodeType":"YulBlock","src":"3260:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3277:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"3282:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3270:6:28"},"nodeType":"YulFunctionCall","src":"3270:19:28"},"nodeType":"YulExpressionStatement","src":"3270:19:28"},{"nodeType":"YulAssignment","src":"3298:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3317:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"3322:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3313:3:28"},"nodeType":"YulFunctionCall","src":"3313:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3298:11:28"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3232:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"3237:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3248:11:28","type":""}],"src":"3165:168:28"},{"body":{"nodeType":"YulBlock","src":"3401:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3411:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3420:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3415:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3480:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3505:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"3510:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3501:3:28"},"nodeType":"YulFunctionCall","src":"3501:11:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3524:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"3529:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3520:3:28"},"nodeType":"YulFunctionCall","src":"3520:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3514:5:28"},"nodeType":"YulFunctionCall","src":"3514:18:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3494:6:28"},"nodeType":"YulFunctionCall","src":"3494:39:28"},"nodeType":"YulExpressionStatement","src":"3494:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3441:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"3444:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3438:2:28"},"nodeType":"YulFunctionCall","src":"3438:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3452:19:28","statements":[{"nodeType":"YulAssignment","src":"3454:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3463:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"3466:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3459:3:28"},"nodeType":"YulFunctionCall","src":"3459:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3454:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"3434:3:28","statements":[]},"src":"3430:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3563:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"3568:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3559:3:28"},"nodeType":"YulFunctionCall","src":"3559:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"3577:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3552:6:28"},"nodeType":"YulFunctionCall","src":"3552:27:28"},"nodeType":"YulExpressionStatement","src":"3552:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3383:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3388:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"3393:6:28","type":""}],"src":"3339:246:28"},{"body":{"nodeType":"YulBlock","src":"3639:54:28","statements":[{"nodeType":"YulAssignment","src":"3649:38:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3667:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3674:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3663:3:28"},"nodeType":"YulFunctionCall","src":"3663:14:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3683:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3679:3:28"},"nodeType":"YulFunctionCall","src":"3679:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3659:3:28"},"nodeType":"YulFunctionCall","src":"3659:28:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3649:6:28"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3622:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3632:6:28","type":""}],"src":"3591:102:28"},{"body":{"nodeType":"YulBlock","src":"3789:283:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3799:52:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3845:5:28"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3813:31:28"},"nodeType":"YulFunctionCall","src":"3813:38:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3803:6:28","type":""}]},{"nodeType":"YulAssignment","src":"3860:77:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3925:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"3930:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3867:57:28"},"nodeType":"YulFunctionCall","src":"3867:70:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3860:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3985:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3992:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3981:3:28"},"nodeType":"YulFunctionCall","src":"3981:16:28"},{"name":"pos","nodeType":"YulIdentifier","src":"3999:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"4004:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3946:34:28"},"nodeType":"YulFunctionCall","src":"3946:65:28"},"nodeType":"YulExpressionStatement","src":"3946:65:28"},{"nodeType":"YulAssignment","src":"4020:46:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4031:3:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4058:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4036:21:28"},"nodeType":"YulFunctionCall","src":"4036:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4027:3:28"},"nodeType":"YulFunctionCall","src":"4027:39:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4020:3:28"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3770:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3777:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3785:3:28","type":""}],"src":"3699:373:28"},{"body":{"nodeType":"YulBlock","src":"4216:269:28","statements":[{"nodeType":"YulAssignment","src":"4226:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4238:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4249:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4234:3:28"},"nodeType":"YulFunctionCall","src":"4234:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4226:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4300:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4313:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4324:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4309:3:28"},"nodeType":"YulFunctionCall","src":"4309:17:28"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"4262:37:28"},"nodeType":"YulFunctionCall","src":"4262:65:28"},"nodeType":"YulExpressionStatement","src":"4262:65:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4348:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4359:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4344:3:28"},"nodeType":"YulFunctionCall","src":"4344:18:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4368:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4374:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4364:3:28"},"nodeType":"YulFunctionCall","src":"4364:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4337:6:28"},"nodeType":"YulFunctionCall","src":"4337:48:28"},"nodeType":"YulExpressionStatement","src":"4337:48:28"},{"nodeType":"YulAssignment","src":"4394:84:28","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4464:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"4473:4:28"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4402:61:28"},"nodeType":"YulFunctionCall","src":"4402:76:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4394:4:28"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4180:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4192:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4200:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4211:4:28","type":""}],"src":"4078:407:28"},{"body":{"nodeType":"YulBlock","src":"4536:81:28","statements":[{"nodeType":"YulAssignment","src":"4546:65:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4561:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"4568:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4557:3:28"},"nodeType":"YulFunctionCall","src":"4557:54:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4546:7:28"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4518:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4528:7:28","type":""}],"src":"4491:126:28"},{"body":{"nodeType":"YulBlock","src":"4655:28:28","statements":[{"nodeType":"YulAssignment","src":"4665:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"4672:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4665:3:28"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4641:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4651:3:28","type":""}],"src":"4623:60:28"},{"body":{"nodeType":"YulBlock","src":"4749:82:28","statements":[{"nodeType":"YulAssignment","src":"4759:66:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4817:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4799:17:28"},"nodeType":"YulFunctionCall","src":"4799:24:28"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"4790:8:28"},"nodeType":"YulFunctionCall","src":"4790:34:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4772:17:28"},"nodeType":"YulFunctionCall","src":"4772:53:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4759:9:28"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4729:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4739:9:28","type":""}],"src":"4689:142:28"},{"body":{"nodeType":"YulBlock","src":"4897:66:28","statements":[{"nodeType":"YulAssignment","src":"4907:50:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4951:5:28"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"4920:30:28"},"nodeType":"YulFunctionCall","src":"4920:37:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4907:9:28"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4877:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4887:9:28","type":""}],"src":"4837:126:28"},{"body":{"nodeType":"YulBlock","src":"5051:66:28","statements":[{"nodeType":"YulAssignment","src":"5061:50:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5105:5:28"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"5074:30:28"},"nodeType":"YulFunctionCall","src":"5074:37:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5061:9:28"}]}]},"name":"convert_t_contract$_NFTCallSpread_$7563_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5031:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5041:9:28","type":""}],"src":"4969:148:28"},{"body":{"nodeType":"YulBlock","src":"5210:88:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5227:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5285:5:28"}],"functionName":{"name":"convert_t_contract$_NFTCallSpread_$7563_to_t_address","nodeType":"YulIdentifier","src":"5232:52:28"},"nodeType":"YulFunctionCall","src":"5232:59:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5220:6:28"},"nodeType":"YulFunctionCall","src":"5220:72:28"},"nodeType":"YulExpressionStatement","src":"5220:72:28"}]},"name":"abi_encode_t_contract$_NFTCallSpread_$7563_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5198:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5205:3:28","type":""}],"src":"5123:175:28"},{"body":{"nodeType":"YulBlock","src":"5424:146:28","statements":[{"nodeType":"YulAssignment","src":"5434:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5446:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5457:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5442:3:28"},"nodeType":"YulFunctionCall","src":"5442:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5434:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5536:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5549:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5560:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5545:3:28"},"nodeType":"YulFunctionCall","src":"5545:17:28"}],"functionName":{"name":"abi_encode_t_contract$_NFTCallSpread_$7563_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5470:65:28"},"nodeType":"YulFunctionCall","src":"5470:93:28"},"nodeType":"YulExpressionStatement","src":"5470:93:28"}]},"name":"abi_encode_tuple_t_contract$_NFTCallSpread_$7563__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5396:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5408:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5419:4:28","type":""}],"src":"5304:266:28"},{"body":{"nodeType":"YulBlock","src":"5604:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5621:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5624:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5614:6:28"},"nodeType":"YulFunctionCall","src":"5614:88:28"},"nodeType":"YulExpressionStatement","src":"5614:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5718:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5721:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5711:6:28"},"nodeType":"YulFunctionCall","src":"5711:15:28"},"nodeType":"YulExpressionStatement","src":"5711:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5742:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5745:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5735:6:28"},"nodeType":"YulFunctionCall","src":"5735:15:28"},"nodeType":"YulExpressionStatement","src":"5735:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5576:180:28"},{"body":{"nodeType":"YulBlock","src":"5805:238:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5815:58:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5837:6:28"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5867:4:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5845:21:28"},"nodeType":"YulFunctionCall","src":"5845:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5833:3:28"},"nodeType":"YulFunctionCall","src":"5833:40:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5819:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5984:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5986:16:28"},"nodeType":"YulFunctionCall","src":"5986:18:28"},"nodeType":"YulExpressionStatement","src":"5986:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5927:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"5939:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5924:2:28"},"nodeType":"YulFunctionCall","src":"5924:34:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5963:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5975:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5960:2:28"},"nodeType":"YulFunctionCall","src":"5960:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5921:2:28"},"nodeType":"YulFunctionCall","src":"5921:62:28"},"nodeType":"YulIf","src":"5918:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6022:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6026:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6015:6:28"},"nodeType":"YulFunctionCall","src":"6015:22:28"},"nodeType":"YulExpressionStatement","src":"6015:22:28"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5791:6:28","type":""},{"name":"size","nodeType":"YulTypedName","src":"5799:4:28","type":""}],"src":"5762:281:28"},{"body":{"nodeType":"YulBlock","src":"6090:88:28","statements":[{"nodeType":"YulAssignment","src":"6100:30:28","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6110:18:28"},"nodeType":"YulFunctionCall","src":"6110:20:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6100:6:28"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6159:6:28"},{"name":"size","nodeType":"YulIdentifier","src":"6167:4:28"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6139:19:28"},"nodeType":"YulFunctionCall","src":"6139:33:28"},"nodeType":"YulExpressionStatement","src":"6139:33:28"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6074:4:28","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6083:6:28","type":""}],"src":"6049:129:28"},{"body":{"nodeType":"YulBlock","src":"6266:229:28","statements":[{"body":{"nodeType":"YulBlock","src":"6371:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6373:16:28"},"nodeType":"YulFunctionCall","src":"6373:18:28"},"nodeType":"YulExpressionStatement","src":"6373:18:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6343:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6351:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6340:2:28"},"nodeType":"YulFunctionCall","src":"6340:30:28"},"nodeType":"YulIf","src":"6337:56:28"},{"nodeType":"YulAssignment","src":"6403:25:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6415:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6423:4:28","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6411:3:28"},"nodeType":"YulFunctionCall","src":"6411:17:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6403:4:28"}]},{"nodeType":"YulAssignment","src":"6465:23:28","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6477:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"6483:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6473:3:28"},"nodeType":"YulFunctionCall","src":"6473:15:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6465:4:28"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6250:6:28","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6261:4:28","type":""}],"src":"6184:311:28"},{"body":{"nodeType":"YulBlock","src":"6620:608:28","statements":[{"nodeType":"YulAssignment","src":"6630:90:28","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6712:6:28"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6655:56:28"},"nodeType":"YulFunctionCall","src":"6655:64:28"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6639:15:28"},"nodeType":"YulFunctionCall","src":"6639:81:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6630:5:28"}]},{"nodeType":"YulVariableDeclaration","src":"6729:16:28","value":{"name":"array","nodeType":"YulIdentifier","src":"6740:5:28"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6733:3:28","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6762:5:28"},{"name":"length","nodeType":"YulIdentifier","src":"6769:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6755:6:28"},"nodeType":"YulFunctionCall","src":"6755:21:28"},"nodeType":"YulExpressionStatement","src":"6755:21:28"},{"nodeType":"YulAssignment","src":"6785:23:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6796:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"6803:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6792:3:28"},"nodeType":"YulFunctionCall","src":"6792:16:28"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6785:3:28"}]},{"nodeType":"YulVariableDeclaration","src":"6818:44:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6836:6:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6848:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6856:4:28","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6844:3:28"},"nodeType":"YulFunctionCall","src":"6844:17:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6832:3:28"},"nodeType":"YulFunctionCall","src":"6832:30:28"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6822:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6890:103:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6904:77:28"},"nodeType":"YulFunctionCall","src":"6904:79:28"},"nodeType":"YulExpressionStatement","src":"6904:79:28"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6877:6:28"},{"name":"end","nodeType":"YulIdentifier","src":"6885:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6874:2:28"},"nodeType":"YulFunctionCall","src":"6874:15:28"},"nodeType":"YulIf","src":"6871:122:28"},{"body":{"nodeType":"YulBlock","src":"7078:144:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7093:21:28","value":{"name":"src","nodeType":"YulIdentifier","src":"7111:3:28"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7097:10:28","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7135:3:28"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7161:10:28"},{"name":"end","nodeType":"YulIdentifier","src":"7173:3:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7140:20:28"},"nodeType":"YulFunctionCall","src":"7140:37:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7128:6:28"},"nodeType":"YulFunctionCall","src":"7128:50:28"},"nodeType":"YulExpressionStatement","src":"7128:50:28"},{"nodeType":"YulAssignment","src":"7191:21:28","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7202:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"7207:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7198:3:28"},"nodeType":"YulFunctionCall","src":"7198:14:28"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7191:3:28"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7031:3:28"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7036:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7028:2:28"},"nodeType":"YulFunctionCall","src":"7028:15:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7044:25:28","statements":[{"nodeType":"YulAssignment","src":"7046:21:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7057:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"7062:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7053:3:28"},"nodeType":"YulFunctionCall","src":"7053:14:28"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7046:3:28"}]}]},"pre":{"nodeType":"YulBlock","src":"7006:21:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7008:17:28","value":{"name":"offset","nodeType":"YulIdentifier","src":"7019:6:28"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7012:3:28","type":""}]}]},"src":"7002:220:28"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6590:6:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"6598:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"6606:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6614:5:28","type":""}],"src":"6518:710:28"},{"body":{"nodeType":"YulBlock","src":"7328:293:28","statements":[{"body":{"nodeType":"YulBlock","src":"7377:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7379:77:28"},"nodeType":"YulFunctionCall","src":"7379:79:28"},"nodeType":"YulExpressionStatement","src":"7379:79:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7356:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7364:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7352:3:28"},"nodeType":"YulFunctionCall","src":"7352:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"7371:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7348:3:28"},"nodeType":"YulFunctionCall","src":"7348:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7341:6:28"},"nodeType":"YulFunctionCall","src":"7341:35:28"},"nodeType":"YulIf","src":"7338:122:28"},{"nodeType":"YulVariableDeclaration","src":"7469:34:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7496:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7483:12:28"},"nodeType":"YulFunctionCall","src":"7483:20:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7473:6:28","type":""}]},{"nodeType":"YulAssignment","src":"7512:103:28","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7588:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7596:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7584:3:28"},"nodeType":"YulFunctionCall","src":"7584:17:28"},{"name":"length","nodeType":"YulIdentifier","src":"7603:6:28"},{"name":"end","nodeType":"YulIdentifier","src":"7611:3:28"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7521:62:28"},"nodeType":"YulFunctionCall","src":"7521:94:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7512:5:28"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7306:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"7314:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7322:5:28","type":""}],"src":"7251:370:28"},{"body":{"nodeType":"YulBlock","src":"7735:576:28","statements":[{"body":{"nodeType":"YulBlock","src":"7781:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7783:77:28"},"nodeType":"YulFunctionCall","src":"7783:79:28"},"nodeType":"YulExpressionStatement","src":"7783:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7756:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"7765:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7752:3:28"},"nodeType":"YulFunctionCall","src":"7752:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"7777:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7748:3:28"},"nodeType":"YulFunctionCall","src":"7748:32:28"},"nodeType":"YulIf","src":"7745:119:28"},{"nodeType":"YulBlock","src":"7874:302:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7889:45:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7920:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7931:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7916:3:28"},"nodeType":"YulFunctionCall","src":"7916:17:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7903:12:28"},"nodeType":"YulFunctionCall","src":"7903:31:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7893:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7981:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7983:77:28"},"nodeType":"YulFunctionCall","src":"7983:79:28"},"nodeType":"YulExpressionStatement","src":"7983:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7953:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7961:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7950:2:28"},"nodeType":"YulFunctionCall","src":"7950:30:28"},"nodeType":"YulIf","src":"7947:117:28"},{"nodeType":"YulAssignment","src":"8078:88:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8138:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"8149:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8134:3:28"},"nodeType":"YulFunctionCall","src":"8134:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8158:7:28"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8088:45:28"},"nodeType":"YulFunctionCall","src":"8088:78:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8078:6:28"}]}]},{"nodeType":"YulBlock","src":"8186:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8201:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8215:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8205:6:28","type":""}]},{"nodeType":"YulAssignment","src":"8231:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8266:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"8277:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8262:3:28"},"nodeType":"YulFunctionCall","src":"8262:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8286:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8241:20:28"},"nodeType":"YulFunctionCall","src":"8241:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8231:6:28"}]}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7697:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7708:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7720:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7728:6:28","type":""}],"src":"7627:684:28"},{"body":{"nodeType":"YulBlock","src":"8345:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8362:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8365:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8355:6:28"},"nodeType":"YulFunctionCall","src":"8355:88:28"},"nodeType":"YulExpressionStatement","src":"8355:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8459:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8462:4:28","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8452:6:28"},"nodeType":"YulFunctionCall","src":"8452:15:28"},"nodeType":"YulExpressionStatement","src":"8452:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8483:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8486:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8476:6:28"},"nodeType":"YulFunctionCall","src":"8476:15:28"},"nodeType":"YulExpressionStatement","src":"8476:15:28"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"8317:180:28"},{"body":{"nodeType":"YulBlock","src":"8531:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8548:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8551:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8541:6:28"},"nodeType":"YulFunctionCall","src":"8541:88:28"},"nodeType":"YulExpressionStatement","src":"8541:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8645:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8648:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8638:6:28"},"nodeType":"YulFunctionCall","src":"8638:15:28"},"nodeType":"YulExpressionStatement","src":"8638:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8669:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8672:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8662:6:28"},"nodeType":"YulFunctionCall","src":"8662:15:28"},"nodeType":"YulExpressionStatement","src":"8662:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8503:180:28"},{"body":{"nodeType":"YulBlock","src":"8732:190:28","statements":[{"nodeType":"YulAssignment","src":"8742:33:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8769:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8751:17:28"},"nodeType":"YulFunctionCall","src":"8751:24:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8742:5:28"}]},{"body":{"nodeType":"YulBlock","src":"8865:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8867:16:28"},"nodeType":"YulFunctionCall","src":"8867:18:28"},"nodeType":"YulExpressionStatement","src":"8867:18:28"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8790:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"8797:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8787:2:28"},"nodeType":"YulFunctionCall","src":"8787:77:28"},"nodeType":"YulIf","src":"8784:103:28"},{"nodeType":"YulAssignment","src":"8896:20:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8907:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"8914:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8903:3:28"},"nodeType":"YulFunctionCall","src":"8903:13:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8896:3:28"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8718:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8728:3:28","type":""}],"src":"8689:233:28"},{"body":{"nodeType":"YulBlock","src":"8973:51:28","statements":[{"nodeType":"YulAssignment","src":"8983:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9012:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8994:17:28"},"nodeType":"YulFunctionCall","src":"8994:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8983:7:28"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8955:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8965:7:28","type":""}],"src":"8928:96:28"},{"body":{"nodeType":"YulBlock","src":"9073:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"9130:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9139:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9142:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9132:6:28"},"nodeType":"YulFunctionCall","src":"9132:12:28"},"nodeType":"YulExpressionStatement","src":"9132:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9096:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9121:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9103:17:28"},"nodeType":"YulFunctionCall","src":"9103:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9093:2:28"},"nodeType":"YulFunctionCall","src":"9093:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9086:6:28"},"nodeType":"YulFunctionCall","src":"9086:43:28"},"nodeType":"YulIf","src":"9083:63:28"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9066:5:28","type":""}],"src":"9030:122:28"},{"body":{"nodeType":"YulBlock","src":"9221:80:28","statements":[{"nodeType":"YulAssignment","src":"9231:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9246:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9240:5:28"},"nodeType":"YulFunctionCall","src":"9240:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9231:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9289:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"9262:26:28"},"nodeType":"YulFunctionCall","src":"9262:33:28"},"nodeType":"YulExpressionStatement","src":"9262:33:28"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9199:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"9207:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9215:5:28","type":""}],"src":"9158:143:28"},{"body":{"nodeType":"YulBlock","src":"9384:274:28","statements":[{"body":{"nodeType":"YulBlock","src":"9430:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9432:77:28"},"nodeType":"YulFunctionCall","src":"9432:79:28"},"nodeType":"YulExpressionStatement","src":"9432:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9405:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"9414:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9401:3:28"},"nodeType":"YulFunctionCall","src":"9401:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"9426:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9397:3:28"},"nodeType":"YulFunctionCall","src":"9397:32:28"},"nodeType":"YulIf","src":"9394:119:28"},{"nodeType":"YulBlock","src":"9523:128:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9538:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9552:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9542:6:28","type":""}]},{"nodeType":"YulAssignment","src":"9567:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9613:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"9624:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9609:3:28"},"nodeType":"YulFunctionCall","src":"9609:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9633:7:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"9577:31:28"},"nodeType":"YulFunctionCall","src":"9577:64:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9567:6:28"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9354:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9365:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9377:6:28","type":""}],"src":"9307:351:28"},{"body":{"nodeType":"YulBlock","src":"9738:40:28","statements":[{"nodeType":"YulAssignment","src":"9749:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9765:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9759:5:28"},"nodeType":"YulFunctionCall","src":"9759:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9749:6:28"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9721:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9731:6:28","type":""}],"src":"9664:114:28"},{"body":{"nodeType":"YulBlock","src":"9895:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9912:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"9917:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9905:6:28"},"nodeType":"YulFunctionCall","src":"9905:19:28"},"nodeType":"YulExpressionStatement","src":"9905:19:28"},{"nodeType":"YulAssignment","src":"9933:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9952:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"9957:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9948:3:28"},"nodeType":"YulFunctionCall","src":"9948:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9933:11:28"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9867:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"9872:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9883:11:28","type":""}],"src":"9784:184:28"},{"body":{"nodeType":"YulBlock","src":"10046:60:28","statements":[{"nodeType":"YulAssignment","src":"10056:11:28","value":{"name":"ptr","nodeType":"YulIdentifier","src":"10064:3:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10056:4:28"}]},{"nodeType":"YulAssignment","src":"10077:22:28","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10089:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"10094:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10085:3:28"},"nodeType":"YulFunctionCall","src":"10085:14:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10077:4:28"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10033:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"10041:4:28","type":""}],"src":"9974:132:28"},{"body":{"nodeType":"YulBlock","src":"10167:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10184:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10207:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10189:17:28"},"nodeType":"YulFunctionCall","src":"10189:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10177:6:28"},"nodeType":"YulFunctionCall","src":"10177:37:28"},"nodeType":"YulExpressionStatement","src":"10177:37:28"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10155:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10162:3:28","type":""}],"src":"10112:108:28"},{"body":{"nodeType":"YulBlock","src":"10306:99:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10350:6:28"},{"name":"pos","nodeType":"YulIdentifier","src":"10358:3:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10316:33:28"},"nodeType":"YulFunctionCall","src":"10316:46:28"},"nodeType":"YulExpressionStatement","src":"10316:46:28"},{"nodeType":"YulAssignment","src":"10371:28:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10389:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"10394:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10385:3:28"},"nodeType":"YulFunctionCall","src":"10385:14:28"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"10371:10:28"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"10279:6:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10287:3:28","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"10295:10:28","type":""}],"src":"10226:179:28"},{"body":{"nodeType":"YulBlock","src":"10486:38:28","statements":[{"nodeType":"YulAssignment","src":"10496:22:28","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10508:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"10513:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10504:3:28"},"nodeType":"YulFunctionCall","src":"10504:14:28"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"10496:4:28"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10473:3:28","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"10481:4:28","type":""}],"src":"10411:113:28"},{"body":{"nodeType":"YulBlock","src":"10684:608:28","statements":[{"nodeType":"YulVariableDeclaration","src":"10694:68:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10756:5:28"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10708:47:28"},"nodeType":"YulFunctionCall","src":"10708:54:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10698:6:28","type":""}]},{"nodeType":"YulAssignment","src":"10771:93:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10852:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"10857:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10778:73:28"},"nodeType":"YulFunctionCall","src":"10778:86:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10771:3:28"}]},{"nodeType":"YulVariableDeclaration","src":"10873:71:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10938:5:28"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10888:49:28"},"nodeType":"YulFunctionCall","src":"10888:56:28"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"10877:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10953:21:28","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"10967:7:28"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"10957:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"11043:224:28","statements":[{"nodeType":"YulVariableDeclaration","src":"11057:34:28","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11084:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11078:5:28"},"nodeType":"YulFunctionCall","src":"11078:13:28"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"11061:13:28","type":""}]},{"nodeType":"YulAssignment","src":"11104:70:28","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"11155:13:28"},{"name":"pos","nodeType":"YulIdentifier","src":"11170:3:28"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11111:43:28"},"nodeType":"YulFunctionCall","src":"11111:63:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11104:3:28"}]},{"nodeType":"YulAssignment","src":"11187:70:28","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11250:6:28"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11197:52:28"},"nodeType":"YulFunctionCall","src":"11197:60:28"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11187:6:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11005:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"11008:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11002:2:28"},"nodeType":"YulFunctionCall","src":"11002:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11016:18:28","statements":[{"nodeType":"YulAssignment","src":"11018:14:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11027:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"11030:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11023:3:28"},"nodeType":"YulFunctionCall","src":"11023:9:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11018:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"10987:14:28","statements":[{"nodeType":"YulVariableDeclaration","src":"10989:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"10998:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10993:1:28","type":""}]}]},"src":"10983:284:28"},{"nodeType":"YulAssignment","src":"11276:10:28","value":{"name":"pos","nodeType":"YulIdentifier","src":"11283:3:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11276:3:28"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10663:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10670:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10679:3:28","type":""}],"src":"10560:732:28"},{"body":{"nodeType":"YulBlock","src":"11474:307:28","statements":[{"nodeType":"YulAssignment","src":"11484:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11496:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11507:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11492:3:28"},"nodeType":"YulFunctionCall","src":"11492:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11484:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11531:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11542:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11527:3:28"},"nodeType":"YulFunctionCall","src":"11527:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11550:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"11556:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11546:3:28"},"nodeType":"YulFunctionCall","src":"11546:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11520:6:28"},"nodeType":"YulFunctionCall","src":"11520:47:28"},"nodeType":"YulExpressionStatement","src":"11520:47:28"},{"nodeType":"YulAssignment","src":"11576:116:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11678:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"11687:4:28"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11584:93:28"},"nodeType":"YulFunctionCall","src":"11584:108:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11576:4:28"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11746:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11759:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11770:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11755:3:28"},"nodeType":"YulFunctionCall","src":"11755:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11702:43:28"},"nodeType":"YulFunctionCall","src":"11702:72:28"},"nodeType":"YulExpressionStatement","src":"11702:72:28"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11438:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11450:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11458:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11469:4:28","type":""}],"src":"11298:483:28"},{"body":{"nodeType":"YulBlock","src":"11850:80:28","statements":[{"nodeType":"YulAssignment","src":"11860:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11875:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11869:5:28"},"nodeType":"YulFunctionCall","src":"11869:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11860:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11918:5:28"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"11891:26:28"},"nodeType":"YulFunctionCall","src":"11891:33:28"},"nodeType":"YulExpressionStatement","src":"11891:33:28"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11828:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"11836:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11844:5:28","type":""}],"src":"11787:143:28"},{"body":{"nodeType":"YulBlock","src":"11976:76:28","statements":[{"body":{"nodeType":"YulBlock","src":"12030:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12039:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12042:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12032:6:28"},"nodeType":"YulFunctionCall","src":"12032:12:28"},"nodeType":"YulExpressionStatement","src":"12032:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11999:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12021:5:28"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"12006:14:28"},"nodeType":"YulFunctionCall","src":"12006:21:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11996:2:28"},"nodeType":"YulFunctionCall","src":"11996:32:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11989:6:28"},"nodeType":"YulFunctionCall","src":"11989:40:28"},"nodeType":"YulIf","src":"11986:60:28"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11969:5:28","type":""}],"src":"11936:116:28"},{"body":{"nodeType":"YulBlock","src":"12118:77:28","statements":[{"nodeType":"YulAssignment","src":"12128:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12143:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12137:5:28"},"nodeType":"YulFunctionCall","src":"12137:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12128:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12183:5:28"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"12159:23:28"},"nodeType":"YulFunctionCall","src":"12159:30:28"},"nodeType":"YulExpressionStatement","src":"12159:30:28"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12096:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"12104:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12112:5:28","type":""}],"src":"12058:137:28"},{"body":{"nodeType":"YulBlock","src":"12377:1109:28","statements":[{"body":{"nodeType":"YulBlock","src":"12424:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12426:77:28"},"nodeType":"YulFunctionCall","src":"12426:79:28"},"nodeType":"YulExpressionStatement","src":"12426:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12398:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"12407:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12394:3:28"},"nodeType":"YulFunctionCall","src":"12394:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"12419:3:28","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12390:3:28"},"nodeType":"YulFunctionCall","src":"12390:33:28"},"nodeType":"YulIf","src":"12387:120:28"},{"nodeType":"YulBlock","src":"12517:128:28","statements":[{"nodeType":"YulVariableDeclaration","src":"12532:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"12546:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12536:6:28","type":""}]},{"nodeType":"YulAssignment","src":"12561:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12607:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"12618:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12603:3:28"},"nodeType":"YulFunctionCall","src":"12603:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12627:7:28"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"12571:31:28"},"nodeType":"YulFunctionCall","src":"12571:64:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12561:6:28"}]}]},{"nodeType":"YulBlock","src":"12655:129:28","statements":[{"nodeType":"YulVariableDeclaration","src":"12670:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"12684:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12674:6:28","type":""}]},{"nodeType":"YulAssignment","src":"12700:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12746:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"12757:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12742:3:28"},"nodeType":"YulFunctionCall","src":"12742:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12766:7:28"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"12710:31:28"},"nodeType":"YulFunctionCall","src":"12710:64:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12700:6:28"}]}]},{"nodeType":"YulBlock","src":"12794:129:28","statements":[{"nodeType":"YulVariableDeclaration","src":"12809:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"12823:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12813:6:28","type":""}]},{"nodeType":"YulAssignment","src":"12839:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12885:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"12896:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12881:3:28"},"nodeType":"YulFunctionCall","src":"12881:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12905:7:28"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"12849:31:28"},"nodeType":"YulFunctionCall","src":"12849:64:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12839:6:28"}]}]},{"nodeType":"YulBlock","src":"12933:129:28","statements":[{"nodeType":"YulVariableDeclaration","src":"12948:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"12962:2:28","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12952:6:28","type":""}]},{"nodeType":"YulAssignment","src":"12978:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13024:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"13035:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13020:3:28"},"nodeType":"YulFunctionCall","src":"13020:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13044:7:28"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"12988:31:28"},"nodeType":"YulFunctionCall","src":"12988:64:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12978:6:28"}]}]},{"nodeType":"YulBlock","src":"13072:130:28","statements":[{"nodeType":"YulVariableDeclaration","src":"13087:17:28","value":{"kind":"number","nodeType":"YulLiteral","src":"13101:3:28","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13091:6:28","type":""}]},{"nodeType":"YulAssignment","src":"13118:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13164:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"13175:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13160:3:28"},"nodeType":"YulFunctionCall","src":"13160:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13184:7:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"13128:31:28"},"nodeType":"YulFunctionCall","src":"13128:64:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"13118:6:28"}]}]},{"nodeType":"YulBlock","src":"13212:130:28","statements":[{"nodeType":"YulVariableDeclaration","src":"13227:17:28","value":{"kind":"number","nodeType":"YulLiteral","src":"13241:3:28","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13231:6:28","type":""}]},{"nodeType":"YulAssignment","src":"13258:74:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13304:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"13315:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13300:3:28"},"nodeType":"YulFunctionCall","src":"13300:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13324:7:28"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"13268:31:28"},"nodeType":"YulFunctionCall","src":"13268:64:28"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"13258:6:28"}]}]},{"nodeType":"YulBlock","src":"13352:127:28","statements":[{"nodeType":"YulVariableDeclaration","src":"13367:17:28","value":{"kind":"number","nodeType":"YulLiteral","src":"13381:3:28","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13371:6:28","type":""}]},{"nodeType":"YulAssignment","src":"13398:71:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13441:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"13452:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13437:3:28"},"nodeType":"YulFunctionCall","src":"13437:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13461:7:28"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"13408:28:28"},"nodeType":"YulFunctionCall","src":"13408:61:28"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"13398:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_addresst_addresst_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12299:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12310:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12322:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12330:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12338:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12346:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12354:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"12362:6:28","type":""},{"name":"value6","nodeType":"YulTypedName","src":"12370:6:28","type":""}],"src":"12201:1285:28"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_NFTCallSpread_$7563_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_NFTCallSpread_$7563_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_NFTCallSpread_$7563_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_NFTCallSpread_$7563__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_NFTCallSpread_$7563_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_addresst_addresst_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"7575":[{"length":32,"start":1259}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c80636e04ff0d1161005b5780636e04ff0d146100d8578063bf55dfd414610109578063e343dc2d14610127578063ef94720d146101455761007d565b80632913daa0146100825780632b26a6bf146100a05780634585e33b146100bc575b600080fd5b61008a610163565b60405161009791906105f3565b60405180910390f35b6100ba60048036038101906100b5919061064e565b610169565b005b6100d660048036038101906100d191906106e0565b610173565b005b6100f260048036038101906100ed91906106e0565b610255565b6040516101009291906107d8565b60405180910390f35b6101116104bf565b60405161011e9190610887565b60405180910390f35b61012f6104e3565b60405161013c91906105f3565b60405180910390f35b61014d6104e9565b60405161015a91906105f3565b60405180910390f35b60025481565b8060028190555050565b600080838381019061018591906109e0565b9150915060005b82518110156102475760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166337b371d98483815181106101e4576101e3610a3c565b5b60200260200101516040518263ffffffff1660e01b815260040161020891906105f3565b600060405180830381600087803b15801561022257600080fd5b505af1925050508015610233575060015b50808061023f90610a9a565b91505061018c565b508060018190555050505050565b600060606000600154905060008060025467ffffffffffffffff81111561027f5761027e6108a2565b5b6040519080825280602002602001820160405280156102ad5781602001602082028036833780820191505090505b5090505b6002548210156103d35760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b815260040161031491906105f3565b602060405180830381865afa92505050801561034e57506040513d601f19601f8201168201806040525081019061034b9190610b20565b60015b156103c05760008060008060008060006103678b61050d565b9650965096509650965096509650801580156103835750428511155b156103b7578a898b8151811061039c5761039b610a3c565b5b60200260200101818152505089806103b390610a9a565b9a50505b50505050505050505b82806103cb90610a9a565b9350506102b1565b60008211156104b05760008267ffffffffffffffff8111156103f8576103f76108a2565b5b6040519080825280602002602001820160405280156104265781602001602082028036833780820191505090505b50905060005b838110156104815782818151811061044757610446610a3c565b5b602002602001015182828151811061046257610461610a3c565b5b602002602001018181525050808061047990610a9a565b91505061042c565b508084604051602001610495929190610c0b565b604051602081830303815290604052945060019550506104b5565b600094505b5050509250929050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060008060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639abe0d58896040518263ffffffff1660e01b815260040161057291906105f3565b60e060405180830381865afa15801561058f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b39190610c7c565b809750819850829950839a50849b50859c50869d5050505050505050919395979092949650565b6000819050919050565b6105ed816105da565b82525050565b600060208201905061060860008301846105e4565b92915050565b6000604051905090565b600080fd5b600080fd5b61062b816105da565b811461063657600080fd5b50565b60008135905061064881610622565b92915050565b60006020828403121561066457610663610618565b5b600061067284828501610639565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126106a05761069f61067b565b5b8235905067ffffffffffffffff8111156106bd576106bc610680565b5b6020830191508360018202830111156106d9576106d8610685565b5b9250929050565b600080602083850312156106f7576106f6610618565b5b600083013567ffffffffffffffff8111156107155761071461061d565b5b6107218582860161068a565b92509250509250929050565b60008115159050919050565b6107428161072d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610782578082015181840152602081019050610767565b60008484015250505050565b6000601f19601f8301169050919050565b60006107aa82610748565b6107b48185610753565b93506107c4818560208601610764565b6107cd8161078e565b840191505092915050565b60006040820190506107ed6000830185610739565b81810360208301526107ff818461079f565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061084d61084861084384610808565b610828565b610808565b9050919050565b600061085f82610832565b9050919050565b600061087182610854565b9050919050565b61088181610866565b82525050565b600060208201905061089c6000830184610878565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108da8261078e565b810181811067ffffffffffffffff821117156108f9576108f86108a2565b5b80604052505050565b600061090c61060e565b905061091882826108d1565b919050565b600067ffffffffffffffff821115610938576109376108a2565b5b602082029050602081019050919050565b600061095c6109578461091d565b610902565b9050808382526020820190506020840283018581111561097f5761097e610685565b5b835b818110156109a857806109948882610639565b845260208401935050602081019050610981565b5050509392505050565b600082601f8301126109c7576109c661067b565b5b81356109d7848260208601610949565b91505092915050565b600080604083850312156109f7576109f6610618565b5b600083013567ffffffffffffffff811115610a1557610a1461061d565b5b610a21858286016109b2565b9250506020610a3285828601610639565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa5826105da565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ad757610ad6610a6b565b5b600182019050919050565b6000610aed82610808565b9050919050565b610afd81610ae2565b8114610b0857600080fd5b50565b600081519050610b1a81610af4565b92915050565b600060208284031215610b3657610b35610618565b5b6000610b4484828501610b0b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610b82816105da565b82525050565b6000610b948383610b79565b60208301905092915050565b6000602082019050919050565b6000610bb882610b4d565b610bc28185610b58565b9350610bcd83610b69565b8060005b83811015610bfe578151610be58882610b88565b9750610bf083610ba0565b925050600181019050610bd1565b5085935050505092915050565b60006040820190508181036000830152610c258185610bad565b9050610c3460208301846105e4565b9392505050565b600081519050610c4a81610622565b92915050565b610c598161072d565b8114610c6457600080fd5b50565b600081519050610c7681610c50565b92915050565b600080600080600080600060e0888a031215610c9b57610c9a610618565b5b6000610ca98a828b01610c3b565b9750506020610cba8a828b01610c3b565b9650506040610ccb8a828b01610c3b565b9550506060610cdc8a828b01610c3b565b9450506080610ced8a828b01610b0b565b93505060a0610cfe8a828b01610b0b565b92505060c0610d0f8a828b01610c67565b9150509295989194975092955056fea2646970667358221220fb01f17d8a1f0753cd8608b2d1e0c0465eac5500aa7b2ddc3b3bbb73a12be8bd64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E04FF0D GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xBF55DFD4 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xE343DC2D EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xEF94720D EQ PUSH2 0x145 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2913DAA0 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2B26A6BF EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x169 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x173 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x9E0 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x37B371D9 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1E4 JUMPI PUSH2 0x1E3 PUSH2 0xA3C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x233 JUMPI POP PUSH1 0x1 JUMPDEST POP DUP1 DUP1 PUSH2 0x23F SWAP1 PUSH2 0xA9A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x18C JUMP JUMPDEST POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F JUMPI PUSH2 0x27E PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x34E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x367 DUP12 PUSH2 0x50D JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x383 JUMPI POP TIMESTAMP DUP6 GT ISZERO JUMPDEST ISZERO PUSH2 0x3B7 JUMPI DUP11 DUP10 DUP12 DUP2 MLOAD DUP2 LT PUSH2 0x39C JUMPI PUSH2 0x39B PUSH2 0xA3C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP10 DUP1 PUSH2 0x3B3 SWAP1 PUSH2 0xA9A JUMP JUMPDEST SWAP11 POP POP JUMPDEST POP POP POP POP POP POP POP POP JUMPDEST DUP3 DUP1 PUSH2 0x3CB SWAP1 PUSH2 0xA9A JUMP JUMPDEST SWAP4 POP POP PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x0 DUP3 GT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F8 JUMPI PUSH2 0x3F7 PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x426 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x481 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x447 JUMPI PUSH2 0x446 PUSH2 0xA3C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0xA3C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x479 SWAP1 PUSH2 0xA9A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x42C JUMP JUMPDEST POP DUP1 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x495 SWAP3 SWAP2 SWAP1 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP PUSH1 0x1 SWAP6 POP POP PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x0 SWAP5 POP JUMPDEST POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9ABE0D58 DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x572 SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0xC7C JUMP JUMPDEST DUP1 SWAP8 POP DUP2 SWAP9 POP DUP3 SWAP10 POP DUP4 SWAP11 POP DUP5 SWAP12 POP DUP6 SWAP13 POP DUP7 SWAP14 POP POP POP POP POP POP POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5ED DUP2 PUSH2 0x5DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x608 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62B DUP2 PUSH2 0x5DA JUMP JUMPDEST DUP2 EQ PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x648 DUP2 PUSH2 0x622 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x664 JUMPI PUSH2 0x663 PUSH2 0x618 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x672 DUP5 DUP3 DUP6 ADD PUSH2 0x639 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x6A0 JUMPI PUSH2 0x69F PUSH2 0x67B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6BD JUMPI PUSH2 0x6BC PUSH2 0x680 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x6D9 JUMPI PUSH2 0x6D8 PUSH2 0x685 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6F7 JUMPI PUSH2 0x6F6 PUSH2 0x618 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x715 JUMPI PUSH2 0x714 PUSH2 0x61D JUMP JUMPDEST JUMPDEST PUSH2 0x721 DUP6 DUP3 DUP7 ADD PUSH2 0x68A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x742 DUP2 PUSH2 0x72D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x782 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x767 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AA DUP3 PUSH2 0x748 JUMP JUMPDEST PUSH2 0x7B4 DUP2 DUP6 PUSH2 0x753 JUMP JUMPDEST SWAP4 POP PUSH2 0x7C4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x764 JUMP JUMPDEST PUSH2 0x7CD DUP2 PUSH2 0x78E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7ED PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x739 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x7FF DUP2 DUP5 PUSH2 0x79F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84D PUSH2 0x848 PUSH2 0x843 DUP5 PUSH2 0x808 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH2 0x808 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85F DUP3 PUSH2 0x832 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x871 DUP3 PUSH2 0x854 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x881 DUP2 PUSH2 0x866 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x89C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x878 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8DA DUP3 PUSH2 0x78E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x8F9 JUMPI PUSH2 0x8F8 PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90C PUSH2 0x60E JUMP JUMPDEST SWAP1 POP PUSH2 0x918 DUP3 DUP3 PUSH2 0x8D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x938 JUMPI PUSH2 0x937 PUSH2 0x8A2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95C PUSH2 0x957 DUP5 PUSH2 0x91D JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x97F JUMPI PUSH2 0x97E PUSH2 0x685 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9A8 JUMPI DUP1 PUSH2 0x994 DUP9 DUP3 PUSH2 0x639 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x981 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9C7 JUMPI PUSH2 0x9C6 PUSH2 0x67B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9D7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x949 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F7 JUMPI PUSH2 0x9F6 PUSH2 0x618 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA15 JUMPI PUSH2 0xA14 PUSH2 0x61D JUMP JUMPDEST JUMPDEST PUSH2 0xA21 DUP6 DUP3 DUP7 ADD PUSH2 0x9B2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA32 DUP6 DUP3 DUP7 ADD PUSH2 0x639 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAA5 DUP3 PUSH2 0x5DA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xAD7 JUMPI PUSH2 0xAD6 PUSH2 0xA6B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAED DUP3 PUSH2 0x808 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFD DUP2 PUSH2 0xAE2 JUMP JUMPDEST DUP2 EQ PUSH2 0xB08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB1A DUP2 PUSH2 0xAF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB36 JUMPI PUSH2 0xB35 PUSH2 0x618 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB44 DUP5 DUP3 DUP6 ADD PUSH2 0xB0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB82 DUP2 PUSH2 0x5DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB94 DUP4 DUP4 PUSH2 0xB79 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB8 DUP3 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0xBC2 DUP2 DUP6 PUSH2 0xB58 JUMP JUMPDEST SWAP4 POP PUSH2 0xBCD DUP4 PUSH2 0xB69 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBFE JUMPI DUP2 MLOAD PUSH2 0xBE5 DUP9 DUP3 PUSH2 0xB88 JUMP JUMPDEST SWAP8 POP PUSH2 0xBF0 DUP4 PUSH2 0xBA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xBD1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC25 DUP2 DUP6 PUSH2 0xBAD JUMP JUMPDEST SWAP1 POP PUSH2 0xC34 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5E4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC4A DUP2 PUSH2 0x622 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC59 DUP2 PUSH2 0x72D JUMP JUMPDEST DUP2 EQ PUSH2 0xC64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC76 DUP2 PUSH2 0xC50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x618 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCA9 DUP11 DUP3 DUP12 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xCBA DUP11 DUP3 DUP12 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xCCB DUP11 DUP3 DUP12 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xCDC DUP11 DUP3 DUP12 ADD PUSH2 0xC3B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xCED DUP11 DUP3 DUP12 ADD PUSH2 0xB0B JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0xCFE DUP11 DUP3 DUP12 ADD PUSH2 0xB0B JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0xD0F DUP11 DUP3 DUP12 ADD PUSH2 0xC67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB ADD CALL PUSH30 0x8A1F0753CD8608B2D1E0C0465EAC5500AA7B2DDC3B3BBB73A12BE8BD6473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"281:4857:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4933:203;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3146:623;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1095:1857;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;345:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;467:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;385:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;567:27;;;;:::o;4933:203::-;5116:13;5101:12;:28;;;;4933:203;:::o;3146:623::-;3226:35;3263:14;3292:11;;3281:45;;;;;;;:::i;:::-;3225:101;;;;3383:9;3378:294;3402:18;:25;3398:1;:29;3378:294;;;3452:13;;;;;;;;;;:32;;;3485:18;3504:1;3485:21;;;;;;;;:::i;:::-;;;;;;;;3452:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3448:214;3429:3;;;;;:::i;:::-;;;;3378:294;;;;3756:6;3738:15;:24;;;;3215:554;;3146:623;;:::o;1095:1857::-;1212:17;1231:24;1271:17;1291:15;;1271:35;;1316:18;1348:32;1397:12;;1383:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1348:62;;1513:888;1533:12;;1520:10;:25;1513:888;;;1630:13;;;;;;;;;;:21;;;1652:9;1630:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1626:727;;;1793:20;1815;1837:14;1853:18;1873:14;1889:13;1904:14;1943:34;1967:9;1943:23;:34::i;:::-;1792:185;;;;;;;;;;;;;;2098:9;2097:10;:39;;;;;2121:15;2111:6;:25;;2097:39;2093:159;;;2190:9;2160:15;2176:10;2160:27;;;;;;;;:::i;:::-;;;;;;;:39;;;;;2221:12;;;;;:::i;:::-;;;;2093:159;1681:585;;;;;;;1663:603;1626:727;2379:11;;;;;:::i;:::-;;;;1513:888;;;2504:1;2491:10;:14;2487:459;;;2577:35;2629:10;2615:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:63;;2659:9;2654:116;2678:10;2674:1;:14;2654:116;;;2737:15;2753:1;2737:18;;;;;;;;:::i;:::-;;;;;;;;2713;2732:1;2713:21;;;;;;;;:::i;:::-;;;;;;;:42;;;;;2690:3;;;;;:::i;:::-;;;;2654:116;;;;2821:18;2841:9;2810:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2796:55;;2880:4;2865:19;;2507:388;2487:459;;;2930:5;2915:20;;2487:459;1261:1691;;;1095:1857;;;;;:::o;345:34::-;;;;;;;;;;;;:::o;467:30::-;;;;:::o;385:38::-;;;:::o;4227:524::-;4309:20;4339;4369:14;4393:18;4421:14;4445:13;4468:14;4619:13;;;;;;;;;;;:25;;;4645:7;4619:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4542:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;4227:524;;;;;;;;;:::o;7:77:28:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:117::-;1486:1;1483;1476:12;1500:117;1609:1;1606;1599:12;1623:117;1732:1;1729;1722:12;1759:552;1816:8;1826:6;1876:3;1869:4;1861:6;1857:17;1853:27;1843:122;;1884:79;;:::i;:::-;1843:122;1997:6;1984:20;1974:30;;2027:18;2019:6;2016:30;2013:117;;;2049:79;;:::i;:::-;2013:117;2163:4;2155:6;2151:17;2139:29;;2217:3;2209:4;2201:6;2197:17;2187:8;2183:32;2180:41;2177:128;;;2224:79;;:::i;:::-;2177:128;1759:552;;;;;:::o;2317:527::-;2387:6;2395;2444:2;2432:9;2423:7;2419:23;2415:32;2412:119;;;2450:79;;:::i;:::-;2412:119;2598:1;2587:9;2583:17;2570:31;2628:18;2620:6;2617:30;2614:117;;;2650:79;;:::i;:::-;2614:117;2763:64;2819:7;2810:6;2799:9;2795:22;2763:64;:::i;:::-;2745:82;;;;2541:296;2317:527;;;;;:::o;2850:90::-;2884:7;2927:5;2920:13;2913:21;2902:32;;2850:90;;;:::o;2946:109::-;3027:21;3042:5;3027:21;:::i;:::-;3022:3;3015:34;2946:109;;:::o;3061:98::-;3112:6;3146:5;3140:12;3130:22;;3061:98;;;:::o;3165:168::-;3248:11;3282:6;3277:3;3270:19;3322:4;3317:3;3313:14;3298:29;;3165:168;;;;:::o;3339:246::-;3420:1;3430:113;3444:6;3441:1;3438:13;3430:113;;;3529:1;3524:3;3520:11;3514:18;3510:1;3505:3;3501:11;3494:39;3466:2;3463:1;3459:10;3454:15;;3430:113;;;3577:1;3568:6;3563:3;3559:16;3552:27;3401:184;3339:246;;;:::o;3591:102::-;3632:6;3683:2;3679:7;3674:2;3667:5;3663:14;3659:28;3649:38;;3591:102;;;:::o;3699:373::-;3785:3;3813:38;3845:5;3813:38;:::i;:::-;3867:70;3930:6;3925:3;3867:70;:::i;:::-;3860:77;;3946:65;4004:6;3999:3;3992:4;3985:5;3981:16;3946:65;:::i;:::-;4036:29;4058:6;4036:29;:::i;:::-;4031:3;4027:39;4020:46;;3789:283;3699:373;;;;:::o;4078:407::-;4211:4;4249:2;4238:9;4234:18;4226:26;;4262:65;4324:1;4313:9;4309:17;4300:6;4262:65;:::i;:::-;4374:9;4368:4;4364:20;4359:2;4348:9;4344:18;4337:48;4402:76;4473:4;4464:6;4402:76;:::i;:::-;4394:84;;4078:407;;;;;:::o;4491:126::-;4528:7;4568:42;4561:5;4557:54;4546:65;;4491:126;;;:::o;4623:60::-;4651:3;4672:5;4665:12;;4623:60;;;:::o;4689:142::-;4739:9;4772:53;4790:34;4799:24;4817:5;4799:24;:::i;:::-;4790:34;:::i;:::-;4772:53;:::i;:::-;4759:66;;4689:142;;;:::o;4837:126::-;4887:9;4920:37;4951:5;4920:37;:::i;:::-;4907:50;;4837:126;;;:::o;4969:148::-;5041:9;5074:37;5105:5;5074:37;:::i;:::-;5061:50;;4969:148;;;:::o;5123:175::-;5232:59;5285:5;5232:59;:::i;:::-;5227:3;5220:72;5123:175;;:::o;5304:266::-;5419:4;5457:2;5446:9;5442:18;5434:26;;5470:93;5560:1;5549:9;5545:17;5536:6;5470:93;:::i;:::-;5304:266;;;;:::o;5576:180::-;5624:77;5621:1;5614:88;5721:4;5718:1;5711:15;5745:4;5742:1;5735:15;5762:281;5845:27;5867:4;5845:27;:::i;:::-;5837:6;5833:40;5975:6;5963:10;5960:22;5939:18;5927:10;5924:34;5921:62;5918:88;;;5986:18;;:::i;:::-;5918:88;6026:10;6022:2;6015:22;5805:238;5762:281;;:::o;6049:129::-;6083:6;6110:20;;:::i;:::-;6100:30;;6139:33;6167:4;6159:6;6139:33;:::i;:::-;6049:129;;;:::o;6184:311::-;6261:4;6351:18;6343:6;6340:30;6337:56;;;6373:18;;:::i;:::-;6337:56;6423:4;6415:6;6411:17;6403:25;;6483:4;6477;6473:15;6465:23;;6184:311;;;:::o;6518:710::-;6614:5;6639:81;6655:64;6712:6;6655:64;:::i;:::-;6639:81;:::i;:::-;6630:90;;6740:5;6769:6;6762:5;6755:21;6803:4;6796:5;6792:16;6785:23;;6856:4;6848:6;6844:17;6836:6;6832:30;6885:3;6877:6;6874:15;6871:122;;;6904:79;;:::i;:::-;6871:122;7019:6;7002:220;7036:6;7031:3;7028:15;7002:220;;;7111:3;7140:37;7173:3;7161:10;7140:37;:::i;:::-;7135:3;7128:50;7207:4;7202:3;7198:14;7191:21;;7078:144;7062:4;7057:3;7053:14;7046:21;;7002:220;;;7006:21;6620:608;;6518:710;;;;;:::o;7251:370::-;7322:5;7371:3;7364:4;7356:6;7352:17;7348:27;7338:122;;7379:79;;:::i;:::-;7338:122;7496:6;7483:20;7521:94;7611:3;7603:6;7596:4;7588:6;7584:17;7521:94;:::i;:::-;7512:103;;7328:293;7251:370;;;;:::o;7627:684::-;7720:6;7728;7777:2;7765:9;7756:7;7752:23;7748:32;7745:119;;;7783:79;;:::i;:::-;7745:119;7931:1;7920:9;7916:17;7903:31;7961:18;7953:6;7950:30;7947:117;;;7983:79;;:::i;:::-;7947:117;8088:78;8158:7;8149:6;8138:9;8134:22;8088:78;:::i;:::-;8078:88;;7874:302;8215:2;8241:53;8286:7;8277:6;8266:9;8262:22;8241:53;:::i;:::-;8231:63;;8186:118;7627:684;;;;;:::o;8317:180::-;8365:77;8362:1;8355:88;8462:4;8459:1;8452:15;8486:4;8483:1;8476:15;8503:180;8551:77;8548:1;8541:88;8648:4;8645:1;8638:15;8672:4;8669:1;8662:15;8689:233;8728:3;8751:24;8769:5;8751:24;:::i;:::-;8742:33;;8797:66;8790:5;8787:77;8784:103;;8867:18;;:::i;:::-;8784:103;8914:1;8907:5;8903:13;8896:20;;8689:233;;;:::o;8928:96::-;8965:7;8994:24;9012:5;8994:24;:::i;:::-;8983:35;;8928:96;;;:::o;9030:122::-;9103:24;9121:5;9103:24;:::i;:::-;9096:5;9093:35;9083:63;;9142:1;9139;9132:12;9083:63;9030:122;:::o;9158:143::-;9215:5;9246:6;9240:13;9231:22;;9262:33;9289:5;9262:33;:::i;:::-;9158:143;;;;:::o;9307:351::-;9377:6;9426:2;9414:9;9405:7;9401:23;9397:32;9394:119;;;9432:79;;:::i;:::-;9394:119;9552:1;9577:64;9633:7;9624:6;9613:9;9609:22;9577:64;:::i;:::-;9567:74;;9523:128;9307:351;;;;:::o;9664:114::-;9731:6;9765:5;9759:12;9749:22;;9664:114;;;:::o;9784:184::-;9883:11;9917:6;9912:3;9905:19;9957:4;9952:3;9948:14;9933:29;;9784:184;;;;:::o;9974:132::-;10041:4;10064:3;10056:11;;10094:4;10089:3;10085:14;10077:22;;9974:132;;;:::o;10112:108::-;10189:24;10207:5;10189:24;:::i;:::-;10184:3;10177:37;10112:108;;:::o;10226:179::-;10295:10;10316:46;10358:3;10350:6;10316:46;:::i;:::-;10394:4;10389:3;10385:14;10371:28;;10226:179;;;;:::o;10411:113::-;10481:4;10513;10508:3;10504:14;10496:22;;10411:113;;;:::o;10560:732::-;10679:3;10708:54;10756:5;10708:54;:::i;:::-;10778:86;10857:6;10852:3;10778:86;:::i;:::-;10771:93;;10888:56;10938:5;10888:56;:::i;:::-;10967:7;10998:1;10983:284;11008:6;11005:1;11002:13;10983:284;;;11084:6;11078:13;11111:63;11170:3;11155:13;11111:63;:::i;:::-;11104:70;;11197:60;11250:6;11197:60;:::i;:::-;11187:70;;11043:224;11030:1;11027;11023:9;11018:14;;10983:284;;;10987:14;11283:3;11276:10;;10684:608;;;10560:732;;;;:::o;11298:483::-;11469:4;11507:2;11496:9;11492:18;11484:26;;11556:9;11550:4;11546:20;11542:1;11531:9;11527:17;11520:47;11584:108;11687:4;11678:6;11584:108;:::i;:::-;11576:116;;11702:72;11770:2;11759:9;11755:18;11746:6;11702:72;:::i;:::-;11298:483;;;;;:::o;11787:143::-;11844:5;11875:6;11869:13;11860:22;;11891:33;11918:5;11891:33;:::i;:::-;11787:143;;;;:::o;11936:116::-;12006:21;12021:5;12006:21;:::i;:::-;11999:5;11996:32;11986:60;;12042:1;12039;12032:12;11986:60;11936:116;:::o;12058:137::-;12112:5;12143:6;12137:13;12128:22;;12159:30;12183:5;12159:30;:::i;:::-;12058:137;;;;:::o;12201:1285::-;12322:6;12330;12338;12346;12354;12362;12370;12419:3;12407:9;12398:7;12394:23;12390:33;12387:120;;;12426:79;;:::i;:::-;12387:120;12546:1;12571:64;12627:7;12618:6;12607:9;12603:22;12571:64;:::i;:::-;12561:74;;12517:128;12684:2;12710:64;12766:7;12757:6;12746:9;12742:22;12710:64;:::i;:::-;12700:74;;12655:129;12823:2;12849:64;12905:7;12896:6;12885:9;12881:22;12849:64;:::i;:::-;12839:74;;12794:129;12962:2;12988:64;13044:7;13035:6;13024:9;13020:22;12988:64;:::i;:::-;12978:74;;12933:129;13101:3;13128:64;13184:7;13175:6;13164:9;13160:22;13128:64;:::i;:::-;13118:74;;13072:130;13241:3;13268:64;13324:7;13315:6;13304:9;13300:22;13268:64;:::i;:::-;13258:74;;13212:130;13381:3;13408:61;13461:7;13452:6;13441:9;13437:22;13408:61;:::i;:::-;13398:71;;13352:127;12201:1285;;;;;;;;;;:::o"},"methodIdentifiers":{"checkGasLimit()":"ef94720d","checkUpkeep(bytes)":"6e04ff0d","lastProcessedId()":"e343dc2d","maxBatchSize()":"2913daa0","nftCallSpread()":"bf55dfd4","performUpkeep(bytes)":"4585e33b","setMaxBatchSize(uint256)":"2b26a6bf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftCallSpread\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_checkGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxBatchSize\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"checkGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastProcessedId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBatchSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftCallSpread\",\"outputs\":[{\"internalType\":\"contract NFTCallSpread\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxBatchSize\",\"type\":\"uint256\"}],\"name\":\"setMaxBatchSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contrat Chainlink Keeper pour exercer automatiquement les call spreads arriv\\u00e9s \\u00e0 maturit\\u00e9\",\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"Fonction v\\u00e9rifi\\u00e9e par Chainlink Automation pour d\\u00e9terminer si une ex\\u00e9cution est n\\u00e9cessaire\",\"returns\":{\"performData\":\"Donn\\u00e9es \\u00e0 passer \\u00e0 performUpkeep\",\"upkeepNeeded\":\"Indique si une ex\\u00e9cution est n\\u00e9cessaire\"}},\"performUpkeep(bytes)\":{\"details\":\"Fonction ex\\u00e9cut\\u00e9e par Chainlink Automation lorsque checkUpkeep indique que c'est n\\u00e9cessaire\",\"params\":{\"performData\":\"Donn\\u00e9es encod\\u00e9es par checkUpkeep\"}},\"setMaxBatchSize(uint256)\":{\"details\":\"Fonction pour mettre \\u00e0 jour le nombre maximal d'options \\u00e0 exercer par transaction\",\"params\":{\"_maxBatchSize\":\"Nouvelle taille de lot maximale\"}}},\"title\":\"NFTCallSpreadKeeper\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTCallSpreadKeeper.sol\":\"NFTCallSpreadKeeper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xe52813067c6d5838eeb34e1da8beb2514371a7d778266013b04ca3be1dda7100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53fb552d625eb5f60ef9dce439c826bb780952cbbafc985db6e48ac6382a5585\",\"dweb:/ipfs/QmSEbLqEWN1SqsWekfqt6RWC4oEajFWtZ5j8i6gKaGdtKr\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/NFTCallSpread.sol\":{\"keccak256\":\"0x0f149c3c68bc88a7acd9108ef73fefba812b58e4b1179d45de504d0735522dcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc107f76fd709331ec6c6d9ed97f13da35fd9bc34342f769d354a725ef6a666\",\"dweb:/ipfs/QmRbjzU9q8v33g4nk7JCjtVysHCcHwnTV1HaYUy6utRp7m\"]},\"contracts/NFTCallSpreadKeeper.sol\":{\"keccak256\":\"0x4b0cfc39b0757d96b3fc8d3754bd58efbf38562c385d1ddab7de795de6cef255\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a170fd2017307f09d8c3f1f2a9b089d978b25ba8b4fe4bdb4df3a8ec3be5c0be\",\"dweb:/ipfs/QmdHDk2R3euokDwUq5b93eFu7Ds83r5jqgMUs5x5WEp7Bq\"]},\"contracts/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xb676cf35c3b69893d3ebe72bd77de1f7ea9f902bf77233afc1ee7942f301d509\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59276af9d56de67ccb87d5115ba51799ddea2c5068a8aa7b6a1f1217b59b8b3a\",\"dweb:/ipfs/QmUsRfR4eQhUhttHLETDihxQdMWmQKrEgi4eYdBh3hDTzE\"]},\"contracts/interfaces/KeeperCompatibleInterface.sol\":{\"keccak256\":\"0xc4c079c4a463357cadc864adf9fa50ed5482043ef3fb4d7e2e2bbe3948b237cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d653b8abd6a2ae0ccbcafeb82c7ee60683254769d67c9249c0b1d088fd85a5d\",\"dweb:/ipfs/QmUW6uhoYm112bXapi1QBtLxcvruRs37YQmAS7RDMtnUue\"]}},\"version\":1}"}},"contracts/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xb676cf35c3b69893d3ebe72bd77de1f7ea9f902bf77233afc1ee7942f301d509\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59276af9d56de67ccb87d5115ba51799ddea2c5068a8aa7b6a1f1217b59b8b3a\",\"dweb:/ipfs/QmUsRfR4eQhUhttHLETDihxQdMWmQKrEgi4eYdBh3hDTzE\"]}},\"version\":1}"}},"contracts/interfaces/KeeperCompatibleInterface.sol":{"KeeperCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"params\":{\"checkData\":\"donn\\u00e9es pass\\u00e9es \\u00e0 la fonction checkUpkeep pour indiquer le type d'upkeep requis\"},\"returns\":{\"upkeepNeeded\":\"boolean indiquant si l'upkeep est n\\u00e9cessaire, performData bytes qui seront pass\\u00e9es \\u00e0 performUpkeep\"}},\"performUpkeep(bytes)\":{\"params\":{\"performData\":\"donn\\u00e9es pass\\u00e9es \\u00e0 performUpkeep\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"m\\u00e9thode qui est simul\\u00e9e par le keeper pour v\\u00e9rifier si l'upkeep est n\\u00e9cessaire\"},\"performUpkeep(bytes)\":{\"notice\":\"m\\u00e9thode qui est appel\\u00e9e par le keeper pour effectuer l'upkeep\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/KeeperCompatibleInterface.sol\":\"KeeperCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/KeeperCompatibleInterface.sol\":{\"keccak256\":\"0xc4c079c4a463357cadc864adf9fa50ed5482043ef3fb4d7e2e2bbe3948b237cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d653b8abd6a2ae0ccbcafeb82c7ee60683254769d67c9249c0b1d088fd85a5d\",\"dweb:/ipfs/QmUW6uhoYm112bXapi1QBtLxcvruRs37YQmAS7RDMtnUue\"]}},\"version\":1}"}},"contracts/mocks/MockERC20.sol":{"MockERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_368":{"entryPoint":null,"id":368,"parameterSlots":2,"returnSlots":0},"@_7936":{"entryPoint":null,"id":7936,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":380,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":455,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":506,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":251,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":103,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":282,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":750,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":639,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1071,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":886,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1032,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":906,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1226,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":336,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":771,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":697,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1196,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":197,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":896,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1164,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":650,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":150,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":946,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":123,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":128,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":118,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":113,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":133,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":787,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1151,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1004,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":800,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":956,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":999,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:28","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:28","statements":[{"nodeType":"YulAssignment","src":"57:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:28"},"nodeType":"YulFunctionCall","src":"67:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:28"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:28","type":""}],"src":"7:75:28"},{"body":{"nodeType":"YulBlock","src":"177:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:28"},"nodeType":"YulFunctionCall","src":"187:12:28"},"nodeType":"YulExpressionStatement","src":"187:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:28"},{"body":{"nodeType":"YulBlock","src":"300:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:28"},"nodeType":"YulFunctionCall","src":"310:12:28"},"nodeType":"YulExpressionStatement","src":"310:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:28"},{"body":{"nodeType":"YulBlock","src":"423:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:28"},"nodeType":"YulFunctionCall","src":"433:12:28"},"nodeType":"YulExpressionStatement","src":"433:12:28"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:28"},{"body":{"nodeType":"YulBlock","src":"546:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:28"},"nodeType":"YulFunctionCall","src":"556:12:28"},"nodeType":"YulExpressionStatement","src":"556:12:28"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:28"},{"body":{"nodeType":"YulBlock","src":"628:54:28","statements":[{"nodeType":"YulAssignment","src":"638:38:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:28"},"nodeType":"YulFunctionCall","src":"652:14:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:28"},"nodeType":"YulFunctionCall","src":"668:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:28"},"nodeType":"YulFunctionCall","src":"648:28:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:28"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:28","type":""}],"src":"580:102:28"},{"body":{"nodeType":"YulBlock","src":"716:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:28"},"nodeType":"YulFunctionCall","src":"726:88:28"},"nodeType":"YulExpressionStatement","src":"726:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:28"},"nodeType":"YulFunctionCall","src":"823:15:28"},"nodeType":"YulExpressionStatement","src":"823:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:28"},"nodeType":"YulFunctionCall","src":"847:15:28"},"nodeType":"YulExpressionStatement","src":"847:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:28"},{"body":{"nodeType":"YulBlock","src":"917:238:28","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:28"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:28"},"nodeType":"YulFunctionCall","src":"957:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:28"},"nodeType":"YulFunctionCall","src":"945:40:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:28"},"nodeType":"YulFunctionCall","src":"1098:18:28"},"nodeType":"YulExpressionStatement","src":"1098:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:28"},"nodeType":"YulFunctionCall","src":"1036:34:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:28"},"nodeType":"YulFunctionCall","src":"1072:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:28"},"nodeType":"YulFunctionCall","src":"1033:62:28"},"nodeType":"YulIf","src":"1030:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:28"},"nodeType":"YulFunctionCall","src":"1127:22:28"},"nodeType":"YulExpressionStatement","src":"1127:22:28"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:28","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:28","type":""}],"src":"874:281:28"},{"body":{"nodeType":"YulBlock","src":"1202:88:28","statements":[{"nodeType":"YulAssignment","src":"1212:30:28","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:28"},"nodeType":"YulFunctionCall","src":"1222:20:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:28"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:28"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:28"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:28"},"nodeType":"YulFunctionCall","src":"1251:33:28"},"nodeType":"YulExpressionStatement","src":"1251:33:28"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:28","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:28","type":""}],"src":"1161:129:28"},{"body":{"nodeType":"YulBlock","src":"1363:241:28","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:28"},"nodeType":"YulFunctionCall","src":"1470:18:28"},"nodeType":"YulExpressionStatement","src":"1470:18:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:28"},"nodeType":"YulFunctionCall","src":"1437:30:28"},"nodeType":"YulIf","src":"1434:56:28"},{"nodeType":"YulAssignment","src":"1500:37:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:28"},"nodeType":"YulFunctionCall","src":"1508:29:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:28"}]},{"nodeType":"YulAssignment","src":"1574:23:28","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:28"},"nodeType":"YulFunctionCall","src":"1582:15:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:28"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:28","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:28","type":""}],"src":"1296:308:28"},{"body":{"nodeType":"YulBlock","src":"1672:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:28"},"nodeType":"YulFunctionCall","src":"1772:11:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:28"},"nodeType":"YulFunctionCall","src":"1791:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:28"},"nodeType":"YulFunctionCall","src":"1785:18:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:28"},"nodeType":"YulFunctionCall","src":"1765:39:28"},"nodeType":"YulExpressionStatement","src":"1765:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:28"},"nodeType":"YulFunctionCall","src":"1709:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:28","statements":[{"nodeType":"YulAssignment","src":"1725:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:28"},"nodeType":"YulFunctionCall","src":"1730:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:28","statements":[]},"src":"1701:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:28"},"nodeType":"YulFunctionCall","src":"1830:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:28"},"nodeType":"YulFunctionCall","src":"1823:27:28"},"nodeType":"YulExpressionStatement","src":"1823:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:28","type":""}],"src":"1610:246:28"},{"body":{"nodeType":"YulBlock","src":"1957:339:28","statements":[{"nodeType":"YulAssignment","src":"1967:75:28","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:28"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:28"},"nodeType":"YulFunctionCall","src":"1992:49:28"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:28"},"nodeType":"YulFunctionCall","src":"1976:66:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:28"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:28"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:28"},"nodeType":"YulFunctionCall","src":"2051:21:28"},"nodeType":"YulExpressionStatement","src":"2051:21:28"},{"nodeType":"YulVariableDeclaration","src":"2081:27:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:28"},"nodeType":"YulFunctionCall","src":"2092:16:28"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:28"},"nodeType":"YulFunctionCall","src":"2148:79:28"},"nodeType":"YulExpressionStatement","src":"2148:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:28"},"nodeType":"YulFunctionCall","src":"2123:16:28"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:28"},"nodeType":"YulFunctionCall","src":"2120:25:28"},"nodeType":"YulIf","src":"2117:112:28"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:28"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:28"},"nodeType":"YulFunctionCall","src":"2238:52:28"},"nodeType":"YulExpressionStatement","src":"2238:52:28"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:28","type":""}],"src":"1862:434:28"},{"body":{"nodeType":"YulBlock","src":"2389:282:28","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:28"},"nodeType":"YulFunctionCall","src":"2440:79:28"},"nodeType":"YulExpressionStatement","src":"2440:79:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:28"},"nodeType":"YulFunctionCall","src":"2413:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:28"},"nodeType":"YulFunctionCall","src":"2409:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:28"},"nodeType":"YulFunctionCall","src":"2402:35:28"},"nodeType":"YulIf","src":"2399:122:28"},{"nodeType":"YulVariableDeclaration","src":"2530:27:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:28"},"nodeType":"YulFunctionCall","src":"2544:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:28","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:28","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:28"},"nodeType":"YulFunctionCall","src":"2634:17:28"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:28"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:28"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:28"},"nodeType":"YulFunctionCall","src":"2575:90:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:28"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:28","type":""}],"src":"2316:355:28"},{"body":{"nodeType":"YulBlock","src":"2791:739:28","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:28"},"nodeType":"YulFunctionCall","src":"2839:79:28"},"nodeType":"YulExpressionStatement","src":"2839:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:28"},"nodeType":"YulFunctionCall","src":"2808:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:28"},"nodeType":"YulFunctionCall","src":"2804:32:28"},"nodeType":"YulIf","src":"2801:119:28"},{"nodeType":"YulBlock","src":"2930:291:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:28"},"nodeType":"YulFunctionCall","src":"2965:17:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:28"},"nodeType":"YulFunctionCall","src":"2959:24:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:28"},"nodeType":"YulFunctionCall","src":"3032:79:28"},"nodeType":"YulExpressionStatement","src":"3032:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:28"},"nodeType":"YulFunctionCall","src":"2999:30:28"},"nodeType":"YulIf","src":"2996:117:28"},{"nodeType":"YulAssignment","src":"3127:84:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:28"},"nodeType":"YulFunctionCall","src":"3179:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:28"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:28"},"nodeType":"YulFunctionCall","src":"3137:74:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:28"}]}]},{"nodeType":"YulBlock","src":"3231:292:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:28"},"nodeType":"YulFunctionCall","src":"3266:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:28"},"nodeType":"YulFunctionCall","src":"3260:25:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:28"},"nodeType":"YulFunctionCall","src":"3334:79:28"},"nodeType":"YulExpressionStatement","src":"3334:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:28"},"nodeType":"YulFunctionCall","src":"3301:30:28"},"nodeType":"YulIf","src":"3298:117:28"},{"nodeType":"YulAssignment","src":"3429:84:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:28"},"nodeType":"YulFunctionCall","src":"3481:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:28"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:28"},"nodeType":"YulFunctionCall","src":"3439:74:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:28"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:28","type":""}],"src":"2677:853:28"},{"body":{"nodeType":"YulBlock","src":"3595:40:28","statements":[{"nodeType":"YulAssignment","src":"3606:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:28"},"nodeType":"YulFunctionCall","src":"3616:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:28"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:28","type":""}],"src":"3536:99:28"},{"body":{"nodeType":"YulBlock","src":"3669:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:28"},"nodeType":"YulFunctionCall","src":"3679:88:28"},"nodeType":"YulExpressionStatement","src":"3679:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:28"},"nodeType":"YulFunctionCall","src":"3776:15:28"},"nodeType":"YulExpressionStatement","src":"3776:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:28"},"nodeType":"YulFunctionCall","src":"3800:15:28"},"nodeType":"YulExpressionStatement","src":"3800:15:28"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:28"},{"body":{"nodeType":"YulBlock","src":"3878:269:28","statements":[{"nodeType":"YulAssignment","src":"3888:22:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:28","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:28"},"nodeType":"YulFunctionCall","src":"3898:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:28"},"nodeType":"YulFunctionCall","src":"3945:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:28","statements":[{"nodeType":"YulAssignment","src":"4010:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:28"},"nodeType":"YulFunctionCall","src":"4020:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:28"},"nodeType":"YulFunctionCall","src":"3969:26:28"},"nodeType":"YulIf","src":"3966:81:28"},{"body":{"nodeType":"YulBlock","src":"4099:42:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:28"},"nodeType":"YulFunctionCall","src":"4113:18:28"},"nodeType":"YulExpressionStatement","src":"4113:18:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:28"},"nodeType":"YulFunctionCall","src":"4083:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:28"},"nodeType":"YulFunctionCall","src":"4060:38:28"},"nodeType":"YulIf","src":"4057:84:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:28","type":""}],"src":"3827:320:28"},{"body":{"nodeType":"YulBlock","src":"4207:87:28","statements":[{"nodeType":"YulAssignment","src":"4217:11:28","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:28"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:28","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:28"},"nodeType":"YulFunctionCall","src":"4238:14:28"},"nodeType":"YulExpressionStatement","src":"4238:14:28"},{"nodeType":"YulAssignment","src":"4261:26:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:28"},"nodeType":"YulFunctionCall","src":"4269:18:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:28"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:28","type":""}],"src":"4153:141:28"},{"body":{"nodeType":"YulBlock","src":"4344:49:28","statements":[{"nodeType":"YulAssignment","src":"4354:33:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:28"},"nodeType":"YulFunctionCall","src":"4368:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:28","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:28"},"nodeType":"YulFunctionCall","src":"4364:23:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:28"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:28","type":""}],"src":"4300:93:28"},{"body":{"nodeType":"YulBlock","src":"4452:54:28","statements":[{"nodeType":"YulAssignment","src":"4462:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:28"},"nodeType":"YulFunctionCall","src":"4483:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:28"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:28","type":""}],"src":"4399:107:28"},{"body":{"nodeType":"YulBlock","src":"4588:317:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:28","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:28","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:28"},"nodeType":"YulFunctionCall","src":"4615:18:28"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:28","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:28"},"nodeType":"YulFunctionCall","src":"4654:97:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:28","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:28","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:28"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:28"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:28"},"nodeType":"YulFunctionCall","src":"4772:39:28"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:28"}]},{"nodeType":"YulAssignment","src":"4820:30:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:28"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:28"},"nodeType":"YulFunctionCall","src":"4840:9:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:28"},"nodeType":"YulFunctionCall","src":"4829:21:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:28"}]},{"nodeType":"YulAssignment","src":"4859:40:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:28"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:28"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:28"},"nodeType":"YulFunctionCall","src":"4879:19:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:28"},"nodeType":"YulFunctionCall","src":"4869:30:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:28"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:28","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:28","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:28","type":""}],"src":"4512:393:28"},{"body":{"nodeType":"YulBlock","src":"4956:32:28","statements":[{"nodeType":"YulAssignment","src":"4966:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:28","type":""}],"src":"4911:77:28"},{"body":{"nodeType":"YulBlock","src":"5026:28:28","statements":[{"nodeType":"YulAssignment","src":"5036:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:28"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:28","type":""}],"src":"4994:60:28"},{"body":{"nodeType":"YulBlock","src":"5120:82:28","statements":[{"nodeType":"YulAssignment","src":"5130:66:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:28"},"nodeType":"YulFunctionCall","src":"5170:24:28"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:28"},"nodeType":"YulFunctionCall","src":"5161:34:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:28"},"nodeType":"YulFunctionCall","src":"5143:53:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:28"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:28","type":""}],"src":"5060:142:28"},{"body":{"nodeType":"YulBlock","src":"5255:28:28","statements":[{"nodeType":"YulAssignment","src":"5265:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:28"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:28","type":""}],"src":"5208:75:28"},{"body":{"nodeType":"YulBlock","src":"5365:193:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:28","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:28"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:28"},"nodeType":"YulFunctionCall","src":"5399:39:28"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:28"},"nodeType":"YulFunctionCall","src":"5488:11:28"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:28"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:28"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:28"},"nodeType":"YulFunctionCall","src":"5509:41:28"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:28"},"nodeType":"YulFunctionCall","src":"5460:91:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:28"},"nodeType":"YulFunctionCall","src":"5447:105:28"},"nodeType":"YulExpressionStatement","src":"5447:105:28"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:28","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:28","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:28","type":""}],"src":"5289:269:28"},{"body":{"nodeType":"YulBlock","src":"5613:24:28","statements":[{"nodeType":"YulAssignment","src":"5623:8:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:28","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:28"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:28","type":""}],"src":"5564:73:28"},{"body":{"nodeType":"YulBlock","src":"5696:136:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:28","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:28"},"nodeType":"YulFunctionCall","src":"5720:32:28"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:28"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:28"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:28"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:28"},"nodeType":"YulFunctionCall","src":"5761:65:28"},"nodeType":"YulExpressionStatement","src":"5761:65:28"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:28","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:28","type":""}],"src":"5643:189:28"},{"body":{"nodeType":"YulBlock","src":"5888:136:28","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:28","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:28","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:28"},"nodeType":"YulFunctionCall","src":"5969:39:28"},"nodeType":"YulExpressionStatement","src":"5969:39:28"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:28"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:28"},"nodeType":"YulFunctionCall","src":"5905:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:28","statements":[{"nodeType":"YulAssignment","src":"5922:22:28","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:28"},"nodeType":"YulFunctionCall","src":"5931:13:28"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:28","statements":[]},"src":"5898:120:28"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:28","type":""}],"src":"5838:186:28"},{"body":{"nodeType":"YulBlock","src":"6109:464:28","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:28"},"nodeType":"YulFunctionCall","src":"6165:38:28"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:28","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:28"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:28"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:28"},"nodeType":"YulFunctionCall","src":"6249:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:28"},"nodeType":"YulFunctionCall","src":"6235:44:28"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:28","statements":[{"nodeType":"YulAssignment","src":"6438:23:28","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:28"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:28"},"nodeType":"YulFunctionCall","src":"6417:18:28"},"nodeType":"YulIf","src":"6414:49:28"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:28"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:28"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:28"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:28"},"nodeType":"YulFunctionCall","src":"6532:22:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:28"},"nodeType":"YulFunctionCall","src":"6518:37:28"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:28"},"nodeType":"YulFunctionCall","src":"6476:80:28"},"nodeType":"YulExpressionStatement","src":"6476:80:28"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:28"},"nodeType":"YulFunctionCall","src":"6123:11:28"},"nodeType":"YulIf","src":"6120:446:28"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:28","type":""}],"src":"6030:543:28"},{"body":{"nodeType":"YulBlock","src":"6642:54:28","statements":[{"nodeType":"YulAssignment","src":"6652:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:28"},"nodeType":"YulFunctionCall","src":"6673:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:28"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:28","type":""}],"src":"6579:117:28"},{"body":{"nodeType":"YulBlock","src":"6753:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:28","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:28"},"nodeType":"YulFunctionCall","src":"6808:13:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:28"},"nodeType":"YulFunctionCall","src":"6823:6:28"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:28"},"nodeType":"YulFunctionCall","src":"6779:51:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:28"},"nodeType":"YulFunctionCall","src":"6775:56:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:28","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:28"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:28"},"nodeType":"YulFunctionCall","src":"6850:15:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:28"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:28","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:28","type":""}],"src":"6702:169:28"},{"body":{"nodeType":"YulBlock","src":"6957:214:28","statements":[{"nodeType":"YulAssignment","src":"7090:37:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:28"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:28"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:28"},"nodeType":"YulFunctionCall","src":"7098:29:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:28"}]},{"nodeType":"YulAssignment","src":"7136:29:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:28","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:28"},"nodeType":"YulFunctionCall","src":"7153:11:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:28"},"nodeType":"YulFunctionCall","src":"7144:21:28"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:28","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:28","type":""}],"src":"6876:295:28"},{"body":{"nodeType":"YulBlock","src":"7268:1303:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:28"},"nodeType":"YulFunctionCall","src":"7293:37:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:28"},"nodeType":"YulFunctionCall","src":"7417:18:28"},"nodeType":"YulExpressionStatement","src":"7417:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:28"},"nodeType":"YulFunctionCall","src":"7384:30:28"},"nodeType":"YulIf","src":"7381:56:28"},{"nodeType":"YulVariableDeclaration","src":"7447:52:28","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:28"},"nodeType":"YulFunctionCall","src":"7487:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:28"},"nodeType":"YulFunctionCall","src":"7461:38:28"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:28"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:28"},"nodeType":"YulFunctionCall","src":"7546:67:28"},"nodeType":"YulExpressionStatement","src":"7546:67:28"},{"nodeType":"YulVariableDeclaration","src":"7623:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:28","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:28","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:28","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:28"},"nodeType":"YulFunctionCall","src":"7756:9:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:28"},"nodeType":"YulFunctionCall","src":"7744:22:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:28"},"nodeType":"YulFunctionCall","src":"7794:37:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:28"},"nodeType":"YulFunctionCall","src":"7951:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:28"},"nodeType":"YulFunctionCall","src":"7945:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:28"},"nodeType":"YulFunctionCall","src":"7930:42:28"},"nodeType":"YulExpressionStatement","src":"7930:42:28"},{"nodeType":"YulAssignment","src":"7989:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:28"},"nodeType":"YulFunctionCall","src":"7999:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:28"}]},{"nodeType":"YulAssignment","src":"8030:31:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:28"},"nodeType":"YulFunctionCall","src":"8043:18:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:28"},"nodeType":"YulFunctionCall","src":"7875:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:28","statements":[{"nodeType":"YulAssignment","src":"7892:17:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:28"},"nodeType":"YulFunctionCall","src":"7897:12:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:28","statements":[]},"src":"7867:208:28"},{"body":{"nodeType":"YulBlock","src":"8111:156:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:28"},"nodeType":"YulFunctionCall","src":"8152:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:28"},"nodeType":"YulFunctionCall","src":"8146:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:28"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:28","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:28"},"nodeType":"YulFunctionCall","src":"8234:17:28"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:28"},"nodeType":"YulFunctionCall","src":"8204:48:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:28"},"nodeType":"YulFunctionCall","src":"8189:64:28"},"nodeType":"YulExpressionStatement","src":"8189:64:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:28"},"nodeType":"YulFunctionCall","src":"8091:19:28"},"nodeType":"YulIf","src":"8088:179:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:28"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:28","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:28"},"nodeType":"YulFunctionCall","src":"8297:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:28"},"nodeType":"YulFunctionCall","src":"8293:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:28"},"nodeType":"YulFunctionCall","src":"8280:36:28"},"nodeType":"YulExpressionStatement","src":"8280:36:28"}]},"nodeType":"YulCase","src":"7708:618:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:28","statements":[{"nodeType":"YulAssignment","src":"8412:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:28"},"nodeType":"YulFunctionCall","src":"8427:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:28"},"nodeType":"YulFunctionCall","src":"8421:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:28"},"nodeType":"YulIf","src":"8384:77:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:28"},"nodeType":"YulFunctionCall","src":"8487:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:28"},"nodeType":"YulFunctionCall","src":"8474:81:28"},"nodeType":"YulExpressionStatement","src":"8474:81:28"}]},"nodeType":"YulCase","src":"8335:230:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:28"},"nodeType":"YulFunctionCall","src":"7685:14:28"},"nodeType":"YulSwitch","src":"7678:887:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:28","type":""}],"src":"7176:1395:28"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620014ce380380620014ce8339818101604052810190620000379190620001fa565b818181600390816200004a9190620004ca565b5080600490816200005c9190620004ca565b5050505050620005b1565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000d08262000085565b810181811067ffffffffffffffff82111715620000f257620000f162000096565b5b80604052505050565b60006200010762000067565b9050620001158282620000c5565b919050565b600067ffffffffffffffff82111562000138576200013762000096565b5b620001438262000085565b9050602081019050919050565b60005b838110156200017057808201518184015260208101905062000153565b60008484015250505050565b6000620001936200018d846200011a565b620000fb565b905082815260208101848484011115620001b257620001b162000080565b5b620001bf84828562000150565b509392505050565b600082601f830112620001df57620001de6200007b565b5b8151620001f18482602086016200017c565b91505092915050565b6000806040838503121562000214576200021362000071565b5b600083015167ffffffffffffffff81111562000235576200023462000076565b5b6200024385828601620001c7565b925050602083015167ffffffffffffffff81111562000267576200026662000076565b5b6200027585828601620001c7565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002d257607f821691505b602082108103620002e857620002e76200028a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000313565b6200035e868362000313565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003ab620003a56200039f8462000376565b62000380565b62000376565b9050919050565b6000819050919050565b620003c7836200038a565b620003df620003d682620003b2565b84845462000320565b825550505050565b600090565b620003f6620003e7565b62000403818484620003bc565b505050565b5b818110156200042b576200041f600082620003ec565b60018101905062000409565b5050565b601f8211156200047a576200044481620002ee565b6200044f8462000303565b810160208510156200045f578190505b620004776200046e8562000303565b83018262000408565b50505b505050565b600082821c905092915050565b60006200049f600019846008026200047f565b1980831691505092915050565b6000620004ba83836200048c565b9150826002028217905092915050565b620004d5826200027f565b67ffffffffffffffff811115620004f157620004f062000096565b5b620004fd8254620002b9565b6200050a8282856200042f565b600060209050601f8311600181146200054257600084156200052d578287015190505b620005398582620004ac565b865550620005a9565b601f1984166200055286620002ee565b60005b828110156200057c5784890151825560018201915060208501945060208101905062000555565b868310156200059c578489015162000598601f8916826200048c565b8355505b6001600288020188555050505b505050505050565b610f0d80620005c16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461015d57806370a082311461017957806395d89b41146101a9578063a9059cbb146101c7578063dd62ed3e146101f75761009e565b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100f157806323b872dd1461010f578063313ce5671461013f575b600080fd5b6100ab610227565b6040516100b89190610b61565b60405180910390f35b6100db60048036038101906100d69190610c1c565b6102b9565b6040516100e89190610c77565b60405180910390f35b6100f96102dc565b6040516101069190610ca1565b60405180910390f35b61012960048036038101906101249190610cbc565b6102e6565b6040516101369190610c77565b60405180910390f35b610147610315565b6040516101549190610d2b565b60405180910390f35b61017760048036038101906101729190610c1c565b61031e565b005b610193600480360381019061018e9190610d46565b61032c565b6040516101a09190610ca1565b60405180910390f35b6101b1610374565b6040516101be9190610b61565b60405180910390f35b6101e160048036038101906101dc9190610c1c565b610406565b6040516101ee9190610c77565b60405180910390f35b610211600480360381019061020c9190610d73565b610429565b60405161021e9190610ca1565b60405180910390f35b60606003805461023690610de2565b80601f016020809104026020016040519081016040528092919081815260200182805461026290610de2565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b5050505050905090565b6000806102c46104b0565b90506102d18185856104b8565b600191505092915050565b6000600254905090565b6000806102f16104b0565b90506102fe8582856104ca565b61030985858561055f565b60019150509392505050565b60006012905090565b6103288282610653565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461038390610de2565b80601f01602080910402602001604051908101604052809291908181526020018280546103af90610de2565b80156103fc5780601f106103d1576101008083540402835291602001916103fc565b820191906000526020600020905b8154815290600101906020018083116103df57829003601f168201915b5050505050905090565b6000806104116104b0565b905061041e81858561055f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6104c583838360016106d5565b505050565b60006104d68484610429565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105595781811015610549578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161054093929190610e22565b60405180910390fd5b610558848484840360006106d5565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105d15760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105c89190610e59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106435760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161063a9190610e59565b60405180910390fd5b61064e8383836108ac565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106c55760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106bc9190610e59565b60405180910390fd5b6106d1600083836108ac565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107475760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161073e9190610e59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107b95760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107b09190610e59565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156108a6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161089d9190610ca1565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108fe5780600260008282546108f29190610ea3565b925050819055506109d1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561098a578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161098193929190610e22565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a1a5780600260008282540392505081905550610a67565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ac49190610ca1565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b0b578082015181840152602081019050610af0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b3382610ad1565b610b3d8185610adc565b9350610b4d818560208601610aed565b610b5681610b17565b840191505092915050565b60006020820190508181036000830152610b7b8184610b28565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bb382610b88565b9050919050565b610bc381610ba8565b8114610bce57600080fd5b50565b600081359050610be081610bba565b92915050565b6000819050919050565b610bf981610be6565b8114610c0457600080fd5b50565b600081359050610c1681610bf0565b92915050565b60008060408385031215610c3357610c32610b83565b5b6000610c4185828601610bd1565b9250506020610c5285828601610c07565b9150509250929050565b60008115159050919050565b610c7181610c5c565b82525050565b6000602082019050610c8c6000830184610c68565b92915050565b610c9b81610be6565b82525050565b6000602082019050610cb66000830184610c92565b92915050565b600080600060608486031215610cd557610cd4610b83565b5b6000610ce386828701610bd1565b9350506020610cf486828701610bd1565b9250506040610d0586828701610c07565b9150509250925092565b600060ff82169050919050565b610d2581610d0f565b82525050565b6000602082019050610d406000830184610d1c565b92915050565b600060208284031215610d5c57610d5b610b83565b5b6000610d6a84828501610bd1565b91505092915050565b60008060408385031215610d8a57610d89610b83565b5b6000610d9885828601610bd1565b9250506020610da985828601610bd1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dfa57607f821691505b602082108103610e0d57610e0c610db3565b5b50919050565b610e1c81610ba8565b82525050565b6000606082019050610e376000830186610e13565b610e446020830185610c92565b610e516040830184610c92565b949350505050565b6000602082019050610e6e6000830184610e13565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eae82610be6565b9150610eb983610be6565b9250828201905080821115610ed157610ed0610e74565b5b9291505056fea2646970667358221220683863b45f82a739b40db2eb187364f64a58e0c812030774d392d92b647ed4d264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x14CE CODESIZE SUB DUP1 PUSH3 0x14CE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1FA JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x4CA JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5C SWAP2 SWAP1 PUSH3 0x4CA JUMP JUMPDEST POP POP POP POP POP PUSH3 0x5B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xD0 DUP3 PUSH3 0x85 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xF2 JUMPI PUSH3 0xF1 PUSH3 0x96 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x107 PUSH3 0x67 JUMP JUMPDEST SWAP1 POP PUSH3 0x115 DUP3 DUP3 PUSH3 0xC5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x138 JUMPI PUSH3 0x137 PUSH3 0x96 JUMP JUMPDEST JUMPDEST PUSH3 0x143 DUP3 PUSH3 0x85 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x170 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x153 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x193 PUSH3 0x18D DUP5 PUSH3 0x11A JUMP JUMPDEST PUSH3 0xFB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1B2 JUMPI PUSH3 0x1B1 PUSH3 0x80 JUMP JUMPDEST JUMPDEST PUSH3 0x1BF DUP5 DUP3 DUP6 PUSH3 0x150 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DF JUMPI PUSH3 0x1DE PUSH3 0x7B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1F1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x17C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x214 JUMPI PUSH3 0x213 PUSH3 0x71 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x235 JUMPI PUSH3 0x234 PUSH3 0x76 JUMP JUMPDEST JUMPDEST PUSH3 0x243 DUP6 DUP3 DUP7 ADD PUSH3 0x1C7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x267 JUMPI PUSH3 0x266 PUSH3 0x76 JUMP JUMPDEST JUMPDEST PUSH3 0x275 DUP6 DUP3 DUP7 ADD PUSH3 0x1C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E8 JUMPI PUSH3 0x2E7 PUSH3 0x28A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x352 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x313 JUMP JUMPDEST PUSH3 0x35E DUP7 DUP4 PUSH3 0x313 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3AB PUSH3 0x3A5 PUSH3 0x39F DUP5 PUSH3 0x376 JUMP JUMPDEST PUSH3 0x380 JUMP JUMPDEST PUSH3 0x376 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C7 DUP4 PUSH3 0x38A JUMP JUMPDEST PUSH3 0x3DF PUSH3 0x3D6 DUP3 PUSH3 0x3B2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x320 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F6 PUSH3 0x3E7 JUMP JUMPDEST PUSH3 0x403 DUP2 DUP5 DUP5 PUSH3 0x3BC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x42B JUMPI PUSH3 0x41F PUSH1 0x0 DUP3 PUSH3 0x3EC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x409 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x47A JUMPI PUSH3 0x444 DUP2 PUSH3 0x2EE JUMP JUMPDEST PUSH3 0x44F DUP5 PUSH3 0x303 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x477 PUSH3 0x46E DUP6 PUSH3 0x303 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x408 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4BA DUP4 DUP4 PUSH3 0x48C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D5 DUP3 PUSH3 0x27F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4F1 JUMPI PUSH3 0x4F0 PUSH3 0x96 JUMP JUMPDEST JUMPDEST PUSH3 0x4FD DUP3 SLOAD PUSH3 0x2B9 JUMP JUMPDEST PUSH3 0x50A DUP3 DUP3 DUP6 PUSH3 0x42F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x542 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x52D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x539 DUP6 DUP3 PUSH3 0x4AC JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x552 DUP7 PUSH3 0x2EE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x57C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x555 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x59C JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x598 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x48C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF0D DUP1 PUSH3 0x5C1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x236 SWAP1 PUSH2 0xDE2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x262 SWAP1 PUSH2 0xDE2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x284 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x292 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2C4 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2D1 DUP2 DUP6 DUP6 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2F1 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FE DUP6 DUP3 DUP6 PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x309 DUP6 DUP6 DUP6 PUSH2 0x55F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x328 DUP3 DUP3 PUSH2 0x653 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x383 SWAP1 PUSH2 0xDE2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AF SWAP1 PUSH2 0xDE2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x411 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x41E DUP2 DUP6 DUP6 PUSH2 0x55F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4C5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6D5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D6 DUP5 DUP5 PUSH2 0x429 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x559 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x549 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x540 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x558 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x6D5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x643 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x64E DUP4 DUP4 DUP4 PUSH2 0x8AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D1 PUSH1 0x0 DUP4 DUP4 PUSH2 0x8AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x747 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73E SWAP2 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7B9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B0 SWAP2 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x8A6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8FE JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x98A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA67 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB0B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB33 DUP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0xB3D DUP2 DUP6 PUSH2 0xADC JUMP JUMPDEST SWAP4 POP PUSH2 0xB4D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAED JUMP JUMPDEST PUSH2 0xB56 DUP2 PUSH2 0xB17 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB7B DUP2 DUP5 PUSH2 0xB28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB3 DUP3 PUSH2 0xB88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC3 DUP2 PUSH2 0xBA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xBCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBE0 DUP2 PUSH2 0xBBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF9 DUP2 PUSH2 0xBE6 JUMP JUMPDEST DUP2 EQ PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC16 DUP2 PUSH2 0xBF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC33 JUMPI PUSH2 0xC32 PUSH2 0xB83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC41 DUP6 DUP3 DUP7 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC52 DUP6 DUP3 DUP7 ADD PUSH2 0xC07 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC71 DUP2 PUSH2 0xC5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC9B DUP2 PUSH2 0xBE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCD5 JUMPI PUSH2 0xCD4 PUSH2 0xB83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE3 DUP7 DUP3 DUP8 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCF4 DUP7 DUP3 DUP8 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD05 DUP7 DUP3 DUP8 ADD PUSH2 0xC07 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD25 DUP2 PUSH2 0xD0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD40 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5C JUMPI PUSH2 0xD5B PUSH2 0xB83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD6A DUP5 DUP3 DUP6 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD8A JUMPI PUSH2 0xD89 PUSH2 0xB83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD98 DUP6 DUP3 DUP7 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDA9 DUP6 DUP3 DUP7 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDFA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE0D JUMPI PUSH2 0xE0C PUSH2 0xDB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1C DUP2 PUSH2 0xBA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0xE44 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0xE51 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC92 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEAE DUP3 PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB9 DUP4 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xED1 JUMPI PUSH2 0xED0 PUSH2 0xE74 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x3863B45F82A739B40D 0xB2 0xEB XOR PUSH20 0x64F64A58E0C812030774D392D92B647ED4D26473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"193:366:26:-:0;;;227:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;287:4;293:6;1675:5:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;227:76:26;;193:366;;7:75:28;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;193:366:26:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_722":{"entryPoint":1208,"id":722,"parameterSlots":3,"returnSlots":0},"@_approve_782":{"entryPoint":1749,"id":782,"parameterSlots":4,"returnSlots":0},"@_mint_671":{"entryPoint":1619,"id":671,"parameterSlots":2,"returnSlots":0},"@_msgSender_2270":{"entryPoint":1200,"id":2270,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_830":{"entryPoint":1226,"id":830,"parameterSlots":3,"returnSlots":0},"@_transfer_561":{"entryPoint":1375,"id":561,"parameterSlots":3,"returnSlots":0},"@_update_638":{"entryPoint":2220,"id":638,"parameterSlots":3,"returnSlots":0},"@allowance_458":{"entryPoint":1065,"id":458,"parameterSlots":2,"returnSlots":1},"@approve_482":{"entryPoint":697,"id":482,"parameterSlots":2,"returnSlots":1},"@balanceOf_417":{"entryPoint":812,"id":417,"parameterSlots":1,"returnSlots":1},"@decimals_395":{"entryPoint":789,"id":395,"parameterSlots":0,"returnSlots":1},"@mint_7950":{"entryPoint":798,"id":7950,"parameterSlots":2,"returnSlots":0},"@name_377":{"entryPoint":551,"id":377,"parameterSlots":0,"returnSlots":1},"@symbol_386":{"entryPoint":884,"id":386,"parameterSlots":0,"returnSlots":1},"@totalSupply_404":{"entryPoint":732,"id":404,"parameterSlots":0,"returnSlots":1},"@transferFrom_514":{"entryPoint":742,"id":514,"parameterSlots":3,"returnSlots":1},"@transfer_441":{"entryPoint":1030,"id":441,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3025,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3079,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3398,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3443,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3260,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3100,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3603,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3176,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3218,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3356,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3673,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3618,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3191,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2913,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3233,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3371,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2769,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2780,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3747,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2984,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3164,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2952,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3046,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3343,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2797,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3554,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3700,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3507,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2947,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2839,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3002,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3056,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7360:28","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:28","statements":[{"nodeType":"YulAssignment","src":"77:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:28"},"nodeType":"YulFunctionCall","src":"87:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:28"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:28","type":""}],"src":"7:99:28"},{"body":{"nodeType":"YulBlock","src":"208:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:28"},"nodeType":"YulFunctionCall","src":"218:19:28"},"nodeType":"YulExpressionStatement","src":"218:19:28"},{"nodeType":"YulAssignment","src":"246:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:28"},"nodeType":"YulFunctionCall","src":"261:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:28"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:28","type":""}],"src":"112:169:28"},{"body":{"nodeType":"YulBlock","src":"349:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:28"},"nodeType":"YulFunctionCall","src":"449:11:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:28"},"nodeType":"YulFunctionCall","src":"468:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:28"},"nodeType":"YulFunctionCall","src":"462:18:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:28"},"nodeType":"YulFunctionCall","src":"442:39:28"},"nodeType":"YulExpressionStatement","src":"442:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:28"},"nodeType":"YulFunctionCall","src":"386:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:28","statements":[{"nodeType":"YulAssignment","src":"402:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:28"},"nodeType":"YulFunctionCall","src":"407:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:28","statements":[]},"src":"378:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:28"},"nodeType":"YulFunctionCall","src":"507:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:28"},"nodeType":"YulFunctionCall","src":"500:27:28"},"nodeType":"YulExpressionStatement","src":"500:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:28","type":""}],"src":"287:246:28"},{"body":{"nodeType":"YulBlock","src":"587:54:28","statements":[{"nodeType":"YulAssignment","src":"597:38:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:28"},"nodeType":"YulFunctionCall","src":"611:14:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:28"},"nodeType":"YulFunctionCall","src":"627:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:28"},"nodeType":"YulFunctionCall","src":"607:28:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:28"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:28","type":""}],"src":"539:102:28"},{"body":{"nodeType":"YulBlock","src":"739:285:28","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:28"},"nodeType":"YulFunctionCall","src":"763:39:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:28","type":""}]},{"nodeType":"YulAssignment","src":"811:78:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:28"},"nodeType":"YulFunctionCall","src":"818:71:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:28"},"nodeType":"YulFunctionCall","src":"933:16:28"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:28"},"nodeType":"YulFunctionCall","src":"898:65:28"},"nodeType":"YulExpressionStatement","src":"898:65:28"},{"nodeType":"YulAssignment","src":"972:46:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:28"},"nodeType":"YulFunctionCall","src":"988:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:28"},"nodeType":"YulFunctionCall","src":"979:39:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:28"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:28","type":""}],"src":"647:377:28"},{"body":{"nodeType":"YulBlock","src":"1148:195:28","statements":[{"nodeType":"YulAssignment","src":"1158:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:28"},"nodeType":"YulFunctionCall","src":"1166:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:28"},"nodeType":"YulFunctionCall","src":"1201:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:28"},"nodeType":"YulFunctionCall","src":"1220:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:28"},"nodeType":"YulFunctionCall","src":"1194:47:28"},"nodeType":"YulExpressionStatement","src":"1194:47:28"},{"nodeType":"YulAssignment","src":"1250:86:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:28"},"nodeType":"YulFunctionCall","src":"1258:78:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:28","type":""}],"src":"1030:313:28"},{"body":{"nodeType":"YulBlock","src":"1389:35:28","statements":[{"nodeType":"YulAssignment","src":"1399:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:28"},"nodeType":"YulFunctionCall","src":"1409:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:28"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:28","type":""}],"src":"1349:75:28"},{"body":{"nodeType":"YulBlock","src":"1519:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:28"},"nodeType":"YulFunctionCall","src":"1529:12:28"},"nodeType":"YulExpressionStatement","src":"1529:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:28"},{"body":{"nodeType":"YulBlock","src":"1642:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:28"},"nodeType":"YulFunctionCall","src":"1652:12:28"},"nodeType":"YulExpressionStatement","src":"1652:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:28"},{"body":{"nodeType":"YulBlock","src":"1721:81:28","statements":[{"nodeType":"YulAssignment","src":"1731:65:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:28"},"nodeType":"YulFunctionCall","src":"1742:54:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:28"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:28","type":""}],"src":"1676:126:28"},{"body":{"nodeType":"YulBlock","src":"1853:51:28","statements":[{"nodeType":"YulAssignment","src":"1863:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:28"},"nodeType":"YulFunctionCall","src":"1874:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:28"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:28","type":""}],"src":"1808:96:28"},{"body":{"nodeType":"YulBlock","src":"1953:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:28"},"nodeType":"YulFunctionCall","src":"2012:12:28"},"nodeType":"YulExpressionStatement","src":"2012:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:28"},"nodeType":"YulFunctionCall","src":"1983:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:28"},"nodeType":"YulFunctionCall","src":"1973:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:28"},"nodeType":"YulFunctionCall","src":"1966:43:28"},"nodeType":"YulIf","src":"1963:63:28"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:28","type":""}],"src":"1910:122:28"},{"body":{"nodeType":"YulBlock","src":"2090:87:28","statements":[{"nodeType":"YulAssignment","src":"2100:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:28"},"nodeType":"YulFunctionCall","src":"2109:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:28"},"nodeType":"YulFunctionCall","src":"2138:33:28"},"nodeType":"YulExpressionStatement","src":"2138:33:28"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:28","type":""}],"src":"2038:139:28"},{"body":{"nodeType":"YulBlock","src":"2228:32:28","statements":[{"nodeType":"YulAssignment","src":"2238:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:28","type":""}],"src":"2183:77:28"},{"body":{"nodeType":"YulBlock","src":"2309:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:28"},"nodeType":"YulFunctionCall","src":"2368:12:28"},"nodeType":"YulExpressionStatement","src":"2368:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:28"},"nodeType":"YulFunctionCall","src":"2339:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:28"},"nodeType":"YulFunctionCall","src":"2329:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:28"},"nodeType":"YulFunctionCall","src":"2322:43:28"},"nodeType":"YulIf","src":"2319:63:28"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:28","type":""}],"src":"2266:122:28"},{"body":{"nodeType":"YulBlock","src":"2446:87:28","statements":[{"nodeType":"YulAssignment","src":"2456:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:28"},"nodeType":"YulFunctionCall","src":"2465:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:28"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:28"},"nodeType":"YulFunctionCall","src":"2494:33:28"},"nodeType":"YulExpressionStatement","src":"2494:33:28"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:28","type":""}],"src":"2394:139:28"},{"body":{"nodeType":"YulBlock","src":"2622:391:28","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:28"},"nodeType":"YulFunctionCall","src":"2670:79:28"},"nodeType":"YulExpressionStatement","src":"2670:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:28"},"nodeType":"YulFunctionCall","src":"2639:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:28"},"nodeType":"YulFunctionCall","src":"2635:32:28"},"nodeType":"YulIf","src":"2632:119:28"},{"nodeType":"YulBlock","src":"2761:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:28","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:28"},"nodeType":"YulFunctionCall","src":"2836:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:28"},"nodeType":"YulFunctionCall","src":"2815:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:28"}]}]},{"nodeType":"YulBlock","src":"2888:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:28","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:28"},"nodeType":"YulFunctionCall","src":"2964:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:28"},"nodeType":"YulFunctionCall","src":"2943:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:28","type":""}],"src":"2539:474:28"},{"body":{"nodeType":"YulBlock","src":"3061:48:28","statements":[{"nodeType":"YulAssignment","src":"3071:32:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:28"},"nodeType":"YulFunctionCall","src":"3089:13:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:28"},"nodeType":"YulFunctionCall","src":"3082:21:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:28"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:28","type":""}],"src":"3019:90:28"},{"body":{"nodeType":"YulBlock","src":"3174:50:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:28"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:28"},"nodeType":"YulFunctionCall","src":"3196:21:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:28"},"nodeType":"YulFunctionCall","src":"3184:34:28"},"nodeType":"YulExpressionStatement","src":"3184:34:28"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:28","type":""}],"src":"3115:109:28"},{"body":{"nodeType":"YulBlock","src":"3322:118:28","statements":[{"nodeType":"YulAssignment","src":"3332:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:28"},"nodeType":"YulFunctionCall","src":"3340:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:28"},"nodeType":"YulFunctionCall","src":"3415:17:28"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:28"},"nodeType":"YulFunctionCall","src":"3368:65:28"},"nodeType":"YulExpressionStatement","src":"3368:65:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:28","type":""}],"src":"3230:210:28"},{"body":{"nodeType":"YulBlock","src":"3511:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:28"},"nodeType":"YulFunctionCall","src":"3533:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:28"},"nodeType":"YulFunctionCall","src":"3521:37:28"},"nodeType":"YulExpressionStatement","src":"3521:37:28"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:28","type":""}],"src":"3446:118:28"},{"body":{"nodeType":"YulBlock","src":"3668:124:28","statements":[{"nodeType":"YulAssignment","src":"3678:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:28"},"nodeType":"YulFunctionCall","src":"3686:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:28"},"nodeType":"YulFunctionCall","src":"3767:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:28"},"nodeType":"YulFunctionCall","src":"3714:71:28"},"nodeType":"YulExpressionStatement","src":"3714:71:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:28","type":""}],"src":"3570:222:28"},{"body":{"nodeType":"YulBlock","src":"3898:519:28","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:28"},"nodeType":"YulFunctionCall","src":"3946:79:28"},"nodeType":"YulExpressionStatement","src":"3946:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:28"},"nodeType":"YulFunctionCall","src":"3915:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:28"},"nodeType":"YulFunctionCall","src":"3911:32:28"},"nodeType":"YulIf","src":"3908:119:28"},{"nodeType":"YulBlock","src":"4037:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:28"},"nodeType":"YulFunctionCall","src":"4112:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:28"},"nodeType":"YulFunctionCall","src":"4091:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:28"}]}]},{"nodeType":"YulBlock","src":"4164:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:28"},"nodeType":"YulFunctionCall","src":"4240:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:28"},"nodeType":"YulFunctionCall","src":"4219:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:28"}]}]},{"nodeType":"YulBlock","src":"4292:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:28"},"nodeType":"YulFunctionCall","src":"4368:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:28"},"nodeType":"YulFunctionCall","src":"4347:53:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:28","type":""}],"src":"3798:619:28"},{"body":{"nodeType":"YulBlock","src":"4466:43:28","statements":[{"nodeType":"YulAssignment","src":"4476:27:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:28"},"nodeType":"YulFunctionCall","src":"4487:16:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:28"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:28","type":""}],"src":"4423:86:28"},{"body":{"nodeType":"YulBlock","src":"4576:51:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:28"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:28"},"nodeType":"YulFunctionCall","src":"4598:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:28"},"nodeType":"YulFunctionCall","src":"4586:35:28"},"nodeType":"YulExpressionStatement","src":"4586:35:28"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:28","type":""}],"src":"4515:112:28"},{"body":{"nodeType":"YulBlock","src":"4727:120:28","statements":[{"nodeType":"YulAssignment","src":"4737:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:28"},"nodeType":"YulFunctionCall","src":"4745:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:28"},"nodeType":"YulFunctionCall","src":"4822:17:28"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:28"},"nodeType":"YulFunctionCall","src":"4773:67:28"},"nodeType":"YulExpressionStatement","src":"4773:67:28"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:28","type":""}],"src":"4633:214:28"},{"body":{"nodeType":"YulBlock","src":"4919:263:28","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:28"},"nodeType":"YulFunctionCall","src":"4967:79:28"},"nodeType":"YulExpressionStatement","src":"4967:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:28"},"nodeType":"YulFunctionCall","src":"4936:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:28"},"nodeType":"YulFunctionCall","src":"4932:32:28"},"nodeType":"YulIf","src":"4929:119:28"},{"nodeType":"YulBlock","src":"5058:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:28","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:28"},"nodeType":"YulFunctionCall","src":"5133:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:28"},"nodeType":"YulFunctionCall","src":"5112:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:28"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:28","type":""}],"src":"4853:329:28"},{"body":{"nodeType":"YulBlock","src":"5271:391:28","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:28"},"nodeType":"YulFunctionCall","src":"5319:79:28"},"nodeType":"YulExpressionStatement","src":"5319:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:28"},"nodeType":"YulFunctionCall","src":"5288:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:28"},"nodeType":"YulFunctionCall","src":"5284:32:28"},"nodeType":"YulIf","src":"5281:119:28"},{"nodeType":"YulBlock","src":"5410:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:28","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:28"},"nodeType":"YulFunctionCall","src":"5485:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:28"},"nodeType":"YulFunctionCall","src":"5464:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:28"}]}]},{"nodeType":"YulBlock","src":"5537:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:28","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:28"},"nodeType":"YulFunctionCall","src":"5613:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:28"},"nodeType":"YulFunctionCall","src":"5592:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:28","type":""}],"src":"5188:474:28"},{"body":{"nodeType":"YulBlock","src":"5696:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:28"},"nodeType":"YulFunctionCall","src":"5706:88:28"},"nodeType":"YulExpressionStatement","src":"5706:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:28"},"nodeType":"YulFunctionCall","src":"5803:15:28"},"nodeType":"YulExpressionStatement","src":"5803:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:28"},"nodeType":"YulFunctionCall","src":"5827:15:28"},"nodeType":"YulExpressionStatement","src":"5827:15:28"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:28"},{"body":{"nodeType":"YulBlock","src":"5905:269:28","statements":[{"nodeType":"YulAssignment","src":"5915:22:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:28","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:28"},"nodeType":"YulFunctionCall","src":"5925:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:28"},"nodeType":"YulFunctionCall","src":"5972:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:28","statements":[{"nodeType":"YulAssignment","src":"6037:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:28"},"nodeType":"YulFunctionCall","src":"6047:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:28"},"nodeType":"YulFunctionCall","src":"5996:26:28"},"nodeType":"YulIf","src":"5993:81:28"},{"body":{"nodeType":"YulBlock","src":"6126:42:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:28"},"nodeType":"YulFunctionCall","src":"6140:18:28"},"nodeType":"YulExpressionStatement","src":"6140:18:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:28"},"nodeType":"YulFunctionCall","src":"6110:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:28"},"nodeType":"YulFunctionCall","src":"6087:38:28"},"nodeType":"YulIf","src":"6084:84:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:28","type":""}],"src":"5854:320:28"},{"body":{"nodeType":"YulBlock","src":"6245:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6262:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6285:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6267:17:28"},"nodeType":"YulFunctionCall","src":"6267:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6255:6:28"},"nodeType":"YulFunctionCall","src":"6255:37:28"},"nodeType":"YulExpressionStatement","src":"6255:37:28"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6233:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6240:3:28","type":""}],"src":"6180:118:28"},{"body":{"nodeType":"YulBlock","src":"6458:288:28","statements":[{"nodeType":"YulAssignment","src":"6468:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6480:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6491:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6476:3:28"},"nodeType":"YulFunctionCall","src":"6476:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6468:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6548:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6561:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6572:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6557:3:28"},"nodeType":"YulFunctionCall","src":"6557:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6504:43:28"},"nodeType":"YulFunctionCall","src":"6504:71:28"},"nodeType":"YulExpressionStatement","src":"6504:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6629:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6642:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6653:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6638:3:28"},"nodeType":"YulFunctionCall","src":"6638:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6585:43:28"},"nodeType":"YulFunctionCall","src":"6585:72:28"},"nodeType":"YulExpressionStatement","src":"6585:72:28"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6711:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6724:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6735:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6720:3:28"},"nodeType":"YulFunctionCall","src":"6720:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6667:43:28"},"nodeType":"YulFunctionCall","src":"6667:72:28"},"nodeType":"YulExpressionStatement","src":"6667:72:28"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6414:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6426:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6434:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6442:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6453:4:28","type":""}],"src":"6304:442:28"},{"body":{"nodeType":"YulBlock","src":"6850:124:28","statements":[{"nodeType":"YulAssignment","src":"6860:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6872:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6883:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6868:3:28"},"nodeType":"YulFunctionCall","src":"6868:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6860:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6940:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6953:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6964:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6949:3:28"},"nodeType":"YulFunctionCall","src":"6949:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6896:43:28"},"nodeType":"YulFunctionCall","src":"6896:71:28"},"nodeType":"YulExpressionStatement","src":"6896:71:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6822:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6834:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6845:4:28","type":""}],"src":"6752:222:28"},{"body":{"nodeType":"YulBlock","src":"7008:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7025:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7028:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7018:6:28"},"nodeType":"YulFunctionCall","src":"7018:88:28"},"nodeType":"YulExpressionStatement","src":"7018:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7122:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7125:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7115:6:28"},"nodeType":"YulFunctionCall","src":"7115:15:28"},"nodeType":"YulExpressionStatement","src":"7115:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7146:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7149:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7139:6:28"},"nodeType":"YulFunctionCall","src":"7139:15:28"},"nodeType":"YulExpressionStatement","src":"7139:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6980:180:28"},{"body":{"nodeType":"YulBlock","src":"7210:147:28","statements":[{"nodeType":"YulAssignment","src":"7220:25:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7243:1:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7225:17:28"},"nodeType":"YulFunctionCall","src":"7225:20:28"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7220:1:28"}]},{"nodeType":"YulAssignment","src":"7254:25:28","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7277:1:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7259:17:28"},"nodeType":"YulFunctionCall","src":"7259:20:28"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7254:1:28"}]},{"nodeType":"YulAssignment","src":"7288:16:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7299:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"7302:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7295:3:28"},"nodeType":"YulFunctionCall","src":"7295:9:28"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7288:3:28"}]},{"body":{"nodeType":"YulBlock","src":"7328:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7330:16:28"},"nodeType":"YulFunctionCall","src":"7330:18:28"},"nodeType":"YulExpressionStatement","src":"7330:18:28"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7320:1:28"},{"name":"sum","nodeType":"YulIdentifier","src":"7323:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7317:2:28"},"nodeType":"YulFunctionCall","src":"7317:10:28"},"nodeType":"YulIf","src":"7314:36:28"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7197:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"7200:1:28","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7206:3:28","type":""}],"src":"7166:191:28"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461015d57806370a082311461017957806395d89b41146101a9578063a9059cbb146101c7578063dd62ed3e146101f75761009e565b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100f157806323b872dd1461010f578063313ce5671461013f575b600080fd5b6100ab610227565b6040516100b89190610b61565b60405180910390f35b6100db60048036038101906100d69190610c1c565b6102b9565b6040516100e89190610c77565b60405180910390f35b6100f96102dc565b6040516101069190610ca1565b60405180910390f35b61012960048036038101906101249190610cbc565b6102e6565b6040516101369190610c77565b60405180910390f35b610147610315565b6040516101549190610d2b565b60405180910390f35b61017760048036038101906101729190610c1c565b61031e565b005b610193600480360381019061018e9190610d46565b61032c565b6040516101a09190610ca1565b60405180910390f35b6101b1610374565b6040516101be9190610b61565b60405180910390f35b6101e160048036038101906101dc9190610c1c565b610406565b6040516101ee9190610c77565b60405180910390f35b610211600480360381019061020c9190610d73565b610429565b60405161021e9190610ca1565b60405180910390f35b60606003805461023690610de2565b80601f016020809104026020016040519081016040528092919081815260200182805461026290610de2565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b5050505050905090565b6000806102c46104b0565b90506102d18185856104b8565b600191505092915050565b6000600254905090565b6000806102f16104b0565b90506102fe8582856104ca565b61030985858561055f565b60019150509392505050565b60006012905090565b6103288282610653565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461038390610de2565b80601f01602080910402602001604051908101604052809291908181526020018280546103af90610de2565b80156103fc5780601f106103d1576101008083540402835291602001916103fc565b820191906000526020600020905b8154815290600101906020018083116103df57829003601f168201915b5050505050905090565b6000806104116104b0565b905061041e81858561055f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6104c583838360016106d5565b505050565b60006104d68484610429565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105595781811015610549578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161054093929190610e22565b60405180910390fd5b610558848484840360006106d5565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105d15760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105c89190610e59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106435760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161063a9190610e59565b60405180910390fd5b61064e8383836108ac565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106c55760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106bc9190610e59565b60405180910390fd5b6106d1600083836108ac565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107475760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161073e9190610e59565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107b95760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107b09190610e59565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156108a6578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161089d9190610ca1565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108fe5780600260008282546108f29190610ea3565b925050819055506109d1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561098a578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161098193929190610e22565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a1a5780600260008282540392505081905550610a67565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ac49190610ca1565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b0b578082015181840152602081019050610af0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b3382610ad1565b610b3d8185610adc565b9350610b4d818560208601610aed565b610b5681610b17565b840191505092915050565b60006020820190508181036000830152610b7b8184610b28565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bb382610b88565b9050919050565b610bc381610ba8565b8114610bce57600080fd5b50565b600081359050610be081610bba565b92915050565b6000819050919050565b610bf981610be6565b8114610c0457600080fd5b50565b600081359050610c1681610bf0565b92915050565b60008060408385031215610c3357610c32610b83565b5b6000610c4185828601610bd1565b9250506020610c5285828601610c07565b9150509250929050565b60008115159050919050565b610c7181610c5c565b82525050565b6000602082019050610c8c6000830184610c68565b92915050565b610c9b81610be6565b82525050565b6000602082019050610cb66000830184610c92565b92915050565b600080600060608486031215610cd557610cd4610b83565b5b6000610ce386828701610bd1565b9350506020610cf486828701610bd1565b9250506040610d0586828701610c07565b9150509250925092565b600060ff82169050919050565b610d2581610d0f565b82525050565b6000602082019050610d406000830184610d1c565b92915050565b600060208284031215610d5c57610d5b610b83565b5b6000610d6a84828501610bd1565b91505092915050565b60008060408385031215610d8a57610d89610b83565b5b6000610d9885828601610bd1565b9250506020610da985828601610bd1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610dfa57607f821691505b602082108103610e0d57610e0c610db3565b5b50919050565b610e1c81610ba8565b82525050565b6000606082019050610e376000830186610e13565b610e446020830185610c92565b610e516040830184610c92565b949350505050565b6000602082019050610e6e6000830184610e13565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610eae82610be6565b9150610eb983610be6565b9250828201905080821115610ed157610ed0610e74565b5b9291505056fea2646970667358221220683863b45f82a739b40db2eb187364f64a58e0c812030774d392d92b647ed4d264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x236 SWAP1 PUSH2 0xDE2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x262 SWAP1 PUSH2 0xDE2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x284 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x292 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2C4 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2D1 DUP2 DUP6 DUP6 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2F1 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2FE DUP6 DUP3 DUP6 PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x309 DUP6 DUP6 DUP6 PUSH2 0x55F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x328 DUP3 DUP3 PUSH2 0x653 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x383 SWAP1 PUSH2 0xDE2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AF SWAP1 PUSH2 0xDE2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x411 PUSH2 0x4B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x41E DUP2 DUP6 DUP6 PUSH2 0x55F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4C5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6D5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D6 DUP5 DUP5 PUSH2 0x429 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x559 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x549 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x540 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x558 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x6D5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x643 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x64E DUP4 DUP4 DUP4 PUSH2 0x8AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D1 PUSH1 0x0 DUP4 DUP4 PUSH2 0x8AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x747 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73E SWAP2 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7B9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B0 SWAP2 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x8A6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x89D SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8FE JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x98A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA67 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB0B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAF0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB33 DUP3 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0xB3D DUP2 DUP6 PUSH2 0xADC JUMP JUMPDEST SWAP4 POP PUSH2 0xB4D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAED JUMP JUMPDEST PUSH2 0xB56 DUP2 PUSH2 0xB17 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB7B DUP2 DUP5 PUSH2 0xB28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB3 DUP3 PUSH2 0xB88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC3 DUP2 PUSH2 0xBA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xBCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBE0 DUP2 PUSH2 0xBBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF9 DUP2 PUSH2 0xBE6 JUMP JUMPDEST DUP2 EQ PUSH2 0xC04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC16 DUP2 PUSH2 0xBF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC33 JUMPI PUSH2 0xC32 PUSH2 0xB83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC41 DUP6 DUP3 DUP7 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC52 DUP6 DUP3 DUP7 ADD PUSH2 0xC07 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC71 DUP2 PUSH2 0xC5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC9B DUP2 PUSH2 0xBE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCB6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCD5 JUMPI PUSH2 0xCD4 PUSH2 0xB83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE3 DUP7 DUP3 DUP8 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCF4 DUP7 DUP3 DUP8 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD05 DUP7 DUP3 DUP8 ADD PUSH2 0xC07 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD25 DUP2 PUSH2 0xD0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD40 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5C JUMPI PUSH2 0xD5B PUSH2 0xB83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD6A DUP5 DUP3 DUP6 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD8A JUMPI PUSH2 0xD89 PUSH2 0xB83 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD98 DUP6 DUP3 DUP7 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDA9 DUP6 DUP3 DUP7 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDFA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE0D JUMPI PUSH2 0xE0C PUSH2 0xDB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1C DUP2 PUSH2 0xBA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0xE44 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0xE51 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC92 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEAE DUP3 PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB9 DUP4 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xED1 JUMPI PUSH2 0xED0 PUSH2 0xE74 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x3863B45F82A739B40D 0xB2 0xEB XOR PUSH20 0x64F64A58E0C812030774D392D92B647ED4D26473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"193:366:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;462:95:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;462:95:26:-;528:22;534:7;543:6;528:5;:22::i;:::-;462:95;;:::o;3004:116:5:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:14:-;709:7;735:10;728:17;;656:96;:::o;8726:128:5:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:28:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:118::-;6267:24;6285:5;6267:24;:::i;:::-;6262:3;6255:37;6180:118;;:::o;6304:442::-;6453:4;6491:2;6480:9;6476:18;6468:26;;6504:71;6572:1;6561:9;6557:17;6548:6;6504:71;:::i;:::-;6585:72;6653:2;6642:9;6638:18;6629:6;6585:72;:::i;:::-;6667;6735:2;6724:9;6720:18;6711:6;6667:72;:::i;:::-;6304:442;;;;;;:::o;6752:222::-;6845:4;6883:2;6872:9;6868:18;6860:26;;6896:71;6964:1;6953:9;6949:17;6940:6;6896:71;:::i;:::-;6752:222;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contrat de stablecoin mock pour les tests\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(address,uint256)\":{\"details\":\"Fonction pour cr\\u00e9er des jetons de test\",\"params\":{\"account\":\"Adresse du destinataire\",\"amount\":\"Montant \\u00e0 cr\\u00e9er\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"MockERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/mocks/MockERC20.sol\":{\"keccak256\":\"0x48f4641810cca2e099c6498f518820f1cff8485389ecdacf25a1ddaaae54fe1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac652299a78311cc17a01f7a61f2dad79264846da3288c76b626d1057a0d6c10\",\"dweb:/ipfs/QmQy5Zy5yKf7YMDpxivpwcddmLjNCupdHym85k54hFZpLC\"]}},\"version\":1}"}},"contracts/mocks/MockV3Aggregator.sol":{"MockV3Aggregator":{"abi":[{"inputs":[{"internalType":"uint8","name":"_decimals","type":"uint8"},{"internalType":"int256","name":"_initialAnswer","type":"int256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"getAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"getTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestAnswer","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int256","name":"_answer","type":"int256"}],"name":"updateAnswer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"},{"internalType":"int256","name":"_answer","type":"int256"},{"internalType":"uint256","name":"_timestamp","type":"uint256"},{"internalType":"uint256","name":"_startedAt","type":"uint256"}],"name":"updateRoundData","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_7990":{"entryPoint":null,"id":7990,"parameterSlots":2,"returnSlots":0},"@updateAnswer_8028":{"entryPoint":98,"id":8028,"parameterSlots":1,"returnSlots":0},"abi_decode_t_int256_fromMemory":{"entryPoint":312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8_fromMemory":{"entryPoint":258,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8t_int256_fromMemory":{"entryPoint":333,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_int256":{"entryPoint":279,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":444,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":222,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":454,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":397,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":217,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":289,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":235,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2062:28","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:28","statements":[{"nodeType":"YulAssignment","src":"57:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:28"},"nodeType":"YulFunctionCall","src":"67:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:28"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:28","type":""}],"src":"7:75:28"},{"body":{"nodeType":"YulBlock","src":"177:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:28"},"nodeType":"YulFunctionCall","src":"187:12:28"},"nodeType":"YulExpressionStatement","src":"187:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:28"},{"body":{"nodeType":"YulBlock","src":"300:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:28"},"nodeType":"YulFunctionCall","src":"310:12:28"},"nodeType":"YulExpressionStatement","src":"310:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:28"},{"body":{"nodeType":"YulBlock","src":"377:43:28","statements":[{"nodeType":"YulAssignment","src":"387:27:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"402:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"409:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"398:3:28"},"nodeType":"YulFunctionCall","src":"398:16:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"387:7:28"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"359:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"369:7:28","type":""}],"src":"334:86:28"},{"body":{"nodeType":"YulBlock","src":"467:77:28","statements":[{"body":{"nodeType":"YulBlock","src":"522:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"531:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"534:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"524:6:28"},"nodeType":"YulFunctionCall","src":"524:12:28"},"nodeType":"YulExpressionStatement","src":"524:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"490:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"513:5:28"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"497:15:28"},"nodeType":"YulFunctionCall","src":"497:22:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"487:2:28"},"nodeType":"YulFunctionCall","src":"487:33:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"480:6:28"},"nodeType":"YulFunctionCall","src":"480:41:28"},"nodeType":"YulIf","src":"477:61:28"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"460:5:28","type":""}],"src":"426:118:28"},{"body":{"nodeType":"YulBlock","src":"611:78:28","statements":[{"nodeType":"YulAssignment","src":"621:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"636:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"630:5:28"},"nodeType":"YulFunctionCall","src":"630:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"621:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:28"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"652:24:28"},"nodeType":"YulFunctionCall","src":"652:31:28"},"nodeType":"YulExpressionStatement","src":"652:31:28"}]},"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"589:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"597:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"605:5:28","type":""}],"src":"550:139:28"},{"body":{"nodeType":"YulBlock","src":"739:32:28","statements":[{"nodeType":"YulAssignment","src":"749:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"760:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"749:7:28"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"721:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"731:7:28","type":""}],"src":"695:76:28"},{"body":{"nodeType":"YulBlock","src":"819:78:28","statements":[{"body":{"nodeType":"YulBlock","src":"875:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"884:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"887:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"877:6:28"},"nodeType":"YulFunctionCall","src":"877:12:28"},"nodeType":"YulExpressionStatement","src":"877:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"842:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"866:5:28"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"849:16:28"},"nodeType":"YulFunctionCall","src":"849:23:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"839:2:28"},"nodeType":"YulFunctionCall","src":"839:34:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"832:6:28"},"nodeType":"YulFunctionCall","src":"832:42:28"},"nodeType":"YulIf","src":"829:62:28"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"812:5:28","type":""}],"src":"777:120:28"},{"body":{"nodeType":"YulBlock","src":"965:79:28","statements":[{"nodeType":"YulAssignment","src":"975:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"990:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"984:5:28"},"nodeType":"YulFunctionCall","src":"984:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"975:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1032:5:28"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"1006:25:28"},"nodeType":"YulFunctionCall","src":"1006:32:28"},"nodeType":"YulExpressionStatement","src":"1006:32:28"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"943:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"951:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"959:5:28","type":""}],"src":"903:141:28"},{"body":{"nodeType":"YulBlock","src":"1141:410:28","statements":[{"body":{"nodeType":"YulBlock","src":"1187:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1189:77:28"},"nodeType":"YulFunctionCall","src":"1189:79:28"},"nodeType":"YulExpressionStatement","src":"1189:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1162:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1171:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1158:3:28"},"nodeType":"YulFunctionCall","src":"1158:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1183:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1154:3:28"},"nodeType":"YulFunctionCall","src":"1154:32:28"},"nodeType":"YulIf","src":"1151:119:28"},{"nodeType":"YulBlock","src":"1280:126:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1295:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1309:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1299:6:28","type":""}]},{"nodeType":"YulAssignment","src":"1324:72:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1379:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1364:3:28"},"nodeType":"YulFunctionCall","src":"1364:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1388:7:28"}],"functionName":{"name":"abi_decode_t_uint8_fromMemory","nodeType":"YulIdentifier","src":"1334:29:28"},"nodeType":"YulFunctionCall","src":"1334:62:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1324:6:28"}]}]},{"nodeType":"YulBlock","src":"1416:128:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1431:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1445:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1435:6:28","type":""}]},{"nodeType":"YulAssignment","src":"1461:73:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1506:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1517:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1502:3:28"},"nodeType":"YulFunctionCall","src":"1502:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1526:7:28"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"1471:30:28"},"nodeType":"YulFunctionCall","src":"1471:63:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1461:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint8t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1103:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1114:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1126:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1134:6:28","type":""}],"src":"1050:501:28"},{"body":{"nodeType":"YulBlock","src":"1585:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1602:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1605:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1595:6:28"},"nodeType":"YulFunctionCall","src":"1595:88:28"},"nodeType":"YulExpressionStatement","src":"1595:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1699:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1702:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1692:6:28"},"nodeType":"YulFunctionCall","src":"1692:15:28"},"nodeType":"YulExpressionStatement","src":"1692:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1723:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1726:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1716:6:28"},"nodeType":"YulFunctionCall","src":"1716:15:28"},"nodeType":"YulExpressionStatement","src":"1716:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1557:180:28"},{"body":{"nodeType":"YulBlock","src":"1788:32:28","statements":[{"nodeType":"YulAssignment","src":"1798:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1809:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1798:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1770:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1780:7:28","type":""}],"src":"1743:77:28"},{"body":{"nodeType":"YulBlock","src":"1869:190:28","statements":[{"nodeType":"YulAssignment","src":"1879:33:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1906:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1888:17:28"},"nodeType":"YulFunctionCall","src":"1888:24:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1879:5:28"}]},{"body":{"nodeType":"YulBlock","src":"2002:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2004:16:28"},"nodeType":"YulFunctionCall","src":"2004:18:28"},"nodeType":"YulExpressionStatement","src":"2004:18:28"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1927:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"1934:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1924:2:28"},"nodeType":"YulFunctionCall","src":"1924:77:28"},"nodeType":"YulIf","src":"1921:103:28"},{"nodeType":"YulAssignment","src":"2033:20:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2044:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"2051:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2040:3:28"},"nodeType":"YulFunctionCall","src":"2040:13:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2033:3:28"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1855:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1865:3:28","type":""}],"src":"1826:233:28"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_uint8t_int256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516109583803806109588339818101604052810190610032919061014d565b816000806101000a81548160ff021916908360ff16021790555061005b8161006260201b60201c565b505061020e565b806001819055504260028190555060036000815480929190610083906101c6565b919050555080600460006003548152602001908152602001600020819055504260056000600354815260200190815260200160002081905550426006600060035481526020019081526020016000208190555050565b600080fd5b600060ff82169050919050565b6100f4816100de565b81146100ff57600080fd5b50565b600081519050610111816100eb565b92915050565b6000819050919050565b61012a81610117565b811461013557600080fd5b50565b60008151905061014781610121565b92915050565b60008060408385031215610164576101636100d9565b5b600061017285828601610102565b925050602061018385828601610138565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006101d1826101bc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036102035761020261018d565b5b600182019050919050565b61073b8061021d6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639a6fc8f5116100665780639a6fc8f514610137578063a87a20ce1461016b578063b5ab58dc14610187578063b633620c146101b7578063feaf968c146101e75761009e565b8063313ce567146100a35780634aa2011f146100c157806350d25bcd146100dd578063668a0f02146100fb5780638205bf6a14610119575b600080fd5b6100ab610209565b6040516100b8919061041c565b60405180910390f35b6100db60048036038101906100d691906104ea565b61021a565b005b6100e561028f565b6040516100f29190610560565b60405180910390f35b610103610295565b604051610110919061058a565b60405180910390f35b61012161029b565b60405161012e919061058a565b60405180910390f35b610151600480360381019061014c91906105a5565b6102a1565b6040516101629594939291906105e1565b60405180910390f35b61018560048036038101906101809190610634565b61031e565b005b6101a1600480360381019061019c9190610661565b610395565b6040516101ae9190610560565b60405180910390f35b6101d160048036038101906101cc9190610661565b6103ad565b6040516101de919061058a565b60405180910390f35b6101ef6103c5565b6040516102009594939291906105e1565b60405180910390f35b60008054906101000a900460ff1681565b8369ffffffffffffffffffff16600381905550826001819055508160028190555082600460006003548152602001908152602001600020819055508160056000600354815260200190815260200160002081905550806006600060035481526020019081526020016000208190555050505050565b60015481565b60035481565b60025481565b600080600080600085600460008869ffffffffffffffffffff16815260200190815260200160002054600660008969ffffffffffffffffffff16815260200190815260200160002054600560008a69ffffffffffffffffffff16815260200190815260200160002054899450945094509450945091939590929450565b80600181905550426002819055506003600081548092919061033f906106bd565b919050555080600460006003548152602001908152602001600020819055504260056000600354815260200190815260200160002081905550426006600060035481526020019081526020016000208190555050565b60046020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b600080600080600060035460015460066000600354815260200190815260200160002054600254600354945094509450945094509091929394565b600060ff82169050919050565b61041681610400565b82525050565b6000602082019050610431600083018461040d565b92915050565b600080fd5b600069ffffffffffffffffffff82169050919050565b61045b8161043c565b811461046657600080fd5b50565b60008135905061047881610452565b92915050565b6000819050919050565b6104918161047e565b811461049c57600080fd5b50565b6000813590506104ae81610488565b92915050565b6000819050919050565b6104c7816104b4565b81146104d257600080fd5b50565b6000813590506104e4816104be565b92915050565b6000806000806080858703121561050457610503610437565b5b600061051287828801610469565b94505060206105238782880161049f565b9350506040610534878288016104d5565b9250506060610545878288016104d5565b91505092959194509250565b61055a8161047e565b82525050565b60006020820190506105756000830184610551565b92915050565b610584816104b4565b82525050565b600060208201905061059f600083018461057b565b92915050565b6000602082840312156105bb576105ba610437565b5b60006105c984828501610469565b91505092915050565b6105db8161043c565b82525050565b600060a0820190506105f660008301886105d2565b6106036020830187610551565b610610604083018661057b565b61061d606083018561057b565b61062a60808301846105d2565b9695505050505050565b60006020828403121561064a57610649610437565b5b60006106588482850161049f565b91505092915050565b60006020828403121561067757610676610437565b5b6000610685848285016104d5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106c8826104b4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106fa576106f961068e565b5b60018201905091905056fea26469706673582212205a8aacf67d8fb6da77e374efddb9e3128a4417584957917a88dade4a117b7ae264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x958 CODESIZE SUB DUP1 PUSH2 0x958 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x14D JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x5B DUP2 PUSH2 0x62 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x20E JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x83 SWAP1 PUSH2 0x1C6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4 DUP2 PUSH2 0xDE JUMP JUMPDEST DUP2 EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x111 DUP2 PUSH2 0xEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A DUP2 PUSH2 0x117 JUMP JUMPDEST DUP2 EQ PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x147 DUP2 PUSH2 0x121 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x164 JUMPI PUSH2 0x163 PUSH2 0xD9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172 DUP6 DUP3 DUP7 ADD PUSH2 0x102 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x183 DUP6 DUP3 DUP7 ADD PUSH2 0x138 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1 DUP3 PUSH2 0x1BC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x203 JUMPI PUSH2 0x202 PUSH2 0x18D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73B DUP1 PUSH2 0x21D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A6FC8F5 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9A6FC8F5 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xA87A20CE EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xB633620C EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xFEAF968C EQ PUSH2 0x1E7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x4AA2011F EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x119 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x21A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x5A5 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x634 JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x661 JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x661 JUMP JUMPDEST PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 PUSH1 0x0 DUP10 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x5 PUSH1 0x0 DUP11 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP10 SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x33F SWAP1 PUSH2 0x6BD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x416 DUP2 PUSH2 0x400 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x431 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45B DUP2 PUSH2 0x43C JUMP JUMPDEST DUP2 EQ PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x478 DUP2 PUSH2 0x452 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x491 DUP2 PUSH2 0x47E JUMP JUMPDEST DUP2 EQ PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4AE DUP2 PUSH2 0x488 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C7 DUP2 PUSH2 0x4B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E4 DUP2 PUSH2 0x4BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x504 JUMPI PUSH2 0x503 PUSH2 0x437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x512 DUP8 DUP3 DUP9 ADD PUSH2 0x469 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x523 DUP8 DUP3 DUP9 ADD PUSH2 0x49F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x534 DUP8 DUP3 DUP9 ADD PUSH2 0x4D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x545 DUP8 DUP3 DUP9 ADD PUSH2 0x4D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x55A DUP2 PUSH2 0x47E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x575 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x551 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x584 DUP2 PUSH2 0x4B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x59F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x57B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5BB JUMPI PUSH2 0x5BA PUSH2 0x437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5C9 DUP5 DUP3 DUP6 ADD PUSH2 0x469 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DB DUP2 PUSH2 0x43C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5F6 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x603 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x551 JUMP JUMPDEST PUSH2 0x610 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x57B JUMP JUMPDEST PUSH2 0x61D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x57B JUMP JUMPDEST PUSH2 0x62A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x5D2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64A JUMPI PUSH2 0x649 PUSH2 0x437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x658 DUP5 DUP3 DUP6 ADD PUSH2 0x49F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x677 JUMPI PUSH2 0x676 PUSH2 0x437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x685 DUP5 DUP3 DUP6 ADD PUSH2 0x4D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6C8 DUP3 PUSH2 0x4B4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x6FA JUMPI PUSH2 0x6F9 PUSH2 0x68E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS DUP11 0xAC 0xF6 PUSH30 0x8FB6DA77E374EFDDB9E3128A4417584957917A88DADE4A117B7AE264736F PUSH13 0x63430008140033000000000000 ","sourceMap":"161:2029:27:-:0;;;478:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;551:9;540:8;;:20;;;;;;;;;;;;;;;;;;570:28;583:14;570:12;;;:28;;:::i;:::-;478:127;;161:2029;;611:298;681:7;666:12;:22;;;;716:15;698;:33;;;;741:11;;:13;;;;;;;;;:::i;:::-;;;;;;789:7;764:9;:22;774:11;;764:22;;;;;;;;;;;:32;;;;834:15;806:12;:25;819:11;;806:25;;;;;;;;;;;:43;;;;887:15;859:12;:25;872:11;;859:25;;;;;;;;;;;:43;;;;611:298;:::o;88:117:28:-;197:1;194;187:12;334:86;369:7;409:4;402:5;398:16;387:27;;334:86;;;:::o;426:118::-;497:22;513:5;497:22;:::i;:::-;490:5;487:33;477:61;;534:1;531;524:12;477:61;426:118;:::o;550:139::-;605:5;636:6;630:13;621:22;;652:31;677:5;652:31;:::i;:::-;550:139;;;;:::o;695:76::-;731:7;760:5;749:16;;695:76;;;:::o;777:120::-;849:23;866:5;849:23;:::i;:::-;842:5;839:34;829:62;;887:1;884;877:12;829:62;777:120;:::o;903:141::-;959:5;990:6;984:13;975:22;;1006:32;1032:5;1006:32;:::i;:::-;903:141;;;;:::o;1050:501::-;1126:6;1134;1183:2;1171:9;1162:7;1158:23;1154:32;1151:119;;;1189:79;;:::i;:::-;1151:119;1309:1;1334:62;1388:7;1379:6;1368:9;1364:22;1334:62;:::i;:::-;1324:72;;1280:126;1445:2;1471:63;1526:7;1517:6;1506:9;1502:22;1471:63;:::i;:::-;1461:73;;1416:128;1050:501;;;;;:::o;1557:180::-;1605:77;1602:1;1595:88;1702:4;1699:1;1692:15;1726:4;1723:1;1716:15;1743:77;1780:7;1809:5;1798:16;;1743:77;;;:::o;1826:233::-;1865:3;1888:24;1906:5;1888:24;:::i;:::-;1879:33;;1934:66;1927:5;1924:77;1921:103;;2004:18;;:::i;:::-;1921:103;2051:1;2044:5;2040:13;2033:20;;1826:233;;;:::o;161:2029:27:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@decimals_7956":{"entryPoint":521,"id":7956,"parameterSlots":0,"returnSlots":0},"@getAnswer_7966":{"entryPoint":917,"id":7966,"parameterSlots":0,"returnSlots":0},"@getRoundData_8099":{"entryPoint":673,"id":8099,"parameterSlots":1,"returnSlots":5},"@getTimestamp_7970":{"entryPoint":941,"id":7970,"parameterSlots":0,"returnSlots":0},"@latestAnswer_7958":{"entryPoint":655,"id":7958,"parameterSlots":0,"returnSlots":0},"@latestRoundData_8128":{"entryPoint":965,"id":8128,"parameterSlots":0,"returnSlots":5},"@latestRound_7962":{"entryPoint":661,"id":7962,"parameterSlots":0,"returnSlots":0},"@latestTimestamp_7960":{"entryPoint":667,"id":7960,"parameterSlots":0,"returnSlots":0},"@updateAnswer_8028":{"entryPoint":798,"id":8028,"parameterSlots":1,"returnSlots":0},"@updateRoundData_8070":{"entryPoint":538,"id":8070,"parameterSlots":4,"returnSlots":0},"abi_decode_t_int256":{"entryPoint":1183,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1237,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80":{"entryPoint":1129,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_int256":{"entryPoint":1588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80":{"entryPoint":1445,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256":{"entryPoint":1258,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":1361,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1403,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint80_to_t_uint80_fromStack":{"entryPoint":1490,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":1037,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":1376,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1418,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__to_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__fromStack_reversed":{"entryPoint":1505,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":1052,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_int256":{"entryPoint":1150,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1204,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":1024,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":1084,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":1725,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1678,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1079,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":1160,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1214,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":1106,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5517:28","statements":[{"body":{"nodeType":"YulBlock","src":"50:43:28","statements":[{"nodeType":"YulAssignment","src":"60:27:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"82:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"71:3:28"},"nodeType":"YulFunctionCall","src":"71:16:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"60:7:28"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"42:7:28","type":""}],"src":"7:86:28"},{"body":{"nodeType":"YulBlock","src":"160:51:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"177:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"198:5:28"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"182:15:28"},"nodeType":"YulFunctionCall","src":"182:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"170:6:28"},"nodeType":"YulFunctionCall","src":"170:35:28"},"nodeType":"YulExpressionStatement","src":"170:35:28"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"148:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"155:3:28","type":""}],"src":"99:112:28"},{"body":{"nodeType":"YulBlock","src":"311:120:28","statements":[{"nodeType":"YulAssignment","src":"321:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"333:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"344:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"329:3:28"},"nodeType":"YulFunctionCall","src":"329:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"321:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"397:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"410:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"421:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"406:3:28"},"nodeType":"YulFunctionCall","src":"406:17:28"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"357:39:28"},"nodeType":"YulFunctionCall","src":"357:67:28"},"nodeType":"YulExpressionStatement","src":"357:67:28"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"283:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"295:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"306:4:28","type":""}],"src":"217:214:28"},{"body":{"nodeType":"YulBlock","src":"477:35:28","statements":[{"nodeType":"YulAssignment","src":"487:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"503:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"497:5:28"},"nodeType":"YulFunctionCall","src":"497:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"487:6:28"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"470:6:28","type":""}],"src":"437:75:28"},{"body":{"nodeType":"YulBlock","src":"607:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"627:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"617:6:28"},"nodeType":"YulFunctionCall","src":"617:12:28"},"nodeType":"YulExpressionStatement","src":"617:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"518:117:28"},{"body":{"nodeType":"YulBlock","src":"730:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"747:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"750:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"740:6:28"},"nodeType":"YulFunctionCall","src":"740:12:28"},"nodeType":"YulExpressionStatement","src":"740:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"641:117:28"},{"body":{"nodeType":"YulBlock","src":"808:61:28","statements":[{"nodeType":"YulAssignment","src":"818:45:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"833:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"840:22:28","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"829:3:28"},"nodeType":"YulFunctionCall","src":"829:34:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"818:7:28"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"790:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"800:7:28","type":""}],"src":"764:105:28"},{"body":{"nodeType":"YulBlock","src":"917:78:28","statements":[{"body":{"nodeType":"YulBlock","src":"973:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"982:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"985:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"975:6:28"},"nodeType":"YulFunctionCall","src":"975:12:28"},"nodeType":"YulExpressionStatement","src":"975:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"940:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"964:5:28"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"947:16:28"},"nodeType":"YulFunctionCall","src":"947:23:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"937:2:28"},"nodeType":"YulFunctionCall","src":"937:34:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"930:6:28"},"nodeType":"YulFunctionCall","src":"930:42:28"},"nodeType":"YulIf","src":"927:62:28"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"910:5:28","type":""}],"src":"875:120:28"},{"body":{"nodeType":"YulBlock","src":"1052:86:28","statements":[{"nodeType":"YulAssignment","src":"1062:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1084:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1071:12:28"},"nodeType":"YulFunctionCall","src":"1071:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1062:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1126:5:28"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"1100:25:28"},"nodeType":"YulFunctionCall","src":"1100:32:28"},"nodeType":"YulExpressionStatement","src":"1100:32:28"}]},"name":"abi_decode_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1030:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"1038:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1046:5:28","type":""}],"src":"1001:137:28"},{"body":{"nodeType":"YulBlock","src":"1188:32:28","statements":[{"nodeType":"YulAssignment","src":"1198:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1209:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1198:7:28"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1170:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1180:7:28","type":""}],"src":"1144:76:28"},{"body":{"nodeType":"YulBlock","src":"1268:78:28","statements":[{"body":{"nodeType":"YulBlock","src":"1324:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1333:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1336:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1326:6:28"},"nodeType":"YulFunctionCall","src":"1326:12:28"},"nodeType":"YulExpressionStatement","src":"1326:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1291:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1315:5:28"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"1298:16:28"},"nodeType":"YulFunctionCall","src":"1298:23:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1288:2:28"},"nodeType":"YulFunctionCall","src":"1288:34:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1281:6:28"},"nodeType":"YulFunctionCall","src":"1281:42:28"},"nodeType":"YulIf","src":"1278:62:28"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1261:5:28","type":""}],"src":"1226:120:28"},{"body":{"nodeType":"YulBlock","src":"1403:86:28","statements":[{"nodeType":"YulAssignment","src":"1413:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1435:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1422:12:28"},"nodeType":"YulFunctionCall","src":"1422:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1413:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:28"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"1451:25:28"},"nodeType":"YulFunctionCall","src":"1451:32:28"},"nodeType":"YulExpressionStatement","src":"1451:32:28"}]},"name":"abi_decode_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1381:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"1389:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1397:5:28","type":""}],"src":"1352:137:28"},{"body":{"nodeType":"YulBlock","src":"1540:32:28","statements":[{"nodeType":"YulAssignment","src":"1550:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1561:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1550:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1522:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1532:7:28","type":""}],"src":"1495:77:28"},{"body":{"nodeType":"YulBlock","src":"1621:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"1678:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1687:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1680:6:28"},"nodeType":"YulFunctionCall","src":"1680:12:28"},"nodeType":"YulExpressionStatement","src":"1680:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1644:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1669:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1651:17:28"},"nodeType":"YulFunctionCall","src":"1651:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1641:2:28"},"nodeType":"YulFunctionCall","src":"1641:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1634:6:28"},"nodeType":"YulFunctionCall","src":"1634:43:28"},"nodeType":"YulIf","src":"1631:63:28"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1614:5:28","type":""}],"src":"1578:122:28"},{"body":{"nodeType":"YulBlock","src":"1758:87:28","statements":[{"nodeType":"YulAssignment","src":"1768:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1790:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1777:12:28"},"nodeType":"YulFunctionCall","src":"1777:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1768:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1833:5:28"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1806:26:28"},"nodeType":"YulFunctionCall","src":"1806:33:28"},"nodeType":"YulExpressionStatement","src":"1806:33:28"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1736:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"1744:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1752:5:28","type":""}],"src":"1706:139:28"},{"body":{"nodeType":"YulBlock","src":"1966:646:28","statements":[{"body":{"nodeType":"YulBlock","src":"2013:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2015:77:28"},"nodeType":"YulFunctionCall","src":"2015:79:28"},"nodeType":"YulExpressionStatement","src":"2015:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1987:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1996:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1983:3:28"},"nodeType":"YulFunctionCall","src":"1983:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2008:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1979:3:28"},"nodeType":"YulFunctionCall","src":"1979:33:28"},"nodeType":"YulIf","src":"1976:120:28"},{"nodeType":"YulBlock","src":"2106:116:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2121:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2135:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2125:6:28","type":""}]},{"nodeType":"YulAssignment","src":"2150:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2184:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2195:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2180:3:28"},"nodeType":"YulFunctionCall","src":"2180:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2204:7:28"}],"functionName":{"name":"abi_decode_t_uint80","nodeType":"YulIdentifier","src":"2160:19:28"},"nodeType":"YulFunctionCall","src":"2160:52:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2150:6:28"}]}]},{"nodeType":"YulBlock","src":"2232:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2247:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2261:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2251:6:28","type":""}]},{"nodeType":"YulAssignment","src":"2277:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2311:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2322:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2307:3:28"},"nodeType":"YulFunctionCall","src":"2307:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2331:7:28"}],"functionName":{"name":"abi_decode_t_int256","nodeType":"YulIdentifier","src":"2287:19:28"},"nodeType":"YulFunctionCall","src":"2287:52:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2277:6:28"}]}]},{"nodeType":"YulBlock","src":"2359:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2374:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2388:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2378:6:28","type":""}]},{"nodeType":"YulAssignment","src":"2404:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2439:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2450:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:28"},"nodeType":"YulFunctionCall","src":"2435:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2459:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2414:20:28"},"nodeType":"YulFunctionCall","src":"2414:53:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2404:6:28"}]}]},{"nodeType":"YulBlock","src":"2487:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2502:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2516:2:28","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2506:6:28","type":""}]},{"nodeType":"YulAssignment","src":"2532:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2567:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2578:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2563:3:28"},"nodeType":"YulFunctionCall","src":"2563:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2587:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2542:20:28"},"nodeType":"YulFunctionCall","src":"2542:53:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2532:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1912:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1923:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1935:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1943:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1951:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1959:6:28","type":""}],"src":"1851:761:28"},{"body":{"nodeType":"YulBlock","src":"2681:52:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2698:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2720:5:28"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"2703:16:28"},"nodeType":"YulFunctionCall","src":"2703:23:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2691:6:28"},"nodeType":"YulFunctionCall","src":"2691:36:28"},"nodeType":"YulExpressionStatement","src":"2691:36:28"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2669:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2676:3:28","type":""}],"src":"2618:115:28"},{"body":{"nodeType":"YulBlock","src":"2835:122:28","statements":[{"nodeType":"YulAssignment","src":"2845:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2857:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2868:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2853:3:28"},"nodeType":"YulFunctionCall","src":"2853:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2845:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2923:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2936:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2947:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2932:3:28"},"nodeType":"YulFunctionCall","src":"2932:17:28"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"2881:41:28"},"nodeType":"YulFunctionCall","src":"2881:69:28"},"nodeType":"YulExpressionStatement","src":"2881:69:28"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2807:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2819:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2830:4:28","type":""}],"src":"2739:218:28"},{"body":{"nodeType":"YulBlock","src":"3028:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3045:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3068:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3050:17:28"},"nodeType":"YulFunctionCall","src":"3050:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3038:6:28"},"nodeType":"YulFunctionCall","src":"3038:37:28"},"nodeType":"YulExpressionStatement","src":"3038:37:28"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3016:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3023:3:28","type":""}],"src":"2963:118:28"},{"body":{"nodeType":"YulBlock","src":"3185:124:28","statements":[{"nodeType":"YulAssignment","src":"3195:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3207:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3218:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3203:3:28"},"nodeType":"YulFunctionCall","src":"3203:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3195:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3275:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3288:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3299:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3284:3:28"},"nodeType":"YulFunctionCall","src":"3284:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3231:43:28"},"nodeType":"YulFunctionCall","src":"3231:71:28"},"nodeType":"YulExpressionStatement","src":"3231:71:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3157:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3169:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3180:4:28","type":""}],"src":"3087:222:28"},{"body":{"nodeType":"YulBlock","src":"3380:262:28","statements":[{"body":{"nodeType":"YulBlock","src":"3426:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3428:77:28"},"nodeType":"YulFunctionCall","src":"3428:79:28"},"nodeType":"YulExpressionStatement","src":"3428:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3401:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3410:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3397:3:28"},"nodeType":"YulFunctionCall","src":"3397:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3422:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3393:3:28"},"nodeType":"YulFunctionCall","src":"3393:32:28"},"nodeType":"YulIf","src":"3390:119:28"},{"nodeType":"YulBlock","src":"3519:116:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3534:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3548:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3538:6:28","type":""}]},{"nodeType":"YulAssignment","src":"3563:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3597:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3608:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3593:3:28"},"nodeType":"YulFunctionCall","src":"3593:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3617:7:28"}],"functionName":{"name":"abi_decode_t_uint80","nodeType":"YulIdentifier","src":"3573:19:28"},"nodeType":"YulFunctionCall","src":"3573:52:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3563:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3350:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3361:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3373:6:28","type":""}],"src":"3315:327:28"},{"body":{"nodeType":"YulBlock","src":"3711:52:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3728:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3750:5:28"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"3733:16:28"},"nodeType":"YulFunctionCall","src":"3733:23:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3721:6:28"},"nodeType":"YulFunctionCall","src":"3721:36:28"},"nodeType":"YulExpressionStatement","src":"3721:36:28"}]},"name":"abi_encode_t_uint80_to_t_uint80_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3699:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3706:3:28","type":""}],"src":"3648:115:28"},{"body":{"nodeType":"YulBlock","src":"3973:448:28","statements":[{"nodeType":"YulAssignment","src":"3983:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3995:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4006:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3991:3:28"},"nodeType":"YulFunctionCall","src":"3991:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3983:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4062:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4075:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4086:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4071:3:28"},"nodeType":"YulFunctionCall","src":"4071:17:28"}],"functionName":{"name":"abi_encode_t_uint80_to_t_uint80_fromStack","nodeType":"YulIdentifier","src":"4020:41:28"},"nodeType":"YulFunctionCall","src":"4020:69:28"},"nodeType":"YulExpressionStatement","src":"4020:69:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4141:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4154:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4165:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4150:3:28"},"nodeType":"YulFunctionCall","src":"4150:18:28"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"4099:41:28"},"nodeType":"YulFunctionCall","src":"4099:70:28"},"nodeType":"YulExpressionStatement","src":"4099:70:28"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4223:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4236:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4247:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4232:3:28"},"nodeType":"YulFunctionCall","src":"4232:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4179:43:28"},"nodeType":"YulFunctionCall","src":"4179:72:28"},"nodeType":"YulExpressionStatement","src":"4179:72:28"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"4305:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4318:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4329:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4314:3:28"},"nodeType":"YulFunctionCall","src":"4314:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4261:43:28"},"nodeType":"YulFunctionCall","src":"4261:72:28"},"nodeType":"YulExpressionStatement","src":"4261:72:28"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4385:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4398:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4409:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4394:3:28"},"nodeType":"YulFunctionCall","src":"4394:19:28"}],"functionName":{"name":"abi_encode_t_uint80_to_t_uint80_fromStack","nodeType":"YulIdentifier","src":"4343:41:28"},"nodeType":"YulFunctionCall","src":"4343:71:28"},"nodeType":"YulExpressionStatement","src":"4343:71:28"}]},"name":"abi_encode_tuple_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__to_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3913:9:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3925:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3933:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3941:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3949:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3957:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3968:4:28","type":""}],"src":"3769:652:28"},{"body":{"nodeType":"YulBlock","src":"4492:262:28","statements":[{"body":{"nodeType":"YulBlock","src":"4538:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4540:77:28"},"nodeType":"YulFunctionCall","src":"4540:79:28"},"nodeType":"YulExpressionStatement","src":"4540:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4513:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4522:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4509:3:28"},"nodeType":"YulFunctionCall","src":"4509:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4534:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4505:3:28"},"nodeType":"YulFunctionCall","src":"4505:32:28"},"nodeType":"YulIf","src":"4502:119:28"},{"nodeType":"YulBlock","src":"4631:116:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4646:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4660:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4650:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4675:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4709:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4720:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4705:3:28"},"nodeType":"YulFunctionCall","src":"4705:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4729:7:28"}],"functionName":{"name":"abi_decode_t_int256","nodeType":"YulIdentifier","src":"4685:19:28"},"nodeType":"YulFunctionCall","src":"4685:52:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4675:6:28"}]}]}]},"name":"abi_decode_tuple_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4462:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4473:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4485:6:28","type":""}],"src":"4427:327:28"},{"body":{"nodeType":"YulBlock","src":"4826:263:28","statements":[{"body":{"nodeType":"YulBlock","src":"4872:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4874:77:28"},"nodeType":"YulFunctionCall","src":"4874:79:28"},"nodeType":"YulExpressionStatement","src":"4874:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4847:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4856:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4843:3:28"},"nodeType":"YulFunctionCall","src":"4843:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4868:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4839:3:28"},"nodeType":"YulFunctionCall","src":"4839:32:28"},"nodeType":"YulIf","src":"4836:119:28"},{"nodeType":"YulBlock","src":"4965:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4980:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4994:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4984:6:28","type":""}]},{"nodeType":"YulAssignment","src":"5009:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5044:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"5055:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5040:3:28"},"nodeType":"YulFunctionCall","src":"5040:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5064:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5019:20:28"},"nodeType":"YulFunctionCall","src":"5019:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5009:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4796:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4807:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4819:6:28","type":""}],"src":"4760:329:28"},{"body":{"nodeType":"YulBlock","src":"5123:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5140:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5143:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5133:6:28"},"nodeType":"YulFunctionCall","src":"5133:88:28"},"nodeType":"YulExpressionStatement","src":"5133:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5237:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5240:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5230:6:28"},"nodeType":"YulFunctionCall","src":"5230:15:28"},"nodeType":"YulExpressionStatement","src":"5230:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5261:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5264:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5254:6:28"},"nodeType":"YulFunctionCall","src":"5254:15:28"},"nodeType":"YulExpressionStatement","src":"5254:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5095:180:28"},{"body":{"nodeType":"YulBlock","src":"5324:190:28","statements":[{"nodeType":"YulAssignment","src":"5334:33:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5361:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5343:17:28"},"nodeType":"YulFunctionCall","src":"5343:24:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5334:5:28"}]},{"body":{"nodeType":"YulBlock","src":"5457:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5459:16:28"},"nodeType":"YulFunctionCall","src":"5459:18:28"},"nodeType":"YulExpressionStatement","src":"5459:18:28"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5382:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"5389:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5379:2:28"},"nodeType":"YulFunctionCall","src":"5379:77:28"},"nodeType":"YulIf","src":"5376:103:28"},{"nodeType":"YulAssignment","src":"5488:20:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5499:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"5506:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5495:3:28"},"nodeType":"YulFunctionCall","src":"5495:13:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5488:3:28"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5310:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5320:3:28","type":""}],"src":"5281:233:28"}]},"contents":"{\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint80(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint80_to_t_uint80_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint80(value))\n    }\n\n    function abi_encode_tuple_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__to_t_uint80_t_int256_t_uint256_t_uint256_t_uint80__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint80_to_t_uint80_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint80_to_t_uint80_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c80639a6fc8f5116100665780639a6fc8f514610137578063a87a20ce1461016b578063b5ab58dc14610187578063b633620c146101b7578063feaf968c146101e75761009e565b8063313ce567146100a35780634aa2011f146100c157806350d25bcd146100dd578063668a0f02146100fb5780638205bf6a14610119575b600080fd5b6100ab610209565b6040516100b8919061041c565b60405180910390f35b6100db60048036038101906100d691906104ea565b61021a565b005b6100e561028f565b6040516100f29190610560565b60405180910390f35b610103610295565b604051610110919061058a565b60405180910390f35b61012161029b565b60405161012e919061058a565b60405180910390f35b610151600480360381019061014c91906105a5565b6102a1565b6040516101629594939291906105e1565b60405180910390f35b61018560048036038101906101809190610634565b61031e565b005b6101a1600480360381019061019c9190610661565b610395565b6040516101ae9190610560565b60405180910390f35b6101d160048036038101906101cc9190610661565b6103ad565b6040516101de919061058a565b60405180910390f35b6101ef6103c5565b6040516102009594939291906105e1565b60405180910390f35b60008054906101000a900460ff1681565b8369ffffffffffffffffffff16600381905550826001819055508160028190555082600460006003548152602001908152602001600020819055508160056000600354815260200190815260200160002081905550806006600060035481526020019081526020016000208190555050505050565b60015481565b60035481565b60025481565b600080600080600085600460008869ffffffffffffffffffff16815260200190815260200160002054600660008969ffffffffffffffffffff16815260200190815260200160002054600560008a69ffffffffffffffffffff16815260200190815260200160002054899450945094509450945091939590929450565b80600181905550426002819055506003600081548092919061033f906106bd565b919050555080600460006003548152602001908152602001600020819055504260056000600354815260200190815260200160002081905550426006600060035481526020019081526020016000208190555050565b60046020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b600080600080600060035460015460066000600354815260200190815260200160002054600254600354945094509450945094509091929394565b600060ff82169050919050565b61041681610400565b82525050565b6000602082019050610431600083018461040d565b92915050565b600080fd5b600069ffffffffffffffffffff82169050919050565b61045b8161043c565b811461046657600080fd5b50565b60008135905061047881610452565b92915050565b6000819050919050565b6104918161047e565b811461049c57600080fd5b50565b6000813590506104ae81610488565b92915050565b6000819050919050565b6104c7816104b4565b81146104d257600080fd5b50565b6000813590506104e4816104be565b92915050565b6000806000806080858703121561050457610503610437565b5b600061051287828801610469565b94505060206105238782880161049f565b9350506040610534878288016104d5565b9250506060610545878288016104d5565b91505092959194509250565b61055a8161047e565b82525050565b60006020820190506105756000830184610551565b92915050565b610584816104b4565b82525050565b600060208201905061059f600083018461057b565b92915050565b6000602082840312156105bb576105ba610437565b5b60006105c984828501610469565b91505092915050565b6105db8161043c565b82525050565b600060a0820190506105f660008301886105d2565b6106036020830187610551565b610610604083018661057b565b61061d606083018561057b565b61062a60808301846105d2565b9695505050505050565b60006020828403121561064a57610649610437565b5b60006106588482850161049f565b91505092915050565b60006020828403121561067757610676610437565b5b6000610685848285016104d5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106c8826104b4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106fa576106f961068e565b5b60018201905091905056fea26469706673582212205a8aacf67d8fb6da77e374efddb9e3128a4417584957917a88dade4a117b7ae264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A6FC8F5 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9A6FC8F5 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xA87A20CE EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xB633620C EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xFEAF968C EQ PUSH2 0x1E7 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x4AA2011F EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x119 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x209 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x4EA JUMP JUMPDEST PUSH2 0x21A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x5A5 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x634 JUMP JUMPDEST PUSH2 0x31E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x661 JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x661 JUMP JUMPDEST PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 PUSH1 0x0 DUP10 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x5 PUSH1 0x0 DUP11 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP10 SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x33F SWAP1 PUSH2 0x6BD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x6 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x416 DUP2 PUSH2 0x400 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x431 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x40D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45B DUP2 PUSH2 0x43C JUMP JUMPDEST DUP2 EQ PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x478 DUP2 PUSH2 0x452 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x491 DUP2 PUSH2 0x47E JUMP JUMPDEST DUP2 EQ PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4AE DUP2 PUSH2 0x488 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C7 DUP2 PUSH2 0x4B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E4 DUP2 PUSH2 0x4BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x504 JUMPI PUSH2 0x503 PUSH2 0x437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x512 DUP8 DUP3 DUP9 ADD PUSH2 0x469 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x523 DUP8 DUP3 DUP9 ADD PUSH2 0x49F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x534 DUP8 DUP3 DUP9 ADD PUSH2 0x4D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x545 DUP8 DUP3 DUP9 ADD PUSH2 0x4D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x55A DUP2 PUSH2 0x47E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x575 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x551 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x584 DUP2 PUSH2 0x4B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x59F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x57B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5BB JUMPI PUSH2 0x5BA PUSH2 0x437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5C9 DUP5 DUP3 DUP6 ADD PUSH2 0x469 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5DB DUP2 PUSH2 0x43C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x5F6 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x603 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x551 JUMP JUMPDEST PUSH2 0x610 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x57B JUMP JUMPDEST PUSH2 0x61D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x57B JUMP JUMPDEST PUSH2 0x62A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x5D2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64A JUMPI PUSH2 0x649 PUSH2 0x437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x658 DUP5 DUP3 DUP6 ADD PUSH2 0x49F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x677 JUMPI PUSH2 0x676 PUSH2 0x437 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x685 DUP5 DUP3 DUP6 ADD PUSH2 0x4D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6C8 DUP3 PUSH2 0x4B4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x6FA JUMPI PUSH2 0x6F9 PUSH2 0x68E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS DUP11 0xAC 0xF6 PUSH30 0x8FB6DA77E374EFDDB9E3128A4417584957917A88DADE4A117B7AE264736F PUSH13 0x63430008140033000000000000 ","sourceMap":"161:2029:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;193:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;915:390;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;220:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;288;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;252:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1311:436;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;611:298;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;321:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;370:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1753:435;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;193:21;;;;;;;;;;;;:::o;915:390::-;1082:8;1068:22;;:11;:22;;;;1115:7;1100:12;:22;;;;1150:10;1132:15;:28;;;;1195:7;1170:9;:22;1180:11;;1170:22;;;;;;;;;;;:32;;;;1240:10;1212:12;:25;1225:11;;1212:25;;;;;;;;;;;:38;;;;1288:10;1260:12;:25;1273:11;;1260:25;;;;;;;;;;;:38;;;;915:390;;;;:::o;220:26::-;;;;:::o;288:::-;;;;:::o;252:30::-;;;;:::o;1311:436::-;1410:14;1438:13;1465:17;1496;1527:22;1595:8;1617:9;:19;1627:8;1617:19;;;;;;;;;;;;;;1650:12;:22;1663:8;1650:22;;;;;;;;;;;;;;1686:12;:22;1699:8;1686:22;;;;;;;;;;;;;;1722:8;1574:166;;;;;;;;;;1311:436;;;;;;;:::o;611:298::-;681:7;666:12;:22;;;;716:15;698;:33;;;;741:11;;:13;;;;;;;;;:::i;:::-;;;;;;789:7;764:9;:22;774:11;;764:22;;;;;;;;;;;:32;;;;834:15;806:12;:25;819:11;;806:25;;;;;;;;;;;:43;;;;887:15;859:12;:25;872:11;;859:25;;;;;;;;;;;:43;;;;611:298;:::o;321:43::-;;;;;;;;;;;;;;;;;:::o;370:47::-;;;;;;;;;;;;;;;;;:::o;1753:435::-;1840:14;1868:13;1895:17;1926;1957:22;2032:11;;2058:12;;2084;:25;2097:11;;2084:25;;;;;;;;;;;;2123:15;;2159:11;;2004:177;;;;;;;;;;1753:435;;;;;:::o;7:86:28:-;42:7;82:4;75:5;71:16;60:27;;7:86;;;:::o;99:112::-;182:22;198:5;182:22;:::i;:::-;177:3;170:35;99:112;;:::o;217:214::-;306:4;344:2;333:9;329:18;321:26;;357:67;421:1;410:9;406:17;397:6;357:67;:::i;:::-;217:214;;;;:::o;518:117::-;627:1;624;617:12;764:105;800:7;840:22;833:5;829:34;818:45;;764:105;;;:::o;875:120::-;947:23;964:5;947:23;:::i;:::-;940:5;937:34;927:62;;985:1;982;975:12;927:62;875:120;:::o;1001:137::-;1046:5;1084:6;1071:20;1062:29;;1100:32;1126:5;1100:32;:::i;:::-;1001:137;;;;:::o;1144:76::-;1180:7;1209:5;1198:16;;1144:76;;;:::o;1226:120::-;1298:23;1315:5;1298:23;:::i;:::-;1291:5;1288:34;1278:62;;1336:1;1333;1326:12;1278:62;1226:120;:::o;1352:137::-;1397:5;1435:6;1422:20;1413:29;;1451:32;1477:5;1451:32;:::i;:::-;1352:137;;;;:::o;1495:77::-;1532:7;1561:5;1550:16;;1495:77;;;:::o;1578:122::-;1651:24;1669:5;1651:24;:::i;:::-;1644:5;1641:35;1631:63;;1690:1;1687;1680:12;1631:63;1578:122;:::o;1706:139::-;1752:5;1790:6;1777:20;1768:29;;1806:33;1833:5;1806:33;:::i;:::-;1706:139;;;;:::o;1851:761::-;1935:6;1943;1951;1959;2008:3;1996:9;1987:7;1983:23;1979:33;1976:120;;;2015:79;;:::i;:::-;1976:120;2135:1;2160:52;2204:7;2195:6;2184:9;2180:22;2160:52;:::i;:::-;2150:62;;2106:116;2261:2;2287:52;2331:7;2322:6;2311:9;2307:22;2287:52;:::i;:::-;2277:62;;2232:117;2388:2;2414:53;2459:7;2450:6;2439:9;2435:22;2414:53;:::i;:::-;2404:63;;2359:118;2516:2;2542:53;2587:7;2578:6;2567:9;2563:22;2542:53;:::i;:::-;2532:63;;2487:118;1851:761;;;;;;;:::o;2618:115::-;2703:23;2720:5;2703:23;:::i;:::-;2698:3;2691:36;2618:115;;:::o;2739:218::-;2830:4;2868:2;2857:9;2853:18;2845:26;;2881:69;2947:1;2936:9;2932:17;2923:6;2881:69;:::i;:::-;2739:218;;;;:::o;2963:118::-;3050:24;3068:5;3050:24;:::i;:::-;3045:3;3038:37;2963:118;;:::o;3087:222::-;3180:4;3218:2;3207:9;3203:18;3195:26;;3231:71;3299:1;3288:9;3284:17;3275:6;3231:71;:::i;:::-;3087:222;;;;:::o;3315:327::-;3373:6;3422:2;3410:9;3401:7;3397:23;3393:32;3390:119;;;3428:79;;:::i;:::-;3390:119;3548:1;3573:52;3617:7;3608:6;3597:9;3593:22;3573:52;:::i;:::-;3563:62;;3519:116;3315:327;;;;:::o;3648:115::-;3733:23;3750:5;3733:23;:::i;:::-;3728:3;3721:36;3648:115;;:::o;3769:652::-;3968:4;4006:3;3995:9;3991:19;3983:27;;4020:69;4086:1;4075:9;4071:17;4062:6;4020:69;:::i;:::-;4099:70;4165:2;4154:9;4150:18;4141:6;4099:70;:::i;:::-;4179:72;4247:2;4236:9;4232:18;4223:6;4179:72;:::i;:::-;4261;4329:2;4318:9;4314:18;4305:6;4261:72;:::i;:::-;4343:71;4409:3;4398:9;4394:19;4385:6;4343:71;:::i;:::-;3769:652;;;;;;;;:::o;4427:327::-;4485:6;4534:2;4522:9;4513:7;4509:23;4505:32;4502:119;;;4540:79;;:::i;:::-;4502:119;4660:1;4685:52;4729:7;4720:6;4709:9;4705:22;4685:52;:::i;:::-;4675:62;;4631:116;4427:327;;;;:::o;4760:329::-;4819:6;4868:2;4856:9;4847:7;4843:23;4839:32;4836:119;;;4874:79;;:::i;:::-;4836:119;4994:1;5019:53;5064:7;5055:6;5044:9;5040:22;5019:53;:::i;:::-;5009:63;;4965:117;4760:329;;;;:::o;5095:180::-;5143:77;5140:1;5133:88;5240:4;5237:1;5230:15;5264:4;5261:1;5254:15;5281:233;5320:3;5343:24;5361:5;5343:24;:::i;:::-;5334:33;;5389:66;5382:5;5379:77;5376:103;;5459:18;;:::i;:::-;5376:103;5506:1;5499:5;5495:13;5488:20;;5281:233;;;:::o"},"methodIdentifiers":{"decimals()":"313ce567","getAnswer(uint256)":"b5ab58dc","getRoundData(uint80)":"9a6fc8f5","getTimestamp(uint256)":"b633620c","latestAnswer()":"50d25bcd","latestRound()":"668a0f02","latestRoundData()":"feaf968c","latestTimestamp()":"8205bf6a","updateAnswer(int256)":"a87a20ce","updateRoundData(uint80,int256,uint256,uint256)":"4aa2011f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"_initialAnswer\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_answer\",\"type\":\"int256\"}],\"name\":\"updateAnswer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"_answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startedAt\",\"type\":\"uint256\"}],\"name\":\"updateRoundData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contrat mock pour simuler l'oracle Chainlink dans les tests\",\"kind\":\"dev\",\"methods\":{},\"title\":\"MockV3Aggregator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockV3Aggregator.sol\":\"MockV3Aggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockV3Aggregator.sol\":{\"keccak256\":\"0xf7fb1d4cea3d7f51f33c7b20ff1271b4c95339614344c0b6acdab5df9dbdd85d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80f119d3259bdfd3db76e3442eb42d1e92472aeaaa830eea2cb610332971f1cd\",\"dweb:/ipfs/QmVjJyo4Z4sZYhw1eMSe14z1SskUHsvJvmmgATGww3NDK1\"]}},\"version\":1}"}}}}}